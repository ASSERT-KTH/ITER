bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	4	12	replace
2	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kPackInfo)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	4	12	replace
3	[BUG]  [BUGGY]  [FE]  IOException  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    if    (nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	66	12	replace
4	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [FE]  IOException  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    if    (nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	66	12	replace
5	[BUG]  [BUGGY]  [FE]  IOException  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    if    (nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	66	12	replace
6	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [FE]  IOException  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    if    (nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	66	12	replace
7	[BUG]  [BUGGY]  [FE]  IOException  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    if    (nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	66	12	replace
8	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [FE]  IOException  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    if    (nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	66	12	replace
9	[BUG]  [BUGGY]  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    If(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	non-compiled	[CE]  ';'  expected	7	None	replace
10	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
11	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {	  	non-compiled	[CE]  ';'  expected	62	None	add
12	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
13	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
14	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
15	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  header.peek();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  inputStreamStack  =  header.peek();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  inputStreamStack  =  header.peek();	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
16	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  currentFolderInputStream.peek();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  inputStreamStack  =  currentFolderInputStream.peek();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  inputStreamStack  =  currentFolderInputStream.peek();	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
17	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  this.currentFolderInputStream.peek();  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  inputStreamStack  =  this.currentFolderInputStream.peek();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  inputStreamStack  =  this.currentFolderInputStream.peek();	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
18	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  this.inputStreamStack.peek();  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  inputStreamStack  =  this.inputStreamStack.peek();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  inputStreamStack  =  this.inputStreamStack.peek();	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
19	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  header.readStreamsInfo(nid);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  inputStreamStack  =  header.readStreamsInfo(nid);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  inputStreamStack  =  header.readStreamsInfo(nid);	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
20	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  header.readStreamsInfo();  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  inputStreamStack  =  header.readStreamsInfo();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  inputStreamStack  =  header.readStreamsInfo();	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
21	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  nid.peek();  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  inputStreamStack  =  nid.peek();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  inputStreamStack  =  nid.peek();	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
22	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	79	12	replace
23	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kPackInfo)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	79	12	replace
24	[BUG]  [BUGGY]  If  (nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  If  (nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	If  (nid  ==  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    If    (nid    ==    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  ';'  expected	41	None	replace
25	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
26	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
27	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
28	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
29	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  ';'  expected	27	None	add
30	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
31	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HEader_SIZE  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEader_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEader_SIZE	46	None	replace
32	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEader_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
33	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEader_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	46	12	replace
34	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEader_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	46	12	replace
35	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
36	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [CE]  ';'  expected  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  	non-compiled	[CE]  ';'  expected	56	None	add
37	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE  +  1)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE  +  1)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE  +  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
38	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE  +  1)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE  +  1)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE  +  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
39	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
40	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE  +  1)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE  +  1)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE  +  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
41	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid    ==    SIGNATURE_HEAFDER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE	85	None	replace
42	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  1);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  1);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  1);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
43	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  6);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  6);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  6);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
44	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  7ZSignature);  [CE]  ')'  expected  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  7ZSignature);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  7ZSignature);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  ')'  expected	13	None	replace
45	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  2);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  2);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  2);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
46	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  4);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  4);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  4);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
47	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  3);  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  3);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  3);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
48	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  illegal  start  of  type  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
49	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    =    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	77	12	replace
50	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    =    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	77	12	replace
51	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kPackInfo)    {    if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
52	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kPackInfo)    {    if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
53	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kPackInfo)    {    if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
54	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kPackInfo)    {    if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
55	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kPackInfo)    {    If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
56	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [Delete]  NID.kPackInfo)  {  [CE]  ')'  expected  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [Delete]  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kPackInfo)    {    if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [Delete]  NID.kPackInfo)  {	  	non-compiled	[CE]  ')'  expected	3	None	add
57	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte()  +  1;  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	int  nid  =  header.readUnsignedByte()  +  1;	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
58	[BUG]  [BUGGY]  byte  nid  =  header.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  byte  nid  =  header.readUnsignedByte();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	byte  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
59	[BUG]  [BUGGY]  int  nid  =  header.readEndByte();  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  header.readEndByte();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	int  nid  =  header.readEndByte();	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
60	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	Integer  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
61	[BUG]  [BUGGY]  int  nid  =  header.readInt();  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  header.readInt();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	int  nid  =  header.readInt();	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
62	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	24	12	replace
63	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	24	12	replace
64	[BUG]  [BUGGY]  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	24	12	replace
65	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	24	12	replace
66	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kPackInfo)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    if    (nid    <    SIGNATURE_HEAFDER_SIZE    ||    nid    >    NID.kPackInfo)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE	68	None	replace
67	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEAFTER_SIZE  ||  nid  >  NID.kPackInfo)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFTER_SIZE  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEAFTER_SIZE  ||  nid  >  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEAFTER_SIZE  ||  nid  >  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    if    (nid    <    SIGNATURE_HEAFDER_SIZE    ||    nid    >    NID.kPackInfo)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFTER_SIZE	68	None	replace
68	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.k)  {  [CE]  cannot  find  symbol  k  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.k)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.k)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.z)    {    	non-compiled	[CE]  cannot  find  symbol  k	95	None	replace
69	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.K)  {  [CE]  cannot  find  symbol  K  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.K)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.K)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.z)    {    	non-compiled	[CE]  cannot  find  symbol  K	95	None	replace
70	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.KB)  {  [CE]  cannot  find  symbol  KB  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.KB)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.KB)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.z)    {    	non-compiled	[CE]  cannot  find  symbol  KB	95	None	replace
71	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kPackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
72	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kPackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
73	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kPackInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
74	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kPackInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
75	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kPackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
76	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [CE]  ';'  expected  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kPackInfo)    {    If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {	  	non-compiled	[CE]  ';'  expected	31	None	add
77	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid!=  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid!=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kPackInfo)    {    if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid!=  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
78	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	8	12	replace
79	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [FE]  NoClassDefFoundError  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	8	12	replace
80	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    If    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
81	[BUG]  [BUGGY]  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    If    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    	non-compiled	[CE]  ';'  expected	65	None	replace
82	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	74	12	replace
83	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	74	12	replace
84	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	74	12	replace
85	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	74	12	replace
86	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    if    (nid    <    SIGNATURE_HEAFDER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE	36	None	replace
87	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFTER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFTER_SIZE  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFTER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFTER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    if    (nid    <    SIGNATURE_HEAFDER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFTER_SIZE	36	None	replace
88	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
89	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
90	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
91	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	73	None	add
92	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
93	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
94	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
95	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if  (nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	51	12	replace
96	[BUG]  [BUGGY]  if  (nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  (nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	51	12	replace
97	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
98	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
99	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
100	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
101	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	75	None	add
102	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
103	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
104	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kUnpackInfo,  nid);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kUnpackInfo,  nid);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kUnpackInfo,  nid);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(NID.kUnpackInfo);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
105	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kUnpackInfo);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kUnpackInfo);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kUnpackInfo);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(NID.kUnpackInfo);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
106	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid,  NID.kUnpackInfo);  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid,  NID.kUnpackInfo);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid,  NID.kUnpackInfo);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(NID.kUnpackInfo);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
107	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kUnpackInfo,  NID.kUnpackInfo);  [CE]  illegal  start  of  type  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kUnpackInfo,  NID.kUnpackInfo);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kUnpackInfo,  NID.kUnpackInfo);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(NID.kUnpackInfo);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
108	[BUG]  [BUGGY]  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [CE]  cannot  find  symbol  Nid  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    if    (Nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    	non-compiled	[CE]  cannot  find  symbol  Nid	67	None	replace
109	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEAFDER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE	49	None	replace
110	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEAFDER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
111	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEAFDER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE	49	None	replace
112	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEAFDER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE	49	None	replace
113	[BUG]  [BUGGY]  int  nid  =  NID.kUnpackInfo.length  -  1;  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  NID.kUnpackInfo.length  -  1;  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	int  nid  =  NID.kUnpackInfo.length  -  1;	  int    nid    =    NID.kUnpackInfo.length;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
114	[BUG]  [BUGGY]  int  nid  =  NID.kUnpackInfo.length  +  1;  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  NID.kUnpackInfo.length  +  1;  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	int  nid  =  NID.kUnpackInfo.length  +  1;	  int    nid    =    NID.kUnpackInfo.length;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
115	[BUG]  [BUGGY]  int  nid  =  NID.kUnpackInfo.length  -  2;  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  NID.kUnpackInfo.length  -  2;  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	int  nid  =  NID.kUnpackInfo.length  -  2;	  int    nid    =    NID.kUnpackInfo.length;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
116	[BUG]  [BUGGY]  int  nid  =  NID.kUnpackInfo.length  -  6;  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  NID.kUnpackInfo.length  -  6;  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	int  nid  =  NID.kUnpackInfo.length  -  6;	  int    nid    =    NID.kUnpackInfo.length;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
117	[BUG]  [BUGGY]  int  nid  =  NID.kUnpackInfo.length  -  4;  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  NID.kUnpackInfo.length  -  4;  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	int  nid  =  NID.kUnpackInfo.length  -  4;	  int    nid    =    NID.kUnpackInfo.length;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
118	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
119	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
120	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
121	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
122	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
123	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	26	12	replace
124	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	26	12	replace
125	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kPackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	32	12	replace
126	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kPackInfo)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kPackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	32	12	replace
127	[BUG]  [BUGGY]  If  (nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  If  (nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	If  (nid  <  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    If    (nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  ';'  expected	34	None	replace
128	[BUG]  [BUGGY]  Integer  nid  =  inputStreamStack.size()  -  1;  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  Integer  nid  =  inputStreamStack.size()  -  1;  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	Integer  nid  =  inputStreamStack.size()  -  1;	  Integer    nid    =    inputStreamStack.size();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
129	[BUG]  [BUGGY]  Integer  nid  =  currentFolderInputStream.size();  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  Integer  nid  =  currentFolderInputStream.size();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	Integer  nid  =  currentFolderInputStream.size();	  Integer    nid    =    inputStreamStack.size();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
130	[BUG]  [BUGGY]  Integer  nid  =  header.size();  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  Integer  nid  =  header.size();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	Integer  nid  =  header.size();	  Integer    nid    =    inputStreamStack.size();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
131	[BUG]  [BUGGY]  Integer  nid  =  inputStreamStack.size()  +  1;  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  Integer  nid  =  inputStreamStack.size()  +  1;  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	Integer  nid  =  inputStreamStack.size()  +  1;	  Integer    nid    =    inputStreamStack.size();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
132	[BUG]  [BUGGY]  Integer  nid  =  this.inputStreamStack.size();  [CE]  illegal  start  of  type  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  Integer  nid  =  this.inputStreamStack.size();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	Integer  nid  =  this.inputStreamStack.size();	  Integer    nid    =    inputStreamStack.size();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
133	[BUG]  [BUGGY]  Integer  nid  =  inputStreamStack.size()  -  2;  [CE]  illegal  start  of  type  [FE]                                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  Integer  nid  =  inputStreamStack.size()  -  2;  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	Integer  nid  =  inputStreamStack.size()  -  2;	  Integer    nid    =    inputStreamStack.size();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
134	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
135	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
136	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  If(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  ';'  expected  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  If(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    If(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  ';'  expected	91	None	add
137	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
138	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  >  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  >  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid  >  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
139	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
140	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  List  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	List  <  String>  deferredBlockStreams  =  Lists.newArrayList();	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
141	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(1);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(1);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(1);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
142	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(0);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(0);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(0);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
143	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListIfNull(nid);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListIfNull(nid);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListIfNull(nid);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
144	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithSize(nid);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithSize(nid);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithSize(nid);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
145	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  2)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  2)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  NoClassDefFoundError  	57	12	replace
146	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  2)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  2)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  2)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  NoClassDefFoundError  	57	12	replace
147	[BUG]  [BUGGY]  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  IOException  	57	12	replace
148	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  IOException  	57	12	replace
149	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  1)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  NoClassDefFoundError  	57	12	replace
150	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  1)  {  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  1)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  NoClassDefFoundError  	57	12	replace
151	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE  +  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  NoClassDefFoundError  	57	12	replace
152	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE  +  1)  {  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE  +  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  NoClassDefFoundError  	57	12	replace
153	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HEaDER_SIZE  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEaDER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEaDER_SIZE	47	None	replace
154	[BUG]  [BUGGY]  [FE]  IOException  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kPackInfo  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  <  NID.kPackInfo  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    if    (NID    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	84	12	replace
155	[BUG]  [BUGGY]  if(nid  <  NID.kPackInfo  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kPackInfo  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  NID.kPackInfo  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    if    (NID    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	84	12	replace
156	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
157	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
158	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
159	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
160	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
161	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	71	None	add
162	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEaDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEaDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
163	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	61	12	replace
164	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	61	12	replace
165	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  nid  =  header.readUnsignedByte();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	nid  =  header.readUnsignedByte();	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
166	[BUG]  [BUGGY]  Int  nid  =  header.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  Int  nid  =  header.readUnsignedByte();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	Int  nid  =  header.readUnsignedByte();	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
167	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if  (nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	2	12	replace
168	[BUG]  [BUGGY]  if  (nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  (nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	2	12	replace
169	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  >  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if  (nid  >  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	2	12	replace
170	[BUG]  [BUGGY]  if  (nid  >  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  >  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  (nid  >  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	2	12	replace
171	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
172	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [CE]  ';'  expected  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {	  	non-compiled	[CE]  ';'  expected	93	None	add
173	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE  *  2)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE  *  2)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE  *  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
174	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE  *  2)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE  *  2)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE  *  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
175	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE  *  2)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE  *  2)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE  *  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
176	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
177	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE  *  2)  {  [CE]  illegal  start  of  expression  [FE]                NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE  *  2)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE  *  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
178	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	92	12	replace
179	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	92	12	replace
180	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
181	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    	compilable	  [FE]  IOException  	94	12	replace
182	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    	compilable	  [FE]  IOException  	94	12	replace
183	[BUG]  [BUGGY]  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    	compilable	  [FE]  IOException  	94	12	replace
184	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    	compilable	  [FE]  IOException  	94	12	replace
185	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE  *  2)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE  *  2)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    	compilable	  [FE]  NoClassDefFoundError  	94	12	replace
186	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE  *  2)  {  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE  *  2)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE  *  2)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    	compilable	  [FE]  NoClassDefFoundError  	94	12	replace
187	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
188	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
189	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	60	None	add
190	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
191	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
192	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEAFDER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEAFDER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >  SIGNATURE_HEAFDER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
193	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kPackInfo)    {    if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
194	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {  [CE]  ';'  expected  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kPackInfo)    {    If  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
195	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {  if  (nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {  if  (nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kPackInfo)    {    if  (nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
196	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {  if  (Nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {  if  (Nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kPackInfo)    {    if  (Nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
197	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  |&  nid  >  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  |&  nid  >  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kPackInfo)    {    if  (nid  <  SIGNATURE_HEADER_SIZE  |&  nid  >  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
198	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
199	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
200	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
201	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
202	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	54	None	add
203	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [Delete]  SIGNATURE_HEADER_SIZE)  {  [CE]  ')'  expected  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [Delete]  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [Delete]  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ')'  expected	54	None	add
204	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEaDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEaDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
205	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
206	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
207	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
208	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
209	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
210	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  If(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  ';'  expected  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  If(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    If(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  ';'  expected	29	None	add
211	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	72	12	replace
212	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	72	12	replace
213	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	72	12	replace
214	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	72	12	replace
215	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	72	12	replace
216	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	72	12	replace
217	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    =    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	69	12	replace
218	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    =    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	69	12	replace
219	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
220	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
221	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
222	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	58	None	add
223	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
224	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEaDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEaDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
225	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
226	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
227	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
228	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  >>  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  >>  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  >>  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
229	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
230	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  [BUGGY]  SIGNATURE_HEADER_SIZE)  {  [CE]  ')'  expected  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  [BUGGY]  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  [BUGGY]  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ')'  expected	23	None	add
231	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  If(nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  If(nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE)    {    If(nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	23	None	add
232	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	76	12	replace
233	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	76	12	replace
234	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	76	12	replace
235	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	76	12	replace
236	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	59	12	replace
237	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	59	12	replace
238	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
239	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	59	12	replace
240	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	59	12	replace
241	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
242	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	52	None	add
243	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
244	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEaDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEaDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
245	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEader_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEader_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEader_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
246	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
247	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kUnpackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kUnpackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    	compilable	  [FE]  IOException  	63	12	replace
248	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kUnpackInfo)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kUnpackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kUnpackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    	compilable	  [FE]  IOException  	63	12	replace
249	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	63	12	replace
250	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	63	12	replace
251	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	63	12	replace
252	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	63	12	replace
253	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	63	12	replace
254	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	63	12	replace
255	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if  (nid  ==  NID.kUnpackInfo)  {	  if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    if    (nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	40	12	replace
256	[BUG]  [BUGGY]  if  (nid  ==  NID.kUnpackInfo)  {  [FE]  IOException  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  (nid  ==  NID.kUnpackInfo)  {	  if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    if    (nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	40	12	replace
257	[BUG]  [BUGGY]  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
258	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
259	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_S  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_S  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_S	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
260	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HE  [CE]  illegal  start  of  expression  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HE  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HE	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
261	[BUG]  [BUGGY]  if  (nid  >=  SIGNATURE_HEADER_SIZE)  {  if  (nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  >=  SIGNATURE_HEADER_SIZE)  {  if  (nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    >=    SIGNATURE_HEADER_SIZE)    {    if  (nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
262	[BUG]  [BUGGY]  if  (nid  >=  SIGNATURE_HEADER_SIZE)  {  if  (nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  >=  SIGNATURE_HEADER_SIZE)  {  if  (nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    >=    SIGNATURE_HEADER_SIZE)    {    if  (nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
263	[BUG]  [BUGGY]  if  (nid  >=  SIGNATURE_HEADER_SIZE)  {  if  (nid  >>  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  >=  SIGNATURE_HEADER_SIZE)  {  if  (nid  >>  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    >=    SIGNATURE_HEADER_SIZE)    {    if  (nid  >>  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
264	[BUG]  [BUGGY]  if  (nid  >=  SIGNATURE_HEADER_SIZE)  {  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  >=  SIGNATURE_HEADER_SIZE)  {  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    >=    SIGNATURE_HEADER_SIZE)    {    if  (nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
265	[BUG]  [BUGGY]  if  (nid  >=  SIGNATURE_HEADER_SIZE)  {  If  (nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  >=  SIGNATURE_HEADER_SIZE)  {  If  (nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    >=    SIGNATURE_HEADER_SIZE)    {    If  (nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	82	None	add
266	[BUG]  [BUGGY]  if  (nid  >=  SIGNATURE_HEADER_SIZE)  {  if  (nid  [Delete]  SIGNATURE_HEADER_SIZE)  {  [CE]  ')'  expected  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  >=  SIGNATURE_HEADER_SIZE)  {  if  (nid  [Delete]  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    >=    SIGNATURE_HEADER_SIZE)    {    if  (nid  [Delete]  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ')'  expected	82	None	add
267	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kPackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
268	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kPackInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
269	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kPackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
270	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kPackInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
271	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kPackInfo)    {    If(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  ';'  expected	25	None	add
272	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kPackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
273	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  |&  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  |&  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kPackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  |&  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
274	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStream(nid);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  inputStreamStack  =  getInputStream(nid);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  inputStreamStack  =  getInputStream(nid);	  InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
275	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamSize();  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamSize();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  inputStreamStack  =  getInputStreamSize();	  InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
276	[BUG]  [BUGGY]  InputStream  nid  =  getInputStreamStack();  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  nid  =  getInputStreamStack();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  nid  =  getInputStreamStack();	  InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
277	[BUG]  [BUGGY]  InputStream  currentFolderInputStream  =  getInputStreamStack();  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  currentFolderInputStream  =  getInputStreamStack();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  currentFolderInputStream  =  getInputStreamStack();	  InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
278	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreams();  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  inputStreamStack  =  getInputStreams();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  inputStreamStack  =  getInputStreams();	  InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
279	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(nid  -  1);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(nid  -  1);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(nid  -  1);	  InputStream    inputStreamStack    =    getInputStreamStack(nid);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
280	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(nid  +  1);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(nid  +  1);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(nid  +  1);	  InputStream    inputStreamStack    =    getInputStreamStack(nid);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
281	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(nid,  fileName);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(nid,  fileName);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(nid,  fileName);	  InputStream    inputStreamStack    =    getInputStreamStack(nid);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
282	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(nid,  0);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(nid,  0);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(nid,  0);	  InputStream    inputStreamStack    =    getInputStreamStack(nid);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
283	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderIndex);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderIndex);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(currentFolderIndex);	  InputStream    inputStreamStack    =    getInputStreamStack(nid);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
284	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(nid,  header);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(nid,  header);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(nid,  header);	  InputStream    inputStreamStack    =    getInputStreamStack(nid);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
285	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kPackInfo)    {    if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
286	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [CE]  ';'  expected  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kPackInfo)    {    If  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  ';'  expected	50	None	add
287	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kPackInfo)    {    if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
288	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kPackInfo)    {    if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
289	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  if  (nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  if  (nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kPackInfo)    {    if  (nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
290	[BUG]  [BUGGY]  int  nid  =  currentFolderInputStream.size();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  currentFolderInputStream.size();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	int  nid  =  currentFolderInputStream.size();	  int    nid    =    inputStreamStack.size();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
291	[BUG]  [BUGGY]  int  nid  =  inputStreamStack.size()  -  1;  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  inputStreamStack.size()  -  1;  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	int  nid  =  inputStreamStack.size()  -  1;	  int    nid    =    inputStreamStack.size();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
292	[BUG]  [BUGGY]  int  nid  =  header.size();  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  header.size();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	int  nid  =  header.size();	  int    nid    =    inputStreamStack.size();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
293	[BUG]  [BUGGY]  int  nid  =  this.inputStreamStack.size();  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  this.inputStreamStack.size();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	int  nid  =  this.inputStreamStack.size();	  int    nid    =    inputStreamStack.size();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
294	[BUG]  [BUGGY]  int  nid  =  inputStreamStack.size()  +  1;  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  inputStreamStack.size()  +  1;  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	int  nid  =  inputStreamStack.size()  +  1;	  int    nid    =    inputStreamStack.size();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
295	[BUG]  [BUGGY]  int  nid  =  inputStreamStack.size()  -  2;  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  inputStreamStack.size()  -  2;  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	int  nid  =  inputStreamStack.size()  -  2;	  int    nid    =    inputStreamStack.size();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
296	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE.length)  {  [CE]  int  cannot  be  dereferenced  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE.length)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE.length)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.length)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	70	None	replace
297	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo())  {  [CE]  cannot  find  symbol  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo())  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo())  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.length)    {    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
298	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid  +  1);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid  +  1);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid  +  1);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList(nid);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
299	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid,  fileName);  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid,  fileName);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid,  fileName);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList(nid);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
300	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(fileName);  [CE]  illegal  start  of  type  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(fileName);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(fileName);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList(nid);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
301	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid  +  2);  [CE]  illegal  start  of  type  [FE]                                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid  +  2);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid  +  2);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList(nid);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
302	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid  +  6);  [CE]  illegal  start  of  type  [FE]                                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid  +  6);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid  +  6);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList(nid);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
303	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	21	12	replace
304	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [FE]  NoClassDefFoundError  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	21	12	replace
305	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kPackInfo)    {    if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
306	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kPackInfo)    {    if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
307	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kPackInfo)    {    if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
308	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kPackInfo)    {    if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
309	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kPackInfo)    {    If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {	  	non-compiled	[CE]  ';'  expected	78	None	add
310	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [Delete]  NID.kPackInfo)  {  [CE]  ')'  expected  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [Delete]  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kPackInfo)    {    if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [Delete]  NID.kPackInfo)  {	  	non-compiled	[CE]  ')'  expected	78	None	add
311	[BUG]  [BUGGY]  (nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  not  a  statement  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  (nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	(nid  <  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    (nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  not  a  statement	37	None	replace
312	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  (nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  not  a  statement  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  (nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE)  {  (nid  >  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    (nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  not  a  statement	37	None	replace
313	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  (nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  not  a  statement  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  (nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE)  {  (nid  >=  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    (nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  not  a  statement	37	None	replace
314	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	55	12	replace
315	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	55	12	replace
316	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
317	[BUG]  [BUGGY]  [FE]  IOException  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	55	12	replace
318	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	55	12	replace
319	[BUG]  [BUGGY]  [FE]  IOException  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	55	12	replace
320	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	55	12	replace
321	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
322	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If  (nid  <  0  ||  nid  >  NID.kPackInfo)  {  [CE]  ';'  expected  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If  (nid  <  0  ||  nid  >  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If  (nid  <  0  ||  nid  >  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    If    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    	non-compiled	[CE]  ';'  expected	65	None	replace
323	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  NID.kPackInfo)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  NID.kPackInfo)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  0  ||  nid  >  NID.kPackInfo)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    If    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    	non-compiled	[CE]  ';'  expected	65	None	replace
324	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [CE]  ';'  expected  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    If    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    	non-compiled	[CE]  ';'  expected	65	None	replace
325	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack()  -  1;  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack()  -  1;  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  inputStreamStack  =  getInputStreamStack()  -  1;	  InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
326	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(0);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(0);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(0);	  InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
327	[BUG]  [BUGGY]  [FE]  IOException  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HeADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	87	12	replace
328	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HeADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	87	12	replace
329	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
330	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
331	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If  (nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If  (nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If  (nid  <  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    If    (nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  ';'  expected	34	None	replace
332	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(inputStreamStack);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(inputStreamStack);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(inputStreamStack);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList(nid);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
333	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid  +  3);  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid  +  3);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid  +  3);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList(nid);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
334	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
335	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  0)  {  If(nid  <  0  ||  nid  >  0)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  0)  {  If(nid  <  0  ||  nid  >  0)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  0  ||  nid  >  0)  {  If(nid  <  0  ||  nid  >  0)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
336	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  0  ||  nid  >  0)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  >  0  ||  nid  >  0)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	61	12	replace
337	[BUG]  [BUGGY]  if(nid  >  0  ||  nid  >  0)  {  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  0  ||  nid  >  0)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  >  0  ||  nid  >  0)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	61	12	replace
338	[BUG]  [BUGGY]  [FE]  IOException  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  <  0  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	20	12	replace
339	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  0  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	20	12	replace
340	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  *  2  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  *  2  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    	compilable	  [FE]  NoClassDefFoundError  	94	12	replace
341	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  *  2  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  *  2  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  *  2  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    	compilable	  [FE]  NoClassDefFoundError  	94	12	replace
342	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
343	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  if(NID  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  if(NID  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    if(NID  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
344	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackinfo)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackinfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackinfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
345	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  0  ||  nid  >  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  0  ||  nid  >  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  0  ||  nid  >  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    if    (NID    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
346	[BUG]  [BUGGY]  if  (nid  >=  SIGNATURE_HEADER_SIZE)  {  if  (nid  >=  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  >=  SIGNATURE_HEADER_SIZE)  {  if  (nid  >=  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    >=    SIGNATURE_HEADER_SIZE)    {    if  (nid  >=  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
347	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    If(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
348	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  ';'  expected  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    If(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	non-compiled	[CE]  ';'  expected	7	None	replace
349	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    If(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
350	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEAFDER_SIZE  &&  nid  >  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {  if  (nid  <  SIGNATURE_HEAFDER_SIZE  &&  nid  >  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kPackInfo)    {    if  (nid  <  SIGNATURE_HEAFDER_SIZE  &&  nid  >  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
351	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  0)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  <  0  ||  nid  >  0)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEaDER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	47	12	replace
352	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  0)  {  [FE]  NoClassDefFoundError  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  0)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  0  ||  nid  >  0)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEaDER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	47	12	replace
353	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
354	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if  (nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	4	12	replace
355	[BUG]  [BUGGY]  if  (nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  (nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	4	12	replace
356	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
357	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
358	[BUG]  [BUGGY]  int  nid  =  NID.kUnpackInfo.length  +  6;  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  NID.kUnpackInfo.length  +  6;  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	int  nid  =  NID.kUnpackInfo.length  +  6;	  int    nid    =    NID.kUnpackInfo.length;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
359	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  if  (nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  if  (nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kPackInfo)    {    if  (nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
360	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.SKIP)  {  [CE]  cannot  find  symbol  SKIP  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.SKIP)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.SKIP)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.z)    {    	non-compiled	[CE]  cannot  find  symbol  SKIP	95	None	replace
361	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.bytes)  {  [CE]  cannot  find  symbol  bytes  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.bytes)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.bytes)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.z)    {    	non-compiled	[CE]  cannot  find  symbol  bytes	95	None	replace
362	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.length);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.length);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.length);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(NID.kUnpackInfo);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
363	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.bytes);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.bytes);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.bytes);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(NID.kUnpackInfo);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
364	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  <  =  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  <  =  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  <  =  NID.kPackInfo)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
365	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
366	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  ((  nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)||(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo))  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if  ((  nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)||(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo))  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	2	12	replace
367	[BUG]  [BUGGY]  if  ((  nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)||(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo))  {  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  ((  nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)||(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo))  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  ((  nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)||(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo))  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	2	12	replace
368	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  >  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if  (nid  >  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	2	12	replace
369	[BUG]  [BUGGY]  if  (nid  >  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  >  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  (nid  >  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	2	12	replace
370	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  ((  nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)||(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo))  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if  ((  nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)||(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo))  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	2	12	replace
371	[BUG]  [BUGGY]  if  ((  nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)||(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo))  {  [FE]  NoClassDefFoundError  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  ((  nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)||(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo))  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  ((  nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)||(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kPackInfo))  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	2	12	replace
372	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    If    (nid    ==    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
373	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  IOException  	57	12	replace
374	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  IOException  	57	12	replace
375	[BUG]  [BUGGY]  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  IOException  	57	12	replace
376	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  IOException  	57	12	replace
377	[BUG]  [BUGGY]  boolean  nid  =  header.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  boolean  nid  =  header.readUnsignedByte();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	boolean  nid  =  header.readUnsignedByte();	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
378	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  if  (nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  if  (nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kPackInfo)    {    if  (nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
379	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  NID.kPackInfo)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  NID.kPackInfo)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  0  ||  nid  >  NID.kPackInfo)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    if    (Nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
380	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    if    (Nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
381	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kPackInfo)    {    if(nid  ==  SIGNATURE_HEAFDER_SIZE  &&  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
382	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HeADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HeADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HeADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
383	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithCapacity(nid);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithCapacity(nid);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithCapacity(nid);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
384	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithDelimiter(nid);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithDelimiter(nid);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithDelimiter(nid);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
385	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kHeaderSize)  {  [CE]  cannot  find  symbol  kHeaderSize  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kHeaderSize)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kHeaderSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kHeaderSize	63	None	replace
386	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kLength)  {  [CE]  cannot  find  symbol  kLength  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kLength)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kLength)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.length)    {    	non-compiled	[CE]  cannot  find  symbol  kLength	70	None	replace
387	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackName)  {  [CE]  cannot  find  symbol  kUnpackName  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackName)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackName)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.length)    {    	non-compiled	[CE]  cannot  find  symbol  kUnpackName	70	None	replace
388	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(0);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  header.readUnsignedByte(0);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	int  nid  =  header.readUnsignedByte(0);	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
389	[BUG]  [BUGGY]  int  nid  =  header.getUnsignedByte();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  header.getUnsignedByte();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	int  nid  =  header.getUnsignedByte();	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
390	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(header);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  header.readUnsignedByte(header);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	int  nid  =  header.readUnsignedByte(header);	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
391	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
392	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  int  nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  ';'  expected  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  int  nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    int  nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  ';'  expected	91	None	add
393	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  nextFolderInputStream.peek();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  inputStreamStack  =  nextFolderInputStream.peek();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  inputStreamStack  =  nextFolderInputStream.peek();	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
394	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  file.peek();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  inputStreamStack  =  file.peek();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  inputStreamStack  =  file.peek();	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
395	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  fileName.peek();  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  inputStreamStack  =  fileName.peek();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  inputStreamStack  =  fileName.peek();	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
396	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  1)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  1)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
397	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderInputStream);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderInputStream);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(currentFolderInputStream);	  InputStream    inputStreamStack    =    getInputStreamStack(nid);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
398	[BUG]  [BUGGY]  InputStream  currentFolderInputStream  =  getInputStreamStack(nid);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  currentFolderInputStream  =  getInputStreamStack(nid);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  currentFolderInputStream  =  getInputStreamStack(nid);	  InputStream    inputStreamStack    =    getInputStreamStack(nid);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
399	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderInputStream,  nid);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderInputStream,  nid);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(currentFolderInputStream,  nid);	  InputStream    inputStreamStack    =    getInputStreamStack(nid);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
400	[BUG]  [BUGGY]  InputStream  nid  =  getInputStreamStack(currentFolderInputStream);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  nid  =  getInputStreamStack(currentFolderInputStream);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  nid  =  getInputStreamStack(currentFolderInputStream);	  InputStream    inputStreamStack    =    getInputStreamStack(nid);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
401	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HeADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HeADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >  SIGNATURE_HeADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
402	[BUG]  [BUGGY]  if  (nid  <  =  SIGNATURE_HEADER_SIZE)  {  (nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  =  SIGNATURE_HEADER_SIZE)  {  (nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  (nid  <  =  SIGNATURE_HEADER_SIZE)  {  (nid  <  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    (nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
403	[BUG]  [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  (nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  not  a  statement  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  (nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  (nid  <  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    (nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  not  a  statement	37	None	replace
404	[BUG]  [BUGGY]  if  (nid  >  SIGNATURE_HEADER_SIZE)  {  (nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  not  a  statement  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  >  SIGNATURE_HEADER_SIZE)  {  (nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  (nid  >  SIGNATURE_HEADER_SIZE)  {  (nid  <  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    (nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  not  a  statement	37	None	replace
405	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  *  SIGNATURE_HEADER_SIZE);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  *  SIGNATURE_HEADER_SIZE);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  *  SIGNATURE_HEADER_SIZE);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
406	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  |&  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  |&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  |&  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
407	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEAder_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEAder_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEAder_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
408	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    If(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	non-compiled	[CE]  ';'  expected	7	None	replace
409	[BUG]  [BUGGY]  char  nid  =  header.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  char  nid  =  header.readUnsignedByte();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	char  nid  =  header.readUnsignedByte();	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
410	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kPackInfo)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	92	12	replace
411	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kPackInfo)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kPackInfo)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	92	12	replace
412	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE  +  1)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE  +  1)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE  +  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
413	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
414	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.k1)  {  [CE]  cannot  find  symbol  k1  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.k1)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.k1)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.z)    {    	non-compiled	[CE]  cannot  find  symbol  k1	95	None	replace
415	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid!=  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid!=  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid!=  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
416	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo())  {  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo())  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo())  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kPackInfo)    {    if    (nid    <    SIGNATURE_HEAFDER_SIZE    ||    nid    >    NID.kPackInfo)    {    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
417	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFTER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFTER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFTER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEAFDER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
418	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  +  1  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  +  1  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  NoClassDefFoundError  	57	12	replace
419	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  +  1  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  +  1  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  +  1  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  NoClassDefFoundError  	57	12	replace
420	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  List  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	List  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList(nid);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
421	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack()  +  nid;  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack()  +  nid;  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  inputStreamStack  =  getInputStreamStack()  +  nid;	  InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
422	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedInt();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  header.readUnsignedInt();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	int  nid  =  header.readUnsignedInt();	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
423	[BUG]  [BUGGY]  int  nid  =  this.header.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  this.header.readUnsignedByte();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	int  nid  =  this.header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
424	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
425	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(NID.kPackInfo  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(NID.kPackInfo  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	2	12	replace
426	[BUG]  [BUGGY]  if(NID.kPackInfo  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(NID.kPackInfo  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(NID.kPackInfo  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	2	12	replace
427	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(NID.kPackInfo  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	add	if(NID.kPackInfo  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	2	12	replace
428	[BUG]  [BUGGY]  if(NID.kPackInfo  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(NID.kPackInfo  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(NID.kPackInfo  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	2	12	replace
429	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  this.inputStreams.peek();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  inputStreamStack  =  this.inputStreams.peek();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  inputStreamStack  =  this.inputStreams.peek();	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
430	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  outputStreamStack.peek();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  inputStreamStack  =  outputStreamStack.peek();  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  inputStreamStack  =  outputStreamStack.peek();	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
431	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(nid  *  SIGNATURE_HEADER_SIZE);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(nid  *  SIGNATURE_HEADER_SIZE);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(nid  *  SIGNATURE_HEADER_SIZE);	  InputStream    inputStreamStack    =    getInputStreamStack(nid);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
432	[BUG]  [BUGGY]  InputStream  nid  =  getInputStreamStack(nid);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  nid  =  getInputStreamStack(nid);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  nid  =  getInputStreamStack(nid);	  InputStream    inputStreamStack    =    getInputStreamStack(nid);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
433	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(nid,  currentFolderIndex);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(nid,  currentFolderIndex);  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(nid,  currentFolderIndex);	  InputStream    inputStreamStack    =    getInputStreamStack(nid);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
434	[BUG]  [BUGGY]  int  nid  =  NID.length;  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  NID.length;  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	int  nid  =  NID.length;	  int    nid    =    NID.kUnpackInfo.length;    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
435	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(Nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(Nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	322	322	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(Nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
