bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  nid  =  readUint64(header);  [CE]  possible  loss  of  precision  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  nid  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  nid  =  readUint64(header);	  long    numPackStreams    =    readUint64(header);    int    nid    =    readUint64(header);    	non-compiled	[CE]  possible  loss  of  precision	35	None	replace
2	[BUG]  [BUGGY]  long  nid  =  readUint64(header);  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  long  nid  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  nid  =  readUint64(header);	  long    numPackStreams    =    readUint64(header);    int    nid    =    readUint64(header);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	35	None	replace
3	[BUG]  [BUGGY]  int  numPackStreams  =  readUint64(archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  numPackStreams  =  readUint64(archive);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  numPackStreams  =  readUint64(archive);	  long    numPackStreams    =    readUint64(archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	43	None	replace
4	[BUG]  [BUGGY]  Integer  numPackStreams  =  readUint64(header,  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  numPackStreams  =  readUint64(header,  archive);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  numPackStreams  =  readUint64(header,  archive);	  long    numPackStreams    =    readUint64(archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	43	None	replace
5	[BUG]  [BUGGY]  byte  numPackStreams  =  readUint64(archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  byte  numPackStreams  =  readUint64(archive);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	byte  numPackStreams  =  readUint64(archive);	  long    numPackStreams    =    readUint64(archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	43	None	replace
6	[BUG]  [BUGGY]  final  float  numPackStreams  =  readUint64(header);  final  float  numPackStreams  =  readUint64(header);  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  float  numPackStreams  =  readUint64(header);  final  float  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final    float    numPackStreams    =    readUint64(header);    final  float  numPackStreams  =  readUint64(header);	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	58	None	add
7	[BUG]  [BUGGY]  final  float  numPackStreams  =  readUint64(header);  Final  float  numPackStreams  =  readUint64(header);  [CE]  not  a  statement  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  float  numPackStreams  =  readUint64(header);  Final  float  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final    float    numPackStreams    =    readUint64(header);    Final  float  numPackStreams  =  readUint64(header);	  	non-compiled	[CE]  not  a  statement	58	None	add
8	[BUG]  [BUGGY]  final  float  numPackStreams  =  readUint64(header);  final  float  nidPackStreams  =  readUint64(header);  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  float  numPackStreams  =  readUint64(header);  final  float  nidPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final    float    numPackStreams    =    readUint64(header);    final  float  nidPackStreams  =  readUint64(header);	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	58	None	add
9	[BUG]  [BUGGY]  final  float  numPackStreams  =  readUint64(header);  final  float  nPackStreams  =  readUint64(header);  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  float  numPackStreams  =  readUint64(header);  final  float  nPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final    float    numPackStreams    =    readUint64(header);    final  float  nPackStreams  =  readUint64(header);	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	58	None	add
10	[BUG]  [BUGGY]  final  float  numPackStreams  =  readUint64(header);  final  float  numPackStreams  =  readUint64(header).length;  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  float  numPackStreams  =  readUint64(header);  final  float  numPackStreams  =  readUint64(header).length;  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final    float    numPackStreams    =    readUint64(header);    final  float  numPackStreams  =  readUint64(header).length;	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	58	None	add
11	[BUG]  [BUGGY]  final  float  numPackStreams  =  readUint64(header);  float  numPackStreams  =  readUint64(header);  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  float  numPackStreams  =  readUint64(header);  float  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final    float    numPackStreams    =    readUint64(header);    float  numPackStreams  =  readUint64(header);	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	58	None	add
12	[BUG]  [BUGGY]  final  double  numPackStreams  =  readUint64(header);  final  double  numPackStreams  =  readUint64(header);  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  double  numPackStreams  =  readUint64(header);  final  double  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final    double    numPackStreams    =    readUint64(header);    final  double  numPackStreams  =  readUint64(header);	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	38	None	add
13	[BUG]  [BUGGY]  final  double  numPackStreams  =  readUint64(header);  Final  double  numPackStreams  =  readUint64(header);  [CE]  not  a  statement  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  double  numPackStreams  =  readUint64(header);  Final  double  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final    double    numPackStreams    =    readUint64(header);    Final  double  numPackStreams  =  readUint64(header);	  	non-compiled	[CE]  not  a  statement	38	None	add
14	[BUG]  [BUGGY]  final  double  numPackStreams  =  readUint64(header);  final  double  nid  =  readUint64(header);  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  double  numPackStreams  =  readUint64(header);  final  double  nid  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final    double    numPackStreams    =    readUint64(header);    final  double  nid  =  readUint64(header);	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	38	None	add
15	[BUG]  [BUGGY]  final  double  numPackStreams  =  readUint64(header);  final  double  numPackStreams  =  readUint64(header.readUnsignedByte());  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  double  numPackStreams  =  readUint64(header);  final  double  numPackStreams  =  readUint64(header.readUnsignedByte());  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final    double    numPackStreams    =    readUint64(header);    final  double  numPackStreams  =  readUint64(header.readUnsignedByte());	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	38	None	add
16	[BUG]  [BUGGY]  final  double  numPackStreams  =  readUint64(header);  final  double  numPackStreams  =  readUint64(header).length;  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  double  numPackStreams  =  readUint64(header);  final  double  numPackStreams  =  readUint64(header).length;  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final    double    numPackStreams    =    readUint64(header);    final  double  numPackStreams  =  readUint64(header).length;	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	38	None	add
17	[BUG]  [BUGGY]  final  double  numPackStreams  =  readUint64(header);  final  double  numPackStreams  =  readUint64(header.getSize());  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  double  numPackStreams  =  readUint64(header);  final  double  numPackStreams  =  readUint64(header.getSize());  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final    double    numPackStreams    =    readUint64(header);    final  double  numPackStreams  =  readUint64(header.getSize());	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	38	None	add
18	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  currentFolderInputStream.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  currentFolderInputStream.toArray(new  ArrayList  <  String>());  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  String>  deferredBlockStreams  =  currentFolderInputStream.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
19	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  archive.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  archive.toArray(new  ArrayList  <  String>());  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  String>  deferredBlockStreams  =  archive.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
20	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  currentFolderInputStream.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  List  <  String>  deferredBlockStreams  =  currentFolderInputStream.toArray(new  ArrayList  <  String>());  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	List  <  String>  deferredBlockStreams  =  currentFolderInputStream.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
21	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  this.currentFolderInputStream.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  this.currentFolderInputStream.toArray(new  ArrayList  <  String>());  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  String>  deferredBlockStreams  =  this.currentFolderInputStream.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
22	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  archive.deferredBlockStreams.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  deferredBlockStreams  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  archive.deferredBlockStreams.toArray(new  ArrayList  <  String>());  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  String>  deferredBlockStreams  =  archive.deferredBlockStreams.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol  deferredBlockStreams	53	None	replace
23	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  archive.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  List  <  String>  deferredBlockStreams  =  archive.toArray(new  ArrayList  <  String>());  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	List  <  String>  deferredBlockStreams  =  archive.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
24	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  header.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]                                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  header.toArray(new  ArrayList  <  String>());  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  String>  deferredBlockStreams  =  header.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
25	[BUG]  [BUGGY]  if(header!=  null)  {  final  int  numPackStreams  =  readUint64(header,  archive.packPos);  }  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  if(header!=  null)  {  final  int  numPackStreams  =  readUint64(header,  archive.packPos);  }  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	if(header!=  null)  {  final  int  numPackStreams  =  readUint64(header,  archive.packPos);  }	  if(header!=    null)    {    final    long    numPackStreams    =    readUint64(header,    archive.packPos);    }    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	70	None	replace
26	[BUG]  [BUGGY]  if(header!=  null)  {  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  header);  }  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  if(header!=  null)  {  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  header);  }  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	if(header!=  null)  {  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  header);  }	  if(header!=    null)    {    final    long    numPackStreams    =    readUint64(header,    archive.packPos);    }    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	70	None	replace
27	[BUG]  [BUGGY]  if(header!=  null)  {  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);  }  [CE]  cannot  find  symbol  length  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  if(header!=  null)  {  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);  }  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	if(header!=  null)  {  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);  }	  if(header!=    null)    {    final    long    numPackStreams    =    readUint64(header,    archive.packPos);    }    	non-compiled	[CE]  cannot  find  symbol  length	70	None	replace
28	[BUG]  [BUGGY]  if(header!=  null)  {  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  numPackStreams);  }  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  if(header!=  null)  {  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  numPackStreams);  }  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	if(header!=  null)  {  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  numPackStreams);  }	  if(header!=    null)    {    final    long    numPackStreams    =    readUint64(header,    archive.packPos);    }    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	70	None	replace
29	[BUG]  [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(numPackStreams);  [CE]  cannot  find  symbol  numPackStreams  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(numPackStreams);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(numPackStreams);	  ArrayList    <    Long>    deferredBlockStreams    =    new    ArrayList    <    Long>(length);    	non-compiled	[CE]  cannot  find  symbol  numPackStreams	9	None	replace
30	[BUG]  [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(nextHeaderSize);  [CE]  cannot  find  symbol  nextHeaderSize  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(nextHeaderSize);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(nextHeaderSize);	  ArrayList    <    Long>    deferredBlockStreams    =    new    ArrayList    <    Long>(length);    	non-compiled	[CE]  cannot  find  symbol  nextHeaderSize	9	None	replace
31	[BUG]  [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(header.length);  [CE]  cannot  find  symbol  length  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(header.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(header.length);	  ArrayList    <    Long>    deferredBlockStreams    =    new    ArrayList    <    Long>(length);    	non-compiled	[CE]  cannot  find  symbol  length	9	None	replace
32	[BUG]  [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(inputStreamStack.size());  [CE]  cannot  find  symbol  inputStreamStack  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(inputStreamStack.size());  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(inputStreamStack.size());	  ArrayList    <    Long>    deferredBlockStreams    =    new    ArrayList    <    Long>(length);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	9	None	replace
33	[BUG]  [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(fileName);  [CE]  no  suitable  constructor  found  for  ArrayList(String)  [FE]                                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(fileName);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(fileName);	  ArrayList    <    Long>    deferredBlockStreams    =    new    ArrayList    <    Long>(length);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(String)	9	None	replace
34	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
35	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length);  [CE]  cannot  find  symbol  length  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol  length	52	None	replace
36	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);  [CE]  cannot  find  symbol  numPackStreams  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol  numPackStreams	52	None	replace
37	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);  [CE]  cannot  find  symbol  numPackStreams  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol  numPackStreams	52	None	replace
38	[BUG]  [BUGGY]  int  numPackStreams  =  readUint64(header,  archive.packPos,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  numPackStreams  =  readUint64(header,  archive.packPos,  header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  numPackStreams  =  readUint64(header,  archive.packPos,  header);	  int    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	22	None	replace
39	[BUG]  [BUGGY]  int  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);  [CE]  cannot  find  symbol  length  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);	  int    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  length	22	None	replace
40	[BUG]  [BUGGY]  int  numPackStreams  =  readUint64(header,  archive.packPos,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  numPackStreams  =  readUint64(header,  archive.packPos,  fileName);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  numPackStreams  =  readUint64(header,  archive.packPos,  fileName);	  int    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	22	None	replace
41	[BUG]  [BUGGY]  int  numPackStreams  =  readUint64(header,  archive.packPos,  signature);  [CE]  cannot  find  symbol  signature  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  numPackStreams  =  readUint64(header,  archive.packPos,  signature);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  numPackStreams  =  readUint64(header,  archive.packPos,  signature);	  int    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  signature	22	None	replace
42	[BUG]  [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  header);	  final    Integer    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	62	None	replace
43	[BUG]  [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  fileName);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  fileName);	  final    Integer    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	62	None	replace
44	[BUG]  [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);  [CE]  cannot  find  symbol  length  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);	  final    Integer    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  length	62	None	replace
45	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive.packPos,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive.packPos,  header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(header,  archive.packPos,  header);	  final    Integer    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	62	None	replace
46	[BUG]  [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  signature);  [CE]  cannot  find  symbol  signature  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  signature);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  signature);	  final    Integer    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  signature	62	None	replace
47	[BUG]  [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  1);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  1);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  1);	  final    Integer    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	62	None	replace
48	[BUG]  [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  index);  [CE]  cannot  find  symbol  index  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  index);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  index);	  final    Integer    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  index	62	None	replace
49	[BUG]  [BUGGY]  double  numPackStreams  =  readUint64(header);  double  numPackStreams  =  readUint64(header);  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  double  numPackStreams  =  readUint64(header);  double  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	double    numPackStreams    =    readUint64(header);    double  numPackStreams  =  readUint64(header);	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	2	None	add
50	[BUG]  [BUGGY]  double  numPackStreams  =  readUint64(header);  Double  numPackStreams  =  readUint64(header);  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  double  numPackStreams  =  readUint64(header);  Double  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	double    numPackStreams    =    readUint64(header);    Double  numPackStreams  =  readUint64(header);	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	2	None	add
51	[BUG]  [BUGGY]  double  numPackStreams  =  readUint64(header);  int  numPackStreams  =  readUint64(header);  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  double  numPackStreams  =  readUint64(header);  int  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	double    numPackStreams    =    readUint64(header);    int  numPackStreams  =  readUint64(header);	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	2	None	add
52	[BUG]  [BUGGY]  double  numPackStreams  =  readUint64(header);  long  numPackStreams  =  readUint64(header);  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  double  numPackStreams  =  readUint64(header);  long  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	double    numPackStreams    =    readUint64(header);    long  numPackStreams  =  readUint64(header);	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	2	None	add
53	[BUG]  [BUGGY]  double  numPackStreams  =  readUint64(header);  Integer  numPackStreams  =  readUint64(header);  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  double  numPackStreams  =  readUint64(header);  Integer  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	double    numPackStreams    =    readUint64(header);    Integer  numPackStreams  =  readUint64(header);	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	2	None	add
54	[BUG]  [BUGGY]  double  numPackStreams  =  readUint64(header);  int  nid  =  readUint64(header);  [CE]  possible  loss  of  precision  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  double  numPackStreams  =  readUint64(header);  int  nid  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	double    numPackStreams    =    readUint64(header);    int  nid  =  readUint64(header);	  	non-compiled	[CE]  possible  loss  of  precision	2	None	add
55	[BUG]  [BUGGY]  double  numPackStreams  =  readUint64(header);  Integer  nid  =  readUint64(header);  [CE]  incompatible  types  [FE]                NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  double  numPackStreams  =  readUint64(header);  Integer  nid  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	double    numPackStreams    =    readUint64(header);    Integer  nid  =  readUint64(header);	  	non-compiled	[CE]  incompatible  types	2	None	add
56	[BUG]  [BUGGY]  double  numPackStreams  =  readUint64(header);  numPackStreams  =  readUint64(header);  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]                  NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  double  numPackStreams  =  readUint64(header);  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	double    numPackStreams    =    readUint64(header);    numPackStreams  =  readUint64(header);	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	2	None	add
57	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);  [CE]  cannot  find  symbol  length  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos,    header.length);    	non-compiled	[CE]  cannot  find  symbol  length	47	None	replace
58	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  header.length  +  1);  [CE]  cannot  find  symbol  length  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  header.length  +  1);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.packPos,  header.length  +  1);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos,    header.length);    	non-compiled	[CE]  cannot  find  symbol  length	47	None	replace
59	[BUG]  [BUGGY]  final  long  headerSize  =  readUint64(header,  archive.packPos,  header.length);  [CE]  cannot  find  symbol  length  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  headerSize  =  readUint64(header,  archive.packPos,  header.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  headerSize  =  readUint64(header,  archive.packPos,  header.length);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos,    header.length);    	non-compiled	[CE]  cannot  find  symbol  length	47	None	replace
60	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archives.packPos,  header.length);  [CE]  cannot  find  symbol  archives  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archives.packPos,  header.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archives.packPos,  header.length);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos,    header.length);    	non-compiled	[CE]  cannot  find  symbol  archives	47	None	replace
61	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  header.packPos,  header.length);  [CE]  cannot  find  symbol  packPos  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  header.packPos,  header.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  header.packPos,  header.length);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos,    header.length);    	non-compiled	[CE]  cannot  find  symbol  packPos	47	None	replace
62	[BUG]  [BUGGY]  final  int  nid  =  readUint64(header);  [CE]  possible  loss  of  precision  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  nid  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  nid  =  readUint64(header);	  if(header!=    null)    {    final    int    numPackStreams    =    readUint64(header);    }    	non-compiled	[CE]  possible  loss  of  precision	19	None	replace
63	[BUG]  [BUGGY]  Integer  nid  =  currentFolderInputStream.size();  [CE]  cannot  find  symbol  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  currentFolderInputStream.size();  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  currentFolderInputStream.size();	  Integer    nid    =    inputStreamStack.size();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
64	[BUG]  [BUGGY]  Integer  nid  =  this.currentFolderInputStream.size();  [CE]  cannot  find  symbol  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  this.currentFolderInputStream.size();  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  this.currentFolderInputStream.size();	  Integer    nid    =    inputStreamStack.size();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
65	[BUG]  [BUGGY]  Integer  nid  =  header.size();  [CE]  cannot  find  symbol  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.size();  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  header.size();	  Integer    nid    =    inputStreamStack.size();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
66	[BUG]  [BUGGY]  Integer  nid  =  archive.size();  [CE]  cannot  find  symbol  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  archive.size();  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  archive.size();	  Integer    nid    =    inputStreamStack.size();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
67	[BUG]  [BUGGY]  Integer  nid  =  archive.packPos.size();  [CE]  long  cannot  be  dereferenced  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  archive.packPos.size();  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  archive.packPos.size();	  Integer    nid    =    inputStreamStack.size();    	non-compiled	[CE]  long  cannot  be  dereferenced	54	None	replace
68	[BUG]  [BUGGY]  Integer  nid  =  file.size();  [CE]  cannot  find  symbol  [FE]                                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  file.size();  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  file.size();	  Integer    nid    =    inputStreamStack.size();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
69	[BUG]  [BUGGY]  Integer  nid  =  archive.inputStreamStack.size();  [CE]  cannot  find  symbol  inputStreamStack  [FE]                                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  archive.inputStreamStack.size();  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  archive.inputStreamStack.size();	  Integer    nid    =    inputStreamStack.size();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	54	None	replace
70	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  NID.kCRC);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  NID.kCRC);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.packPos,  NID.kCRC);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos,    headerSize);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	49	None	replace
71	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  SIGNATURE_HEADER_SIZE);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  SIGNATURE_HEADER_SIZE);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.packPos,  SIGNATURE_HEADER_SIZE);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos,    headerSize);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	49	None	replace
72	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  nid);  [CE]  cannot  find  symbol  nid  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  nid);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.packPos,  nid);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos,    headerSize);    	non-compiled	[CE]  cannot  find  symbol  nid	49	None	replace
73	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  length);  [CE]  cannot  find  symbol  length  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.packPos,  length);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos,    headerSize);    	non-compiled	[CE]  cannot  find  symbol  length	49	None	replace
74	[BUG]  [BUGGY]  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  numPackStreams  =  readUint64(header,  archive.packPos,  header);	  Integer    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	24	None	replace
75	[BUG]  [BUGGY]  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  fileName);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  numPackStreams  =  readUint64(header,  archive.packPos,  fileName);	  Integer    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	24	None	replace
76	[BUG]  [BUGGY]  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);  [CE]  cannot  find  symbol  length  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);	  Integer    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  length	24	None	replace
77	[BUG]  [BUGGY]  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  signature);  [CE]  cannot  find  symbol  signature  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  signature);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  numPackStreams  =  readUint64(header,  archive.packPos,  signature);	  Integer    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  signature	24	None	replace
78	[BUG]  [BUGGY]  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  index);  [CE]  cannot  find  symbol  index  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  index);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  numPackStreams  =  readUint64(header,  archive.packPos,  index);	  Integer    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  index	24	None	replace
79	[BUG]  [BUGGY]  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  length);  [CE]  cannot  find  symbol  length  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  numPackStreams  =  readUint64(header,  archive.packPos,  length);	  Integer    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  length	24	None	replace
80	[BUG]  [BUGGY]  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  1);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  1);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  numPackStreams  =  readUint64(header,  archive.packPos,  1);	  Integer    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	24	None	replace
81	[BUG]  [BUGGY]  static  final  int  numPackStreams  =  readUint64(header,  archive.packPos);  [CE]  illegal  start  of  expression  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  static  final  int  numPackStreams  =  readUint64(header,  archive.packPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	static  final  int  numPackStreams  =  readUint64(header,  archive.packPos);	  static    final    long    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
82	[BUG]  [BUGGY]  static  final  long  numPackStreams  =  readUint64(header,  archive.packPos  +  1);  [CE]  illegal  start  of  expression  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  static  final  long  numPackStreams  =  readUint64(header,  archive.packPos  +  1);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	static  final  long  numPackStreams  =  readUint64(header,  archive.packPos  +  1);	  static    final    long    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
83	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive.nextHeaderSize);  [CE]  cannot  find  symbol  nextHeaderSize  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive.nextHeaderSize);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(header,  archive.nextHeaderSize);	  final    long    numPackStreams    =    readUint64(header,    archive.nextHeaderSize);    	non-compiled	[CE]  cannot  find  symbol  nextHeaderSize	51	None	replace
84	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packSize);  [CE]  cannot  find  symbol  packSize  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packSize);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.packSize);	  final    long    numPackStreams    =    readUint64(header,    archive.nextHeaderSize);    	non-compiled	[CE]  cannot  find  symbol  packSize	51	None	replace
85	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.nextPos);  [CE]  cannot  find  symbol  nextPos  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.nextPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.nextPos);	  final    long    numPackStreams    =    readUint64(header,    archive.nextHeaderSize);    	non-compiled	[CE]  cannot  find  symbol  nextPos	51	None	replace
86	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packHeaderSize);  [CE]  cannot  find  symbol  packHeaderSize  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packHeaderSize);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.packHeaderSize);	  final    long    numPackStreams    =    readUint64(header,    archive.nextHeaderSize);    	non-compiled	[CE]  cannot  find  symbol  packHeaderSize	51	None	replace
87	[BUG]  [BUGGY]  int  numPackStreams  =  readUint64(header,  archive.length);  [CE]  cannot  find  symbol  length  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  numPackStreams  =  readUint64(header,  archive.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  numPackStreams  =  readUint64(header,  archive.length);	  long    numPackStreams    =    readUint64(header,    archive.length);    	non-compiled	[CE]  cannot  find  symbol  length	56	None	replace
88	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.packSizes.length);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.packSizes.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(header,  archive.packSizes.length);	  long    numPackStreams    =    readUint64(header,    archive.length);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	56	None	replace
89	[BUG]  [BUGGY]  Long  numPackStreams  =  readUint64(header,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Long  numPackStreams  =  readUint64(header,  archive.packPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Long  numPackStreams  =  readUint64(header,  archive.packPos);	  long    numPackStreams    =    readUint64(header,    archive.length);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	56	None	replace
90	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.bytes);  [CE]  cannot  find  symbol  bytes  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.bytes);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(header,  archive.bytes);	  long    numPackStreams    =    readUint64(header,    archive.length);    	non-compiled	[CE]  cannot  find  symbol  bytes	56	None	replace
91	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive.packSizes);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive.packSizes);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(header,  archive.packSizes);	  final    int    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	13	None	replace
92	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(archive,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  numPackStreams  =  readUint64(archive,  header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(archive,  header);	  final    int    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	13	None	replace
93	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive.packStackPos);  [CE]  cannot  find  symbol  packStackPos  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive.packStackPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(header,  archive.packStackPos);	  final    int    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  packStackPos	13	None	replace
94	[BUG]  [BUGGY]  final  Long  numPackStreams  =  readUint64(header,  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  Long  numPackStreams  =  readUint64(header,  archive);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  Long  numPackStreams  =  readUint64(header,  archive);	  final    int    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	13	None	replace
95	[BUG]  [BUGGY]  byte  numPackStreams  =  readUint64(header,  archive.packSizes);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  byte  numPackStreams  =  readUint64(header,  archive.packSizes);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	byte  numPackStreams  =  readUint64(header,  archive.packSizes);	  byte    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	29	None	replace
96	[BUG]  [BUGGY]  byte  numPackStreams  =  readUint64(archive,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  byte  numPackStreams  =  readUint64(archive,  header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	byte  numPackStreams  =  readUint64(archive,  header);	  byte    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	29	None	replace
97	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archives.packPos,  header);  [CE]  cannot  find  symbol  archives  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archives.packPos,  header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(header,  archives.packPos,  header);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos,    header);    	non-compiled	[CE]  cannot  find  symbol  archives	44	None	replace
98	[BUG]  [BUGGY]  final  byte  numPackStreams  =  readUint64(header,  archive.packPos,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  byte  numPackStreams  =  readUint64(header,  archive.packPos,  header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  byte  numPackStreams  =  readUint64(header,  archive.packPos,  header);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos,    header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	44	None	replace
99	[BUG]  [BUGGY]  final  double  numPackStreams  =  readUint64(header,  archive.packPos,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  double  numPackStreams  =  readUint64(header,  archive.packPos,  header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  double  numPackStreams  =  readUint64(header,  archive.packPos,  header);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos,    header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	44	None	replace
100	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archives.packPos,  header);  [CE]  cannot  find  symbol  archives  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archives.packPos,  header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archives.packPos,  header);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos,    header);    	non-compiled	[CE]  cannot  find  symbol  archives	44	None	replace
101	[BUG]  [BUGGY]  final  byte  numPackStreams  =  readUint64(header,  archive.packPos,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  byte  numPackStreams  =  readUint64(header,  archive.packPos,  fileName);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  byte  numPackStreams  =  readUint64(header,  archive.packPos,  fileName);	  final    byte    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	45	None	replace
102	[BUG]  [BUGGY]  final  Long  numPackStreams  =  readUint64(header,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  Long  numPackStreams  =  readUint64(header,  archive.packPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  Long  numPackStreams  =  readUint64(header,  archive.packPos);	  final    byte    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	45	None	replace
103	[BUG]  [BUGGY]  final  byte  numPackStreams  =  readUint64(header,  archive.packPos,  signature);  [CE]  cannot  find  symbol  signature  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  byte  numPackStreams  =  readUint64(header,  archive.packPos,  signature);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  byte  numPackStreams  =  readUint64(header,  archive.packPos,  signature);	  final    byte    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  signature	45	None	replace
104	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive.zipPos);  [CE]  cannot  find  symbol  zipPos  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive.zipPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(header,  archive.zipPos);	  final    long    numPackStreams    =    readUint64(header,    archive.zipPos);    	non-compiled	[CE]  cannot  find  symbol  zipPos	50	None	replace
105	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.bytes);  [CE]  cannot  find  symbol  bytes  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.bytes);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.bytes);	  final    long    numPackStreams    =    readUint64(header,    archive.zipPos);    	non-compiled	[CE]  cannot  find  symbol  bytes	50	None	replace
106	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packBufferPos);  [CE]  cannot  find  symbol  packBufferPos  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packBufferPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.packBufferPos);	  final    long    numPackStreams    =    readUint64(header,    archive.zipPos);    	non-compiled	[CE]  cannot  find  symbol  packBufferPos	50	None	replace
107	[BUG]  [BUGGY]  final  long  nid  =  readUint64(header);  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  nid  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  nid  =  readUint64(header);	  if(header!=    null)    {    final    long    nid    =    readUint64(header);    }    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	20	None	replace
108	[BUG]  [BUGGY]  if(header!=  null)  {  final  long  nid  =  readUint64(header,  archive.packPos);  }  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  if(header!=  null)  {  final  long  nid  =  readUint64(header,  archive.packPos);  }  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	if(header!=  null)  {  final  long  nid  =  readUint64(header,  archive.packPos);  }	  if(header!=    null)    {    final    long    nid    =    readUint64(header);    }    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	20	None	replace
109	[BUG]  [BUGGY]  if(header!=  null)  {  final  long  nid  =  readUint64(currentFolderIndex);  }  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  if(header!=  null)  {  final  long  nid  =  readUint64(currentFolderIndex);  }  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	if(header!=  null)  {  final  long  nid  =  readUint64(currentFolderIndex);  }	  if(header!=    null)    {    final    long    nid    =    readUint64(header);    }    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	20	None	replace
110	[BUG]  [BUGGY]  ArrayList  numPackStreams  =  readUint64(header);  [CE]  incompatible  types  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  numPackStreams  =  readUint64(header);	  final    Long    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  incompatible  types	60	None	replace
111	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  cannot  find  symbol  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  List  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	List  <  String>  deferredBlockStreams  =  Lists.newArrayList();	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
112	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Collections.newArrayList();  [CE]  cannot  find  symbol  Collections  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Collections.newArrayList();  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Collections.newArrayList();	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Collections	8	None	replace
113	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(archive.packPos);  [CE]  cannot  find  symbol  Lists  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(archive.packPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(archive.packPos);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Lists	8	None	replace
114	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(length);  [CE]  cannot  find  symbol  length  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(length);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  length	8	None	replace
115	[BUG]  [BUGGY]  int  numPackStreams  =  readUint64(header);  Integer  nid  =  readUint64(header);  [CE]  possible  loss  of  precision  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  numPackStreams  =  readUint64(header);  Integer  nid  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  numPackStreams  =  readUint64(header);  Integer  nid  =  readUint64(header);	  long    numPackStreams    =    readUint64(header);    Integer    nid    =    readUint64(header);    	non-compiled	[CE]  possible  loss  of  precision	34	None	replace
116	[BUG]  [BUGGY]  Long  nid  =  readUint64(header);  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Long  nid  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Long  nid  =  readUint64(header);	  long    numPackStreams    =    readUint64(header);    Integer    nid    =    readUint64(header);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	34	None	replace
117	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.packPos,  header.length  +  1);  [CE]  cannot  find  symbol  length  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.packPos,  header.length  +  1);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(header,  archive.packPos,  header.length  +  1);	  long    numPackStreams    =    readUint64(header,    archive.packPos,    header.length);    	non-compiled	[CE]  cannot  find  symbol  length	27	None	replace
118	[BUG]  [BUGGY]  long  headerSize  =  readUint64(header,  archive.packPos,  header.length);  [CE]  cannot  find  symbol  length  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  long  headerSize  =  readUint64(header,  archive.packPos,  header.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  headerSize  =  readUint64(header,  archive.packPos,  header.length);	  long    numPackStreams    =    readUint64(header,    archive.packPos,    header.length);    	non-compiled	[CE]  cannot  find  symbol  length	27	None	replace
119	[BUG]  [BUGGY]  Long  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);  [CE]  cannot  find  symbol  length  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Long  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Long  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);	  long    numPackStreams    =    readUint64(header,    archive.packPos,    header.length);    	non-compiled	[CE]  cannot  find  symbol  length	27	None	replace
120	[BUG]  [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.packSizes);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.packSizes);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  Integer  numPackStreams  =  readUint64(header,  archive.packSizes);	  final    Integer    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	17	None	replace
121	[BUG]  [BUGGY]  final  Integer  numPackStreams  =  readUint64(archive,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  Integer  numPackStreams  =  readUint64(archive,  header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  Integer  numPackStreams  =  readUint64(archive,  header);	  final    Integer    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	17	None	replace
122	[BUG]  [BUGGY]  final  Integer  numPackStreams  =  readUint64(file,  header,  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  Integer  numPackStreams  =  readUint64(file,  header,  archive);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  Integer  numPackStreams  =  readUint64(file,  header,  archive);	  final    Integer    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	17	None	replace
123	[BUG]  [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.packStackPos);  [CE]  cannot  find  symbol  packStackPos  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.packStackPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  Integer  numPackStreams  =  readUint64(header,  archive.packStackPos);	  final    Integer    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  packStackPos	17	None	replace
124	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive.packPos,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive.packPos,  fileName);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(header,  archive.packPos,  fileName);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	46	None	replace
125	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  fileName,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  fileName,  header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.packPos,  fileName,  header);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	46	None	replace
126	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  fileName,  signature);  [CE]  cannot  find  symbol  signature  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  fileName,  signature);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.packPos,  fileName,  signature);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos,    fileName);    	non-compiled	[CE]  cannot  find  symbol  signature	46	None	replace
127	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  header,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  header,  fileName);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.packPos,  header,  fileName);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	46	None	replace
128	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(fileName,  archive.packPos,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(fileName,  archive.packPos,  header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(fileName,  archive.packPos,  header);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	46	None	replace
129	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  fileName,  header.length);  [CE]  cannot  find  symbol  length  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  fileName,  header.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.packPos,  fileName,  header.length);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos,    fileName);    	non-compiled	[CE]  cannot  find  symbol  length	46	None	replace
130	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(header,  header,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  numPackStreams  =  readUint64(header,  header,  archive.packPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(header,  header,  archive.packPos);	  final    long    numPackStreams    =    readUint64(header,    header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	65	None	replace
131	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.packPos,  header);  [CE]  no  suitable  constructor  found  for  ArrayList(long,DataInput)  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.packPos,  header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.packPos,  header);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(archive.packPos);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(long,DataInput)	11	None	replace
132	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.packPos,  fileName);  [CE]  no  suitable  constructor  found  for  ArrayList(long,String)  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.packPos,  fileName);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.packPos,  fileName);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(archive.packPos);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(long,String)	11	None	replace
133	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.packPos  +  1);  [CE]  no  suitable  constructor  found  for  ArrayList(long)  [FE]                                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.packPos  +  1);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.packPos  +  1);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(archive.packPos);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(long)	11	None	replace
134	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName,  archive.packPos);  [CE]  no  suitable  constructor  found  for  ArrayList(String,long)  [FE]                                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName,  archive.packPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName,  archive.packPos);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(archive.packPos);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(String,long)	11	None	replace
135	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.packPos,  length);  [CE]  cannot  find  symbol  length  [FE]                                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.packPos,  length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.packPos,  length);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  length	11	None	replace
136	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.packPos);  [CE]  cannot  find  symbol  [FE]                                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.packPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.packPos);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(archive.packPos);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
137	[BUG]  [BUGGY]  double  numPackStreams  =  readUint64(header,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  double  numPackStreams  =  readUint64(header,  archive.packPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	double  numPackStreams  =  readUint64(header,  archive.packPos);	  double    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	3	None	replace
138	[BUG]  [BUGGY]  double  numPackStreams  =  readUint64(header,  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  double  numPackStreams  =  readUint64(header,  archive);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	double  numPackStreams  =  readUint64(header,  archive);	  double    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	3	None	replace
139	[BUG]  [BUGGY]  numPackStreams  =  readUint64(header,  archive.packPos);  [CE]  cannot  find  symbol  numPackStreams  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  numPackStreams  =  readUint64(header,  archive.packPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	numPackStreams  =  readUint64(header,  archive.packPos);	  double    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  numPackStreams	3	None	replace
140	[BUG]  [BUGGY]  numPackStreams  =  readUint64(header,  archive);  [CE]  cannot  find  symbol  numPackStreams  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  numPackStreams  =  readUint64(header,  archive);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	numPackStreams  =  readUint64(header,  archive);	  double    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  numPackStreams	3	None	replace
141	[BUG]  [BUGGY]  byte  numPackStreams  =  readUint64(header,  archive.packPos,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  byte  numPackStreams  =  readUint64(header,  archive.packPos,  header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	byte  numPackStreams  =  readUint64(header,  archive.packPos,  header);	  byte    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	26	None	replace
142	[BUG]  [BUGGY]  byte  numPackStreams  =  readUint64(header,  archive.packPos,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  byte  numPackStreams  =  readUint64(header,  archive.packPos,  fileName);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	byte  numPackStreams  =  readUint64(header,  archive.packPos,  fileName);	  byte    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	26	None	replace
143	[BUG]  [BUGGY]  byte  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);  [CE]  cannot  find  symbol  length  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  byte  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	byte  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);	  byte    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  length	26	None	replace
144	[BUG]  [BUGGY]  byte  numPackStreams  =  readUint64(header,  archive.packPos,  signature);  [CE]  cannot  find  symbol  signature  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  byte  numPackStreams  =  readUint64(header,  archive.packPos,  signature);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	byte  numPackStreams  =  readUint64(header,  archive.packPos,  signature);	  byte    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  signature	26	None	replace
145	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archives.packPos);  [CE]  cannot  find  symbol  archives  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archives.packPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archives.packPos);	  final    int    numPackStreams    =    readUint64(header,    archives.packPos);    	non-compiled	[CE]  cannot  find  symbol  archives	63	None	replace
146	[BUG]  [BUGGY]  final  int  nid  =  readUint64(header,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  nid  =  readUint64(header,  archive.packPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  nid  =  readUint64(header,  archive.packPos);	  final    int    numPackStreams    =    readUint64(header,    archives.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	63	None	replace
147	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(header,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  numPackStreams  =  readUint64(header,  header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(header,  header);	  final    int    numPackStreams    =    readUint64(header,    archives.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	63	None	replace
148	[BUG]  [BUGGY]  int  nid  =  currentFolderInputStream.size();  [CE]  cannot  find  symbol  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  nid  =  currentFolderInputStream.size();  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  nid  =  currentFolderInputStream.size();	  int    nid    =    inputStreamStack.size();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
149	[BUG]  [BUGGY]  int  nid  =  this.currentFolderInputStream.size();  [CE]  cannot  find  symbol  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  nid  =  this.currentFolderInputStream.size();  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  nid  =  this.currentFolderInputStream.size();	  int    nid    =    inputStreamStack.size();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
150	[BUG]  [BUGGY]  int  nid  =  archive.packPos.size();  [CE]  long  cannot  be  dereferenced  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  nid  =  archive.packPos.size();  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  nid  =  archive.packPos.size();	  int    nid    =    inputStreamStack.size();    	non-compiled	[CE]  long  cannot  be  dereferenced	55	None	replace
151	[BUG]  [BUGGY]  int  nid  =  header.size();  [CE]  cannot  find  symbol  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  nid  =  header.size();  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  nid  =  header.size();	  int    nid    =    inputStreamStack.size();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
152	[BUG]  [BUGGY]  int  nid  =  archive.numPackStreams.size();  [CE]  cannot  find  symbol  numPackStreams  [FE]                                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  nid  =  archive.numPackStreams.size();  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  nid  =  archive.numPackStreams.size();	  int    nid    =    inputStreamStack.size();    	non-compiled	[CE]  cannot  find  symbol  numPackStreams	55	None	replace
153	[BUG]  [BUGGY]  int  nid  =  file.size();  [CE]  cannot  find  symbol  [FE]                                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  nid  =  file.size();  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  nid  =  file.size();	  int    nid    =    inputStreamStack.size();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
154	[BUG]  [BUGGY]  int  nid  =  archive.inputStreamStack.size();  [CE]  cannot  find  symbol  inputStreamStack  [FE]                                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  nid  =  archive.inputStreamStack.size();  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  nid  =  archive.inputStreamStack.size();	  int    nid    =    inputStreamStack.size();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	55	None	replace
155	[BUG]  [BUGGY]  Long  numPackStreams  =  readUint64(header,  archive.packPos,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Long  numPackStreams  =  readUint64(header,  archive.packPos,  header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Long  numPackStreams  =  readUint64(header,  archive.packPos,  header);	  long    numPackStreams    =    readUint64(header,    archive.packPos,    header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	23	None	replace
156	[BUG]  [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos,  header);  [CE]  no  suitable  constructor  found  for  ArrayList(long,DataInput)  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos,  header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos,  header);	  ArrayList    <    Long>    deferredBlockStreams    =    new    ArrayList    <    Long>(archive.packPos);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(long,DataInput)	12	None	replace
157	[BUG]  [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos,  fileName);  [CE]  no  suitable  constructor  found  for  ArrayList(long,String)  [FE]                                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos,  fileName);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos,  fileName);	  ArrayList    <    Long>    deferredBlockStreams    =    new    ArrayList    <    Long>(archive.packPos);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(long,String)	12	None	replace
158	[BUG]  [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos  +  1);  [CE]  no  suitable  constructor  found  for  ArrayList(long)  [FE]                                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos  +  1);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos  +  1);	  ArrayList    <    Long>    deferredBlockStreams    =    new    ArrayList    <    Long>(archive.packPos);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(long)	12	None	replace
159	[BUG]  [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos,  length);  [CE]  cannot  find  symbol  length  [FE]                                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos,  length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos,  length);	  ArrayList    <    Long>    deferredBlockStreams    =    new    ArrayList    <    Long>(archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  length	12	None	replace
160	[BUG]  [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos,  1);  [CE]  no  suitable  constructor  found  for  ArrayList(long,int)  [FE]                                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos,  1);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos,  1);	  ArrayList    <    Long>    deferredBlockStreams    =    new    ArrayList    <    Long>(archive.packPos);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(long,int)	12	None	replace
161	[BUG]  [BUGGY]  List  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos);  [CE]  cannot  find  symbol  [FE]                                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  List  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	List  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos);	  ArrayList    <    Long>    deferredBlockStreams    =    new    ArrayList    <    Long>(archive.packPos);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
162	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.packPos,  fileName,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.packPos,  fileName,  header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(header,  archive.packPos,  fileName,  header);	  long    numPackStreams    =    readUint64(header,    archive.packPos,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	25	None	replace
163	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.packPos,  fileName,  signature);  [CE]  cannot  find  symbol  signature  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.packPos,  fileName,  signature);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(header,  archive.packPos,  fileName,  signature);	  long    numPackStreams    =    readUint64(header,    archive.packPos,    fileName);    	non-compiled	[CE]  cannot  find  symbol  signature	25	None	replace
164	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(fileName,  archive.packPos,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  long  numPackStreams  =  readUint64(fileName,  archive.packPos,  header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(fileName,  archive.packPos,  header);	  long    numPackStreams    =    readUint64(header,    archive.packPos,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	25	None	replace
165	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.packPos,  header,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.packPos,  header,  fileName);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(header,  archive.packPos,  header,  fileName);	  long    numPackStreams    =    readUint64(header,    archive.packPos,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	25	None	replace
166	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.packPos,  NID.kCRC);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.packPos,  NID.kCRC);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(header,  archive.packPos,  NID.kCRC);	  long    numPackStreams    =    readUint64(header,    archive.packPos,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	25	None	replace
167	[BUG]  [BUGGY]  float  numPackStreams  =  readUint64(header);  float  numPackStreams  =  readUint64(header);  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  float  numPackStreams  =  readUint64(header);  float  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	float    numPackStreams    =    readUint64(header);    float  numPackStreams  =  readUint64(header);	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	4	None	add
168	[BUG]  [BUGGY]  float  numPackStreams  =  readUint64(header);  int  numPackStreams  =  readUint64(header);  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  float  numPackStreams  =  readUint64(header);  int  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	float    numPackStreams    =    readUint64(header);    int  numPackStreams  =  readUint64(header);	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	4	None	add
169	[BUG]  [BUGGY]  float  numPackStreams  =  readUint64(header);  Integer  numPackStreams  =  readUint64(header);  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  float  numPackStreams  =  readUint64(header);  Integer  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	float    numPackStreams    =    readUint64(header);    Integer  numPackStreams  =  readUint64(header);	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	4	None	add
170	[BUG]  [BUGGY]  float  numPackStreams  =  readUint64(header);  int  float  numPackStreams  =  readUint64(header);  [CE]  not  a  statement  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  float  numPackStreams  =  readUint64(header);  int  float  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	float    numPackStreams    =    readUint64(header);    int  float  numPackStreams  =  readUint64(header);	  	non-compiled	[CE]  not  a  statement	4	None	add
171	[BUG]  [BUGGY]  float  numPackStreams  =  readUint64(header);  int  nid  =  readUint64(header);  [CE]  possible  loss  of  precision  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  float  numPackStreams  =  readUint64(header);  int  nid  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	float    numPackStreams    =    readUint64(header);    int  nid  =  readUint64(header);	  	non-compiled	[CE]  possible  loss  of  precision	4	None	add
172	[BUG]  [BUGGY]  float  numPackStreams  =  readUint64(header);  long  numPackStreams  =  readUint64(header);  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  float  numPackStreams  =  readUint64(header);  long  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	float    numPackStreams    =    readUint64(header);    long  numPackStreams  =  readUint64(header);	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	4	None	add
173	[BUG]  [BUGGY]  float  numPackStreams  =  readUint64(header);  float  numPackStreams  =  readUint64(header.readUnsignedByte());  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]                NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  float  numPackStreams  =  readUint64(header);  float  numPackStreams  =  readUint64(header.readUnsignedByte());  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	float    numPackStreams    =    readUint64(header);    float  numPackStreams  =  readUint64(header.readUnsignedByte());	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	4	None	add
174	[BUG]  [BUGGY]  float  numPackStreams  =  readUint64(header);  float  nid  =  readUint64(header);  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]                  NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  float  numPackStreams  =  readUint64(header);  float  nid  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	float    numPackStreams    =    readUint64(header);    float  nid  =  readUint64(header);	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	4	None	add
175	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  archive.packPos,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUint64(header,  archive.packPos,  header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  readUint64(header,  archive.packPos,  header);	  Integer    nid    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	10	None	replace
176	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  archive.packPos,  numPackStreams);  [CE]  cannot  find  symbol  numPackStreams  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUint64(header,  archive.packPos,  numPackStreams);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  readUint64(header,  archive.packPos,  numPackStreams);	  Integer    nid    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  numPackStreams	10	None	replace
177	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  archive.packPos,  0);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUint64(header,  archive.packPos,  0);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  readUint64(header,  archive.packPos,  0);	  Integer    nid    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	10	None	replace
178	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  archive.packPos,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUint64(header,  archive.packPos,  fileName);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  readUint64(header,  archive.packPos,  fileName);	  Integer    nid    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	10	None	replace
179	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  archive.packPos,  header.length);  [CE]  cannot  find  symbol  length  [FE]                                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUint64(header,  archive.packPos,  header.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  readUint64(header,  archive.packPos,  header.length);	  Integer    nid    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  length	10	None	replace
180	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  archive.packPos,  signature);  [CE]  cannot  find  symbol  signature  [FE]                                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUint64(header,  archive.packPos,  signature);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  readUint64(header,  archive.packPos,  signature);	  Integer    nid    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  signature	10	None	replace
181	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  archive.packPos,  NID.kCRC);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUint64(header,  archive.packPos,  NID.kCRC);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  readUint64(header,  archive.packPos,  NID.kCRC);	  Integer    nid    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	10	None	replace
182	[BUG]  [BUGGY]  float  numPackStreams  =  readUint64(header,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  float  numPackStreams  =  readUint64(header,  archive.packPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	float  numPackStreams  =  readUint64(header,  archive.packPos);	  float    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	5	None	replace
183	[BUG]  [BUGGY]  float  numPackStreams  =  readUint64(header,  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  float  numPackStreams  =  readUint64(header,  archive);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	float  numPackStreams  =  readUint64(header,  archive);	  float    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	5	None	replace
184	[BUG]  [BUGGY]  int  numPackStreams  =  readUint64(header,  archive.packSizes);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  numPackStreams  =  readUint64(header,  archive.packSizes);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  numPackStreams  =  readUint64(header,  archive.packSizes);	  int    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	64	None	replace
185	[BUG]  [BUGGY]  int  numPackStreams  =  readUint64(archive,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  numPackStreams  =  readUint64(archive,  header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  numPackStreams  =  readUint64(archive,  header);	  int    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	64	None	replace
186	[BUG]  [BUGGY]  final  double  nid  =  readUint64(header);  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  double  nid  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  double  nid  =  readUint64(header);	  if(header!=    null)    {    final    int    nid    =    readUint64(header);    }    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	21	None	replace
187	[BUG]  [BUGGY]  final  byte  nid  =  readUint64(header);  [CE]  possible  loss  of  precision  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  byte  nid  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  byte  nid  =  readUint64(header);	  if(header!=    null)    {    final    int    nid    =    readUint64(header);    }    	non-compiled	[CE]  possible  loss  of  precision	21	None	replace
188	[BUG]  [BUGGY]  final  double  numPackStreams  =  readUint64(header,  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  double  numPackStreams  =  readUint64(header,  archive);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  double  numPackStreams  =  readUint64(header,  archive);	  final    double    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	39	None	replace
189	[BUG]  [BUGGY]  numPackStreams  =  readUint64(header);  [CE]  cannot  find  symbol  numPackStreams  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	numPackStreams  =  readUint64(header);	  final    double    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  numPackStreams	39	None	replace
190	[BUG]  [BUGGY]  final  double  numPackStreams  =  readUint64(header.length);  [CE]  cannot  find  symbol  length  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  double  numPackStreams  =  readUint64(header.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  double  numPackStreams  =  readUint64(header.length);	  final    double    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  length	39	None	replace
191	[BUG]  [BUGGY]  int  numPackStreams  =  readUint64(header.readUnsignedByte());  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  numPackStreams  =  readUint64(header.readUnsignedByte());  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  numPackStreams  =  readUint64(header.readUnsignedByte());	  long    numPackStreams    =    readUint64(header.readUnsignedByte());    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	68	None	replace
192	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.readUnsignedByte());  [CE]  cannot  find  symbol  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.readUnsignedByte());  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(header,  archive.readUnsignedByte());	  long    numPackStreams    =    readUint64(header.readUnsignedByte());    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
193	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header.readUnsignedByte(),  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  long  numPackStreams  =  readUint64(header.readUnsignedByte(),  archive);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(header.readUnsignedByte(),  archive);	  long    numPackStreams    =    readUint64(header.readUnsignedByte());    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	68	None	replace
194	[BUG]  [BUGGY]  Integer  numPackStreams  =  readUint64(header.readUnsignedByte());  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  numPackStreams  =  readUint64(header.readUnsignedByte());  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  numPackStreams  =  readUint64(header.readUnsignedByte());	  long    numPackStreams    =    readUint64(header.readUnsignedByte());    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	68	None	replace
195	[BUG]  [BUGGY]  byte  numPackStreams  =  readUint64(header.readUnsignedByte());  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  byte  numPackStreams  =  readUint64(header.readUnsignedByte());  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	byte  numPackStreams  =  readUint64(header.readUnsignedByte());	  long    numPackStreams    =    readUint64(header.readUnsignedByte());    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	68	None	replace
196	[BUG]  [BUGGY]  String  numPackStreams  =  readUint64(header);  [CE]  incompatible  types  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  String  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	String  numPackStreams  =  readUint64(header);	  char    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  incompatible  types	1	None	replace
197	[BUG]  [BUGGY]  BigInteger  numPackStreams  =  readUint64(header);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  BigInteger  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	BigInteger  numPackStreams  =  readUint64(header);	  char    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
198	[BUG]  [BUGGY]  Integer  nid  =  archive.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  archive.readUnsignedByte();  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  archive.readUnsignedByte();	  Integer    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
199	[BUG]  [BUGGY]  Integer  nid  =  archive.packPos.readUnsignedByte();  [CE]  long  cannot  be  dereferenced  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  archive.packPos.readUnsignedByte();  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  archive.packPos.readUnsignedByte();	  Integer    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  long  cannot  be  dereferenced	72	None	replace
200	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  header.readUnsignedByte()  +  1;	  Integer    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	72	None	replace
201	[BUG]  [BUGGY]  Integer  nid  =  file.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  file.readUnsignedByte();  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  file.readUnsignedByte();	  Integer    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	72	None	replace
202	[BUG]  [BUGGY]  int  nid  =  archive.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  nid  =  archive.readUnsignedByte();  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  nid  =  archive.readUnsignedByte();	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
203	[BUG]  [BUGGY]  byte  nid  =  header.readUnsignedByte();  [CE]  possible  loss  of  precision  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  byte  nid  =  header.readUnsignedByte();  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	byte  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  possible  loss  of  precision	7	None	replace
204	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  nid  =  header.readUnsignedByte()  +  1;	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	7	None	replace
205	[BUG]  [BUGGY]  long  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  long  nid  =  header.readUnsignedByte();  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	7	None	replace
206	[BUG]  [BUGGY]  static  final  int  numPackStreams  =  readUint64(header,  archive.packPos,  header);  [CE]  illegal  start  of  expression  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  static  final  int  numPackStreams  =  readUint64(header,  archive.packPos,  header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	static  final  int  numPackStreams  =  readUint64(header,  archive.packPos,  header);	  static    final    long    numPackStreams    =    readUint64(header,    archive.packPos,    header);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
207	[BUG]  [BUGGY]  static  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);  [CE]  illegal  start  of  expression  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  static  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	static  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);	  static    final    long    numPackStreams    =    readUint64(header,    archive.packPos,    header);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
208	[BUG]  [BUGGY]  Integer  numPackStreams  =  readUint64(header.byteValue());  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  numPackStreams  =  readUint64(header.byteValue());  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  numPackStreams  =  readUint64(header.byteValue());	  Integer    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
209	[BUG]  [BUGGY]  Integer  numPackStreams  =  readUint64(header,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  numPackStreams  =  readUint64(header,  fileName);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  numPackStreams  =  readUint64(header,  fileName);	  Integer    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	61	None	replace
210	[BUG]  [BUGGY]  Integer  numPackStreams  =  readUint64(header.length);  [CE]  cannot  find  symbol  length  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  numPackStreams  =  readUint64(header.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  numPackStreams  =  readUint64(header.length);	  Integer    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  length	61	None	replace
211	[BUG]  [BUGGY]  Short  numPackStreams  =  readUint64(header);  [CE]  incompatible  types  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Short  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Short  numPackStreams  =  readUint64(header);	  long    numPackStreams    =    readUint64(header);    Short    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  incompatible  types	67	None	replace
212	[BUG]  [BUGGY]  int  nid  =  archive.packPos;  [CE]  possible  loss  of  precision  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  nid  =  archive.packPos;  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  nid  =  archive.packPos;	  int    nid    =    archive.packPos.length;    	non-compiled	[CE]  possible  loss  of  precision	74	None	replace
213	[BUG]  [BUGGY]  int  nid  =  header.packPos.length;  [CE]  cannot  find  symbol  packPos  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  nid  =  header.packPos.length;  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  nid  =  header.packPos.length;	  int    nid    =    archive.packPos.length;    	non-compiled	[CE]  cannot  find  symbol  packPos	74	None	replace
214	[BUG]  [BUGGY]  int  nid  =  archive.packPos.length  +  1;  [CE]  long  cannot  be  dereferenced  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  nid  =  archive.packPos.length  +  1;  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  nid  =  archive.packPos.length  +  1;	  int    nid    =    archive.packPos.length;    	non-compiled	[CE]  long  cannot  be  dereferenced	74	None	replace
215	[BUG]  [BUGGY]  int  nid  =  archive.packPos  +  header.length;  [CE]  cannot  find  symbol  length  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  nid  =  archive.packPos  +  header.length;  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  nid  =  archive.packPos  +  header.length;	  int    nid    =    archive.packPos.length;    	non-compiled	[CE]  cannot  find  symbol  length	74	None	replace
216	[BUG]  [BUGGY]  int  nid  =  file.packPos.length;  [CE]  cannot  find  symbol  packPos  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  nid  =  file.packPos.length;  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  nid  =  file.packPos.length;	  int    nid    =    archive.packPos.length;    	non-compiled	[CE]  cannot  find  symbol  packPos	74	None	replace
217	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUint64(header,  archive);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  readUint64(header,  archive);	  Integer    nid    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	6	None	replace
218	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header.length);  [CE]  cannot  find  symbol  length  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUint64(header.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  readUint64(header.length);	  Integer    nid    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  length	6	None	replace
219	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header.byteValue());  [CE]  cannot  find  symbol  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUint64(header.byteValue());  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  readUint64(header.byteValue());	  Integer    nid    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
220	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUint64(header,  fileName);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  readUint64(header,  fileName);	  Integer    nid    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	6	None	replace
221	[BUG]  [BUGGY]  final  String  numPackStreams  =  readUint64(header);  [CE]  incompatible  types  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  String  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  String  numPackStreams  =  readUint64(header);	  final    char    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  incompatible  types	57	None	replace
222	[BUG]  [BUGGY]  Final  String  numPackStreams  =  readUint64(header);  [CE]  ';'  expected  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Final  String  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Final  String  numPackStreams  =  readUint64(header);	  final    char    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  ';'  expected	57	None	replace
223	[BUG]  [BUGGY]  int  numPackStreams  =  readUint64(header.length);  [CE]  cannot  find  symbol  length  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  numPackStreams  =  readUint64(header.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  numPackStreams  =  readUint64(header.length);	  long    numPackStreams    =    readUint64(header.length);    	non-compiled	[CE]  cannot  find  symbol  length	42	None	replace
224	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header.length  +  1);  [CE]  cannot  find  symbol  length  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  long  numPackStreams  =  readUint64(header.length  +  1);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(header.length  +  1);	  long    numPackStreams    =    readUint64(header.length);    	non-compiled	[CE]  cannot  find  symbol  length	42	None	replace
225	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header.length,  archive.packPos);  [CE]  cannot  find  symbol  length  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  long  numPackStreams  =  readUint64(header.length,  archive.packPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(header.length,  archive.packPos);	  long    numPackStreams    =    readUint64(header.length);    	non-compiled	[CE]  cannot  find  symbol  length	42	None	replace
226	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packStackPos  +  1);  [CE]  cannot  find  symbol  packStackPos  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packStackPos  +  1);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.packStackPos  +  1);	  final    long    numPackStreams    =    readUint64(header,    archive.packStackPos);    	non-compiled	[CE]  cannot  find  symbol  packStackPos	18	None	replace
227	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos  +  1);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos  +  1);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.packPos  +  1);	  final    long    numPackStreams    =    readUint64(header,    archive.packStackPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	18	None	replace
228	[BUG]  [BUGGY]  final  String  numPackStreams  =  readUint64(header,  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  String  numPackStreams  =  readUint64(header,  archive);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  String  numPackStreams  =  readUint64(header,  archive);	  final    byte    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	15	None	replace
229	[BUG]  [BUGGY]  final  byte  numPackStreams  =  readUint64(header,  archive.packSizes);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  byte  numPackStreams  =  readUint64(header,  archive.packSizes);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  byte  numPackStreams  =  readUint64(header,  archive.packSizes);	  final    byte    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	15	None	replace
230	[BUG]  [BUGGY]  final  float  numPackStreams  =  readUint64(header,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  float  numPackStreams  =  readUint64(header,  archive.packPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  float  numPackStreams  =  readUint64(header,  archive.packPos);	  final    float    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	59	None	replace
231	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive.packPos,  signature);  [CE]  cannot  find  symbol  signature  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive.packPos,  signature);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(header,  archive.packPos,  signature);	  final    int    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  signature	40	None	replace
232	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive.packPos,  length);  [CE]  cannot  find  symbol  length  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive.packPos,  length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(header,  archive.packPos,  length);	  final    int    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  length	40	None	replace
233	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive.packPos,  index);  [CE]  cannot  find  symbol  index  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive.packPos,  index);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(header,  archive.packPos,  index);	  final    int    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  index	40	None	replace
234	[BUG]  [BUGGY]  final  double  numPackStreams  =  readUint64(header,  archive.packPos,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  double  numPackStreams  =  readUint64(header,  archive.packPos,  fileName);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  double  numPackStreams  =  readUint64(header,  archive.packPos,  fileName);	  final    double    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	71	None	replace
235	[BUG]  [BUGGY]  final  double  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);  [CE]  cannot  find  symbol  length  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  double  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  double  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);	  final    double    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  length	71	None	replace
236	[BUG]  [BUGGY]  final  double  numPackStreams  =  readUint64(header,  archive.packPos,  signature);  [CE]  cannot  find  symbol  signature  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  double  numPackStreams  =  readUint64(header,  archive.packPos,  signature);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  double  numPackStreams  =  readUint64(header,  archive.packPos,  signature);	  final    double    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  signature	71	None	replace
237	[BUG]  [BUGGY]  final  double  numPackStreams  =  readUint64(header,  archive.packPos,  false);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  double  numPackStreams  =  readUint64(header,  archive.packPos,  false);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  double  numPackStreams  =  readUint64(header,  archive.packPos,  false);	  final    double    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	71	None	replace
238	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packSizes,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packSizes,  header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.packSizes,  header);	  final    long    numPackStreams    =    readUint64(header,    archive.packSizes);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	16	None	replace
239	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packSizes,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packSizes,  fileName);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.packSizes,  fileName);	  final    long    numPackStreams    =    readUint64(header,    archive.packSizes);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	16	None	replace
240	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packSizes,  header.length);  [CE]  cannot  find  symbol  length  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packSizes,  header.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.packSizes,  header.length);	  final    long    numPackStreams    =    readUint64(header,    archive.packSizes);    	non-compiled	[CE]  cannot  find  symbol  length	16	None	replace
241	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packSizes,  signature);  [CE]  cannot  find  symbol  signature  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packSizes,  signature);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.packSizes,  signature);	  final    long    numPackStreams    =    readUint64(header,    archive.packSizes);    	non-compiled	[CE]  cannot  find  symbol  signature	16	None	replace
242	[BUG]  [BUGGY]  Long  numPackStreams  =  readUint64(header,  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Long  numPackStreams  =  readUint64(header,  archive);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Long  numPackStreams  =  readUint64(header,  archive);	  Long    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	28	None	replace
243	[BUG]  [BUGGY]  nextHeaderSize  =  readUint64(header);  [CE]  cannot  find  symbol  nextHeaderSize  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  nextHeaderSize  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	nextHeaderSize  =  readUint64(header);	  long    numPackStreams    =    readUint64(header);    long    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  nextHeaderSize	30	None	replace
244	[BUG]  [BUGGY]  Integer  nid  =  currentFolderInputStream.get(header);  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  currentFolderInputStream.get(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  currentFolderInputStream.get(header);	  Integer    nid    =    inputStreamStack.get(header);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
245	[BUG]  [BUGGY]  Integer  nid  =  archive.packPos.get(header);  [CE]  long  cannot  be  dereferenced  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  archive.packPos.get(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  archive.packPos.get(header);	  Integer    nid    =    inputStreamStack.get(header);    	non-compiled	[CE]  long  cannot  be  dereferenced	73	None	replace
246	[BUG]  [BUGGY]  Integer  nid  =  this.currentFolderInputStream.get(header);  [CE]  cannot  find  symbol  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  this.currentFolderInputStream.get(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  this.currentFolderInputStream.get(header);	  Integer    nid    =    inputStreamStack.get(header);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
247	[BUG]  [BUGGY]  Integer  nid  =  archive.get(header);  [CE]  cannot  find  symbol  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  archive.get(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  archive.get(header);	  Integer    nid    =    inputStreamStack.get(header);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
248	[BUG]  [BUGGY]  Integer  nid  =  header.get(header);  [CE]  cannot  find  symbol  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.get(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  header.get(header);	  Integer    nid    =    inputStreamStack.get(header);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
249	[BUG]  [BUGGY]  Integer  nid  =  archive.inputStreamStack.get(header);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  archive.inputStreamStack.get(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  archive.inputStreamStack.get(header);	  Integer    nid    =    inputStreamStack.get(header);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	73	None	replace
250	[BUG]  [BUGGY]  nid  =  readUint64(header);  [CE]  cannot  find  symbol  nid  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  nid  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	nid  =  readUint64(header);	  long    numPackStreams    =    readUint64(header);    long    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  nid	30	None	replace
251	[BUG]  [BUGGY]  Integer  nid  =  inputStreamSize.get(header);  [CE]  cannot  find  symbol  inputStreamSize  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  inputStreamSize.get(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  inputStreamSize.get(header);	  Integer    nid    =    inputStreamStack.get(header);    	non-compiled	[CE]  cannot  find  symbol  inputStreamSize	73	None	replace
252	[BUG]  [BUGGY]  final  long  headerSize  =  readUint64(header,  archive.nextHeaderSize);  [CE]  cannot  find  symbol  nextHeaderSize  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  headerSize  =  readUint64(header,  archive.nextHeaderSize);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  headerSize  =  readUint64(header,  archive.nextHeaderSize);	  final    long    numPackStreams    =    readUint64(header,    archive.nextHeaderSize);    	non-compiled	[CE]  cannot  find  symbol  nextHeaderSize	51	None	replace
253	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.lastHeaderSize);  [CE]  cannot  find  symbol  lastHeaderSize  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.lastHeaderSize);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.lastHeaderSize);	  final    long    numPackStreams    =    readUint64(header,    archive.nextHeaderSize);    	non-compiled	[CE]  cannot  find  symbol  lastHeaderSize	51	None	replace
254	[BUG]  [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(deferredBlockStreams);  [CE]  cannot  find  symbol  numPackStreams  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(deferredBlockStreams);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(deferredBlockStreams);	  ArrayList    <    Long>    deferredBlockStreams    =    new    ArrayList    <    Long>(length);    	non-compiled	[CE]  cannot  find  symbol  numPackStreams	9	None	replace
255	[BUG]  [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(header);  [CE]  no  suitable  constructor  found  for  ArrayList(DataInput)  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(header);	  ArrayList    <    Long>    deferredBlockStreams    =    new    ArrayList    <    Long>(length);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(DataInput)	9	None	replace
256	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  sourcePos);  [CE]  cannot  find  symbol  sourcePos  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUint64(header,  sourcePos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  readUint64(header,  sourcePos);	  Integer    nid    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  sourcePos	6	None	replace
257	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  source);  [CE]  cannot  find  symbol  source  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUint64(header,  source);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  readUint64(header,  source);	  Integer    nid    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  source	6	None	replace
258	[BUG]  [BUGGY]  int  numPackStreams  =  readUint64(header,  archive.packSize);  [CE]  cannot  find  symbol  packSize  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  numPackStreams  =  readUint64(header,  archive.packSize);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  numPackStreams  =  readUint64(header,  archive.packSize);	  int    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  packSize	64	None	replace
259	[BUG]  [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos,  encoder);  [CE]  cannot  find  symbol  encoder  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos,  encoder);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos,  encoder);	  ArrayList    <    Long>    deferredBlockStreams    =    new    ArrayList    <    Long>(archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  encoder	12	None	replace
260	[BUG]  [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos,  inputStreamStack);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos,  inputStreamStack);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos,  inputStreamStack);	  ArrayList    <    Long>    deferredBlockStreams    =    new    ArrayList    <    Long>(archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	12	None	replace
261	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive.packPos,  headerSize);  [CE]  cannot  find  symbol  headerSize  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive.packPos,  headerSize);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(header,  archive.packPos,  headerSize);	  final    int    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  headerSize	40	None	replace
262	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive.packPos,  name);  [CE]  cannot  find  symbol  name  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive.packPos,  name);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(header,  archive.packPos,  name);	  final    int    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  name	40	None	replace
263	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header,  header.readUnsignedByte());  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  long  numPackStreams  =  readUint64(header,  header.readUnsignedByte());  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(header,  header.readUnsignedByte());	  long    numPackStreams    =    readUint64(header.readUnsignedByte());    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	68	None	replace
264	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header.readUnsignedByte(),  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  long  numPackStreams  =  readUint64(header.readUnsignedByte(),  header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(header.readUnsignedByte(),  header);	  long    numPackStreams    =    readUint64(header.readUnsignedByte());    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	68	None	replace
265	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte(packPos);  [CE]  cannot  find  symbol  packPos  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedByte(packPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  header.readUnsignedByte(packPos);	  Integer    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  packPos	72	None	replace
266	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte(header);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedByte(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  header.readUnsignedByte(header);	  Integer    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	72	None	replace
267	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte(0);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedByte(0);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  header.readUnsignedByte(0);	  Integer    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	72	None	replace
268	[BUG]  [BUGGY]  Integer  numPackStreams  =  readUint64(header);  int  nid  =  readUint64(header);  [CE]  incompatible  types  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  numPackStreams  =  readUint64(header);  int  nid  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  numPackStreams  =  readUint64(header);  int  nid  =  readUint64(header);	  long    numPackStreams    =    readUint64(header);    int    nid    =    readUint64(header);    	non-compiled	[CE]  incompatible  types	35	None	replace
269	[BUG]  [BUGGY]  int  numPackStreams  =  readUint64(header);  int  nid  =  readUint64(header);  [CE]  possible  loss  of  precision  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  numPackStreams  =  readUint64(header);  int  nid  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  numPackStreams  =  readUint64(header);  int  nid  =  readUint64(header);	  long    numPackStreams    =    readUint64(header);    int    nid    =    readUint64(header);    	non-compiled	[CE]  possible  loss  of  precision	35	None	replace
270	[BUG]  [BUGGY]  byte  numPackStreams  =  readUint64(header);  int  nid  =  readUint64(header);  [CE]  possible  loss  of  precision  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  byte  numPackStreams  =  readUint64(header);  int  nid  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	byte  numPackStreams  =  readUint64(header);  int  nid  =  readUint64(header);	  long    numPackStreams    =    readUint64(header);    int    nid    =    readUint64(header);    	non-compiled	[CE]  possible  loss  of  precision	35	None	replace
271	[BUG]  [BUGGY]  int  nid  =  archive.packPos.length  +  6;  [CE]  long  cannot  be  dereferenced  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  nid  =  archive.packPos.length  +  6;  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  nid  =  archive.packPos.length  +  6;	  int    nid    =    archive.packPos.length;    	non-compiled	[CE]  long  cannot  be  dereferenced	74	None	replace
272	[BUG]  [BUGGY]  int  nid  =  archives.packPos.length;  [CE]  package  archives  does  not  exist  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  nid  =  archives.packPos.length;  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  nid  =  archives.packPos.length;	  int    nid    =    archive.packPos.length;    	non-compiled	[CE]  package  archives  does  not  exist	74	None	replace
273	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header,  header.length);  [CE]  cannot  find  symbol  length  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  long  numPackStreams  =  readUint64(header,  header.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(header,  header.length);	  long    numPackStreams    =    readUint64(header.length);    	non-compiled	[CE]  cannot  find  symbol  length	42	None	replace
274	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  long  numPackStreams  =  readUint64(header,  fileName);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(header,  fileName);	  long    numPackStreams    =    readUint64(header.length);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	42	None	replace
275	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archives.packSizes);  [CE]  cannot  find  symbol  archives  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archives.packSizes);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(header,  archives.packSizes);	  final    long    numPackStreams    =    readUint64(header,    archive.packSizes);    	non-compiled	[CE]  cannot  find  symbol  archives	16	None	replace
276	[BUG]  [BUGGY]  static  final  long  numPackStreams  =  readUint64(header,  archive.packSizes);  [CE]  illegal  start  of  expression  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  static  final  long  numPackStreams  =  readUint64(header,  archive.packSizes);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	static  final  long  numPackStreams  =  readUint64(header,  archive.packSizes);	  final    long    numPackStreams    =    readUint64(header,    archive.packSizes);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
277	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archives.packPos,  header.length);  [CE]  cannot  find  symbol  archives  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archives.packPos,  header.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(header,  archives.packPos,  header.length);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos,    header.length);    	non-compiled	[CE]  cannot  find  symbol  archives	47	None	replace
278	[BUG]  [BUGGY]  final  short  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);  [CE]  cannot  find  symbol  length  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  short  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  short  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos,    header.length);    	non-compiled	[CE]  cannot  find  symbol  length	47	None	replace
279	[BUG]  [BUGGY]  Integer  numPackStreams  =  readUint64(header,  source);  [CE]  cannot  find  symbol  source  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  numPackStreams  =  readUint64(header,  source);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  numPackStreams  =  readUint64(header,  source);	  Integer    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  source	61	None	replace
280	[BUG]  [BUGGY]  Integer  numPackStreams  =  readUint64(header,  sourcePos);  [CE]  cannot  find  symbol  sourcePos  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  numPackStreams  =  readUint64(header,  sourcePos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  numPackStreams  =  readUint64(header,  sourcePos);	  Integer    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  sourcePos	61	None	replace
281	[BUG]  [BUGGY]  Integer  numPackStreams  =  readUint64(header,  inputStreamStack);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  numPackStreams  =  readUint64(header,  inputStreamStack);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  numPackStreams  =  readUint64(header,  inputStreamStack);	  Integer    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	61	None	replace
282	[BUG]  [BUGGY]  float  numPackStreams  =  readUint64(header.length);  [CE]  cannot  find  symbol  length  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  float  numPackStreams  =  readUint64(header.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	float  numPackStreams  =  readUint64(header.length);	  float    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  length	5	None	replace
283	[BUG]  [BUGGY]  Integer  numPackStreams  =  readUint64(archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  numPackStreams  =  readUint64(archive);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  numPackStreams  =  readUint64(archive);	  long    numPackStreams    =    readUint64(archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	43	None	replace
284	[BUG]  [BUGGY]  double  numPackStreams  =  readUint64(header);  NoClassDefFoundError  <  NID.kCRC)  {  [CE]  >  expected  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  double  numPackStreams  =  readUint64(header);  NoClassDefFoundError  <  NID.kCRC)  {  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	double    numPackStreams    =    readUint64(header);    NoClassDefFoundError  <  NID.kCRC)  {	  	non-compiled	[CE]  >  expected	2	None	add
285	[BUG]  [BUGGY]  long  headerSize  =  readUint64(header,  archive.length);  [CE]  cannot  find  symbol  length  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  long  headerSize  =  readUint64(header,  archive.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  headerSize  =  readUint64(header,  archive.length);	  long    numPackStreams    =    readUint64(header,    archive.length);    	non-compiled	[CE]  cannot  find  symbol  length	56	None	replace
286	[BUG]  [BUGGY]  final  byte  numPackStreams  =  readUint64(header,  archive.zipPos);  [CE]  cannot  find  symbol  zipPos  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  byte  numPackStreams  =  readUint64(header,  archive.zipPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  byte  numPackStreams  =  readUint64(header,  archive.zipPos);	  final    byte    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  zipPos	15	None	replace
287	[BUG]  [BUGGY]  final  byte  numPackStreams  =  readUint64(header,  archive.nextHeaderSize);  [CE]  cannot  find  symbol  nextHeaderSize  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  byte  numPackStreams  =  readUint64(header,  archive.nextHeaderSize);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  byte  numPackStreams  =  readUint64(header,  archive.nextHeaderSize);	  final    byte    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  nextHeaderSize	15	None	replace
288	[BUG]  [BUGGY]  final  byte  numPackStreams  =  readUint64(header,  archive.packSize);  [CE]  cannot  find  symbol  packSize  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  byte  numPackStreams  =  readUint64(header,  archive.packSize);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  byte  numPackStreams  =  readUint64(header,  archive.packSize);	  final    byte    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  packSize	15	None	replace
289	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(header,  fileName,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  numPackStreams  =  readUint64(header,  fileName,  archive.packPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(header,  fileName,  archive.packPos);	  final    long    numPackStreams    =    readUint64(header,    header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	65	None	replace
290	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(header,  dataInput,  header,  archive.packPos);  [CE]  cannot  find  symbol  dataInput  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  numPackStreams  =  readUint64(header,  dataInput,  header,  archive.packPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(header,  dataInput,  header,  archive.packPos);	  final    long    numPackStreams    =    readUint64(header,    header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  dataInput	65	None	replace
291	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(header,  source,  archive.packPos);  [CE]  cannot  find  symbol  source  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  numPackStreams  =  readUint64(header,  source,  archive.packPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(header,  source,  archive.packPos);	  final    long    numPackStreams    =    readUint64(header,    header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  source	65	None	replace
292	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  List  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	List  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
293	[BUG]  [BUGGY]  byte  numPackStreams  =  readUint64(header,  archive.zipPos);  [CE]  cannot  find  symbol  zipPos  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  byte  numPackStreams  =  readUint64(header,  archive.zipPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	byte  numPackStreams  =  readUint64(header,  archive.zipPos);	  byte    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  zipPos	29	None	replace
294	[BUG]  [BUGGY]  byte  numPackStreams  =  readUint64(header,  archive.nextHeaderSize);  [CE]  cannot  find  symbol  nextHeaderSize  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  byte  numPackStreams  =  readUint64(header,  archive.nextHeaderSize);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	byte  numPackStreams  =  readUint64(header,  archive.nextHeaderSize);	  byte    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  nextHeaderSize	29	None	replace
295	[BUG]  [BUGGY]  byte  numPackStreams  =  readUint64(header,  archive.packSize);  [CE]  cannot  find  symbol  packSize  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  byte  numPackStreams  =  readUint64(header,  archive.packSize);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	byte  numPackStreams  =  readUint64(header,  archive.packSize);	  byte    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  packSize	29	None	replace
296	[BUG]  [BUGGY]  if(header  ==  null)  {  final  int  nid  =  readUint64(header);  }  [CE]  possible  loss  of  precision  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  if(header  ==  null)  {  final  int  nid  =  readUint64(header);  }  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	if(header  ==  null)  {  final  int  nid  =  readUint64(header);  }	  if(header!=    null)    {    final    long    nid    =    readUint64(header);    }    	non-compiled	[CE]  possible  loss  of  precision	20	None	replace
297	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  archive.packPos,  index);  [CE]  cannot  find  symbol  index  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUint64(header,  archive.packPos,  index);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  readUint64(header,  archive.packPos,  index);	  Integer    nid    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  index	10	None	replace
298	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  archive.packPos,  name);  [CE]  cannot  find  symbol  name  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUint64(header,  archive.packPos,  name);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  readUint64(header,  archive.packPos,  name);	  Integer    nid    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  name	10	None	replace
299	[BUG]  [BUGGY]  if(header  ==  null)  {  final  int  numPackStreams  =  readUint64(header,  archive.packPos);  }  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  if(header  ==  null)  {  final  int  numPackStreams  =  readUint64(header,  archive.packPos);  }  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	if(header  ==  null)  {  final  int  numPackStreams  =  readUint64(header,  archive.packPos);  }	  if(header!=    null)    {    final    long    numPackStreams    =    readUint64(header,    archive.packPos);    }    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	70	None	replace
300	[BUG]  [BUGGY]  byte  numPackStreams  =  readUint64(header,  archive.packPos,  headerSize);  [CE]  cannot  find  symbol  headerSize  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  byte  numPackStreams  =  readUint64(header,  archive.packPos,  headerSize);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	byte  numPackStreams  =  readUint64(header,  archive.packPos,  headerSize);	  byte    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  headerSize	26	None	replace
301	[BUG]  [BUGGY]  Long  headerSize  =  readUint64(header);  [CE]  cannot  find  symbol  numPackStreams  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Long  headerSize  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Long  headerSize  =  readUint64(header);	  Long    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  numPackStreams	28	None	replace
302	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.printPos);  [CE]  cannot  find  symbol  printPos  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.printPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.printPos);	  final    long    numPackStreams    =    readUint64(header,    archive.zipPos);    	non-compiled	[CE]  cannot  find  symbol  printPos	50	None	replace
303	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.zipPos  +  1);  [CE]  cannot  find  symbol  zipPos  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.zipPos  +  1);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.zipPos  +  1);	  final    long    numPackStreams    =    readUint64(header,    archive.zipPos);    	non-compiled	[CE]  cannot  find  symbol  zipPos	50	None	replace
304	[BUG]  [BUGGY]  double  numPackStreams  =  readUint64(header.length);  [CE]  cannot  find  symbol  length  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  double  numPackStreams  =  readUint64(header.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	double  numPackStreams  =  readUint64(header.length);	  double    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  length	3	None	replace
305	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.packPos,  inputStreamStack);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.packPos,  inputStreamStack);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.packPos,  inputStreamStack);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	11	None	replace
306	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.packPos,  encoder);  [CE]  cannot  find  symbol  encoder  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.packPos,  encoder);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.packPos,  encoder);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  encoder	11	None	replace
307	[BUG]  [BUGGY]  final  byte  numPackStreams  =  readUint64(header,  archive.packPos,  name);  [CE]  cannot  find  symbol  name  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  byte  numPackStreams  =  readUint64(header,  archive.packPos,  name);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  byte  numPackStreams  =  readUint64(header,  archive.packPos,  name);	  final    byte    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  name	45	None	replace
308	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header,  header.packPos,  header.length);  [CE]  cannot  find  symbol  packPos  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  long  numPackStreams  =  readUint64(header,  header.packPos,  header.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(header,  header.packPos,  header.length);	  long    numPackStreams    =    readUint64(header,    archive.packPos,    header.length);    	non-compiled	[CE]  cannot  find  symbol  packPos	27	None	replace
309	[BUG]  [BUGGY]  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  headerSize);  [CE]  cannot  find  symbol  headerSize  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  headerSize);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  numPackStreams  =  readUint64(header,  archive.packPos,  headerSize);	  Integer    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  headerSize	24	None	replace
310	[BUG]  [BUGGY]  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  name);  [CE]  cannot  find  symbol  name  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  name);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  numPackStreams  =  readUint64(header,  archive.packPos,  name);	  Integer    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  name	24	None	replace
311	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(header,  source);  [CE]  cannot  find  symbol  source  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  numPackStreams  =  readUint64(header,  source);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(header,  source);	  final    int    numPackStreams    =    readUint64(header,    archives.packPos);    	non-compiled	[CE]  cannot  find  symbol  source	63	None	replace
312	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(header,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  numPackStreams  =  readUint64(header,  fileName);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(header,  fileName);	  final    int    numPackStreams    =    readUint64(header,    archives.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	63	None	replace
313	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packSizePos);  [CE]  cannot  find  symbol  packSizePos  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packSizePos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.packSizePos);	  final    long    numPackStreams    =    readUint64(header,    archive.packStackPos);    	non-compiled	[CE]  cannot  find  symbol  packSizePos	18	None	replace
314	[BUG]  [BUGGY]  final  float  numPackStreams  =  readUint64(header);  final  float  nid  =  readUint64(header);  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  float  numPackStreams  =  readUint64(header);  final  float  nid  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final    float    numPackStreams    =    readUint64(header);    final  float  nid  =  readUint64(header);	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	58	None	add
315	[BUG]  [BUGGY]  final  float  numPackStreams  =  readUint64(header);  final  Float  numPackStreams  =  readUint64(header);  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  float  numPackStreams  =  readUint64(header);  final  Float  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final    float    numPackStreams    =    readUint64(header);    final  Float  numPackStreams  =  readUint64(header);	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	58	None	add
316	[BUG]  [BUGGY]  final  float  numPackStreams  =  readUint64(header);  final  int  numPackStreams  =  readUint64(header);  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  float  numPackStreams  =  readUint64(header);  final  int  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final    float    numPackStreams    =    readUint64(header);    final  int  numPackStreams  =  readUint64(header);	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	58	None	add
317	[BUG]  [BUGGY]  final  float  numPackStreams  =  readUint64(header);  final  float  numPackStreams  =  ReadUint64(header);  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  float  numPackStreams  =  readUint64(header);  final  float  numPackStreams  =  ReadUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final    float    numPackStreams    =    readUint64(header);    final  float  numPackStreams  =  ReadUint64(header);	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	58	None	add
318	[BUG]  [BUGGY]  final  double  numPackStreams  =  readUint64(header,  archive.zipPos);  [CE]  cannot  find  symbol  zipPos  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  double  numPackStreams  =  readUint64(header,  archive.zipPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  double  numPackStreams  =  readUint64(header,  archive.zipPos);	  final    double    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  zipPos	39	None	replace
319	[BUG]  [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  name);  [CE]  cannot  find  symbol  name  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  name);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  name);	  final    Integer    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  name	62	None	replace
320	[BUG]  [BUGGY]  final  char  nid  =  readUint64(header);  [CE]  possible  loss  of  precision  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  char  nid  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  char  nid  =  readUint64(header);	  if(header!=    null)    {    final    int    nid    =    readUint64(header);    }    	non-compiled	[CE]  possible  loss  of  precision	21	None	replace
321	[BUG]  [BUGGY]  final  float  nid  =  readUint64(header);  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  float  nid  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  float  nid  =  readUint64(header);	  if(header!=    null)    {    final    int    nid    =    readUint64(header);    }    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	21	None	replace
322	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  name);  [CE]  cannot  find  symbol  name  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  name);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.packPos,  name);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos,    headerSize);    	non-compiled	[CE]  cannot  find  symbol  name	49	None	replace
323	[BUG]  [BUGGY]  if(header!=  null)  {  static  final  long  numPackStreams  =  readUint64(header,  archive.packPos);  }  [CE]  illegal  start  of  expression  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  if(header!=  null)  {  static  final  long  numPackStreams  =  readUint64(header,  archive.packPos);  }  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	if(header!=  null)  {  static  final  long  numPackStreams  =  readUint64(header,  archive.packPos);  }	  static    final    long    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
324	[BUG]  [BUGGY]  final  float  numPackStreams  =  readUint64(header,  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  float  numPackStreams  =  readUint64(header,  archive);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  float  numPackStreams  =  readUint64(header,  archive);	  final    float    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	59	None	replace
325	[BUG]  [BUGGY]  int  numPackStreams  =  readUint64(header,  archive.packPos,  headerSize);  [CE]  cannot  find  symbol  headerSize  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  numPackStreams  =  readUint64(header,  archive.packPos,  headerSize);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  numPackStreams  =  readUint64(header,  archive.packPos,  headerSize);	  int    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  headerSize	22	None	replace
326	[BUG]  [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.zipPos);  [CE]  cannot  find  symbol  zipPos  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.zipPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  Integer  numPackStreams  =  readUint64(header,  archive.zipPos);	  final    Integer    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  zipPos	17	None	replace
327	[BUG]  [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.nextHeaderSize);  [CE]  cannot  find  symbol  nextHeaderSize  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.nextHeaderSize);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  Integer  numPackStreams  =  readUint64(header,  archive.nextHeaderSize);	  final    Integer    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  nextHeaderSize	17	None	replace
328	[BUG]  [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.packSize);  [CE]  cannot  find  symbol  packSize  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.packSize);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  Integer  numPackStreams  =  readUint64(header,  archive.packSize);	  final    Integer    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  packSize	17	None	replace
329	[BUG]  [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.bytes);  [CE]  cannot  find  symbol  bytes  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.bytes);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  Integer  numPackStreams  =  readUint64(header,  archive.bytes);	  final    Integer    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  bytes	17	None	replace
330	[BUG]  [BUGGY]  final  Long  headerSize  =  readUint64(header);  [CE]  cannot  find  symbol  numPackStreams  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  Long  headerSize  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  Long  headerSize  =  readUint64(header);	  final    Long    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  numPackStreams	60	None	replace
331	[BUG]  [BUGGY]  final  Integer  numPackStreams  =  readUint64(header);  [CE]  incompatible  types  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  Integer  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  Integer  numPackStreams  =  readUint64(header);	  final    Long    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  incompatible  types	60	None	replace
332	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(deferredBlockStreams);  [CE]  cannot  find  symbol  Lists  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(deferredBlockStreams);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(deferredBlockStreams);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Lists	8	None	replace
333	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithCapacity(archive.packPos);  [CE]  cannot  find  symbol  Lists  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithCapacity(archive.packPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithCapacity(archive.packPos);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Lists	8	None	replace
334	[BUG]  [BUGGY]  int  nid  =  archive.inputStreamSize();  [CE]  cannot  find  symbol  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  nid  =  archive.inputStreamSize();  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  nid  =  archive.inputStreamSize();	  int    nid    =    inputStreamStack.size();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
335	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(header);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  nid  =  header.readUnsignedByte(header);	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	7	None	replace
336	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header,  fileName,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  long  numPackStreams  =  readUint64(header,  fileName,  archive.packPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(header,  fileName,  archive.packPos);	  long    numPackStreams    =    readUint64(header,    archive.packPos,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	25	None	replace
337	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.packPos,  fileName,  deferredBlockStreams);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.packPos,  fileName,  deferredBlockStreams);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(header,  archive.packPos,  fileName,  deferredBlockStreams);	  long    numPackStreams    =    readUint64(header,    archive.packPos,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	25	None	replace
338	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);  [CE]  cannot  find  symbol  numPackStreams  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol  numPackStreams	52	None	replace
339	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);  [CE]  cannot  find  symbol  numPackStreams  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol  numPackStreams	52	None	replace
340	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive.packSize);  [CE]  cannot  find  symbol  packSize  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive.packSize);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(header,  archive.packSize);	  final    int    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  packSize	13	None	replace
341	[BUG]  [BUGGY]  final  double  numPackStreams  =  readUint64(header);  final  double  numPackStreams  =  ReadUint64(header);  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  double  numPackStreams  =  readUint64(header);  final  double  numPackStreams  =  ReadUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final    double    numPackStreams    =    readUint64(header);    final  double  numPackStreams  =  ReadUint64(header);	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	38	None	add
342	[BUG]  [BUGGY]  nid  =  readUint64(header);  Long  numPackStreams  =  readUint64(header);  [CE]  cannot  find  symbol  nid  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  nid  =  readUint64(header);  Long  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	nid  =  readUint64(header);  Long  numPackStreams  =  readUint64(header);	  long    numPackStreams    =    readUint64(header);    Long    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  nid	32	None	replace
343	[BUG]  [BUGGY]  final  long  headerSize  =  readUint64(header,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  headerSize  =  readUint64(header,  archive.packPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  headerSize  =  readUint64(header,  archive.packPos);	  final    double    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	71	None	replace
344	[BUG]  [BUGGY]  final  double  numPackStreams  =  readUint64(header,  archive.packPos,  headerSize);  [CE]  cannot  find  symbol  headerSize  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  double  numPackStreams  =  readUint64(header,  archive.packPos,  headerSize);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  double  numPackStreams  =  readUint64(header,  archive.packPos,  headerSize);	  final    double    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  headerSize	71	None	replace
345	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  fileName,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  fileName,  archive.packPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  fileName,  archive.packPos);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos,    fileName);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	46	None	replace
346	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archives.packPos,  fileName);  [CE]  cannot  find  symbol  archives  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archives.packPos,  fileName);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(header,  archives.packPos,  fileName);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos,    fileName);    	non-compiled	[CE]  cannot  find  symbol  archives	46	None	replace
347	[BUG]  [BUGGY]  float  numPackStreams  =  readUint64(header);  Integer  float  numPackStreams  =  readUint64(header);  [CE]  not  a  statement  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  float  numPackStreams  =  readUint64(header);  Integer  float  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	float    numPackStreams    =    readUint64(header);    Integer  float  numPackStreams  =  readUint64(header);	  	non-compiled	[CE]  not  a  statement	4	None	add
348	[BUG]  [BUGGY]  if(header!=  null)  {  static  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  header);  }  [CE]  illegal  start  of  expression  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  if(header!=  null)  {  static  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  header);  }  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	if(header!=  null)  {  static  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  header);  }	  static    final    long    numPackStreams    =    readUint64(header,    archive.packPos,    header);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
349	[BUG]  [BUGGY]  if(header!=  null)  {  long  numPackStreams  =  readUint64(header);  int  numPackStreams  =  readUint64(header);  }  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  if(header!=  null)  {  long  numPackStreams  =  readUint64(header);  int  numPackStreams  =  readUint64(header);  }  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	if(header!=  null)  {  long  numPackStreams  =  readUint64(header);  int  numPackStreams  =  readUint64(header);  }	  long    numPackStreams    =    readUint64(header);    int    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	31	None	replace
350	[BUG]  [BUGGY]  if(header!=  null)  {  long  numPackStreams  =  readUint64(header);  int  numPackStreams  =  readUint64(header);  }  else  {  archive.packPos  =  readUint64(header);  }  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  if(header!=  null)  {  long  numPackStreams  =  readUint64(header);  int  numPackStreams  =  readUint64(header);  }  else  {  archive.packPos  =  readUint64(header);  }  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	if(header!=  null)  {  long  numPackStreams  =  readUint64(header);  int  numPackStreams  =  readUint64(header);  }  else  {  archive.packPos  =  readUint64(header);  }	  long    numPackStreams    =    readUint64(header);    int    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	31	None	replace
351	[BUG]  [BUGGY]  if(header!=  null)  {  long  numPackStreams  =  readUint64(header);  int  numPackStreams  =  readUint64(header);  }  else  {  archive.packPos  =  header.readUnsignedByte();  }  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  if(header!=  null)  {  long  numPackStreams  =  readUint64(header);  int  numPackStreams  =  readUint64(header);  }  else  {  archive.packPos  =  header.readUnsignedByte();  }  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	if(header!=  null)  {  long  numPackStreams  =  readUint64(header);  int  numPackStreams  =  readUint64(header);  }  else  {  archive.packPos  =  header.readUnsignedByte();  }	  long    numPackStreams    =    readUint64(header);    int    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	31	None	replace
352	[BUG]  [BUGGY]  if(header!=  null)  {  long  numPackStreams  =  readUint64(header);  int  numPackStreams  =  readUint64(header);  }  else  {  archive.packPos  =  file.readUnsignedByte();  }  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  if(header!=  null)  {  long  numPackStreams  =  readUint64(header);  int  numPackStreams  =  readUint64(header);  }  else  {  archive.packPos  =  file.readUnsignedByte();  }  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	if(header!=  null)  {  long  numPackStreams  =  readUint64(header);  int  numPackStreams  =  readUint64(header);  }  else  {  archive.packPos  =  file.readUnsignedByte();  }	  long    numPackStreams    =    readUint64(header);    int    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	31	None	replace
353	[BUG]  [BUGGY]  if(header!=  null)  {  long  numPackStreams  =  readUint64(header);  int  numPackStreams  =  readUint64(header);  }  else  {  archive.packPos  =  file.length();  }  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  if(header!=  null)  {  long  numPackStreams  =  readUint64(header);  int  numPackStreams  =  readUint64(header);  }  else  {  archive.packPos  =  file.length();  }  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	if(header!=  null)  {  long  numPackStreams  =  readUint64(header);  int  numPackStreams  =  readUint64(header);  }  else  {  archive.packPos  =  file.length();  }	  long    numPackStreams    =    readUint64(header);    int    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	31	None	replace
354	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(body,  archive.packPos);  [CE]  cannot  find  symbol  body  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  numPackStreams  =  readUint64(body,  archive.packPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(body,  archive.packPos);	  final    int    numPackStreams    =    readUint64(header,    archives.packPos);    	non-compiled	[CE]  cannot  find  symbol  body	63	None	replace
355	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(header,  header.packPos);  [CE]  cannot  find  symbol  packPos  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  numPackStreams  =  readUint64(header,  header.packPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(header,  header.packPos);	  final    int    numPackStreams    =    readUint64(header,    archives.packPos);    	non-compiled	[CE]  cannot  find  symbol  packPos	63	None	replace
356	[BUG]  [BUGGY]  float  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  float  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	float    numPackStreams    =    readUint64(header);    int  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	4	None	add
357	[BUG]  [BUGGY]  float  numPackStreams  =  readUint64(header);  float  nPackStreams  =  readUint64(header);  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  float  numPackStreams  =  readUint64(header);  float  nPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	float    numPackStreams    =    readUint64(header);    float  nPackStreams  =  readUint64(header);	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	4	None	add
358	[BUG]  [BUGGY]  final  double  numPackStreams  =  readUint64(header);  final  double  numPackStreams  =  reader.readUint64(header);  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  double  numPackStreams  =  readUint64(header);  final  double  numPackStreams  =  reader.readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final    double    numPackStreams    =    readUint64(header);    final  double  numPackStreams  =  reader.readUint64(header);	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	38	None	add
359	[BUG]  [BUGGY]  final  double  numPackStreams  =  readUint64(header);  final  double  nid  =  header.readUnsignedByte();  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  double  numPackStreams  =  readUint64(header);  final  double  nid  =  header.readUnsignedByte();  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final    double    numPackStreams    =    readUint64(header);    final  double  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	38	None	add
360	[BUG]  [BUGGY]  final  Long  numPackStreams  =  readUint64(header,  archive.printPos);  [CE]  cannot  find  symbol  printPos  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  Long  numPackStreams  =  readUint64(header,  archive.printPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  Long  numPackStreams  =  readUint64(header,  archive.printPos);	  final    Long    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  printPos	60	None	replace
361	[BUG]  [BUGGY]  final  Long  numPackStreams  =  readUint64(header,  archive.zipPos);  [CE]  cannot  find  symbol  zipPos  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  Long  numPackStreams  =  readUint64(header,  archive.zipPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  Long  numPackStreams  =  readUint64(header,  archive.zipPos);	  final    Long    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  zipPos	60	None	replace
362	[BUG]  [BUGGY]  Integer  nid  =  archive.inputStreamSize();  [CE]  cannot  find  symbol  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  archive.inputStreamSize();  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  archive.inputStreamSize();	  Integer    nid    =    inputStreamStack.size();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
363	[BUG]  [BUGGY]  short  numPackStreams  =  readUint64(header,  archive.packPos,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  short  numPackStreams  =  readUint64(header,  archive.packPos,  header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	short  numPackStreams  =  readUint64(header,  archive.packPos,  header);	  long    numPackStreams    =    readUint64(header,    archive.packPos,    header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	23	None	replace
364	[BUG]  [BUGGY]  Integer  numPackStreams  =  readUint64(header,  archive.printPos);  [CE]  cannot  find  symbol  printPos  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  numPackStreams  =  readUint64(header,  archive.printPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  numPackStreams  =  readUint64(header,  archive.printPos);	  Integer    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  printPos	61	None	replace
365	[BUG]  [BUGGY]  Integer  nid  =  inputStream.get(header);  [CE]  cannot  find  symbol  inputStream  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  inputStream.get(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  inputStream.get(header);	  Integer    nid    =    inputStreamStack.get(header);    	non-compiled	[CE]  cannot  find  symbol  inputStream	73	None	replace
366	[BUG]  [BUGGY]  double  numPackStreams  =  readUint64(header.readUnsignedByte());  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  double  numPackStreams  =  readUint64(header.readUnsignedByte());  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	double  numPackStreams  =  readUint64(header.readUnsignedByte());	  double    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	3	None	replace
367	[BUG]  [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos  +  6);  [CE]  no  suitable  constructor  found  for  ArrayList(long)  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos  +  6);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos  +  6);	  ArrayList    <    Long>    deferredBlockStreams    =    new    ArrayList    <    Long>(archive.packPos);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(long)	12	None	replace
368	[BUG]  [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos,  archive.length);  [CE]  cannot  find  symbol  length  [FE]                                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos,  archive.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos,  archive.length);	  ArrayList    <    Long>    deferredBlockStreams    =    new    ArrayList    <    Long>(archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  length	12	None	replace
369	[BUG]  [BUGGY]  final  short  numPackStreams  =  readUint64(header);  [CE]  possible  loss  of  precision  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  short  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  short  numPackStreams  =  readUint64(header);	  final    byte    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  possible  loss  of  precision	37	None	replace
370	[BUG]  [BUGGY]  static  final  long  numPackStreams  =  readUint64(header);  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  static  final  long  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	static  final  long  numPackStreams  =  readUint64(header);	  final    byte    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
371	[BUG]  [BUGGY]  if(header!=  null)  {  final  float  numPackStreams  =  readUint64(header);  }  else  {  for(int  i  =  0;  i  <  archive.packPos;  i++)  {  archive.packPos  =  readUint64(header);  }  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  if(header!=  null)  {  final  float  numPackStreams  =  readUint64(header);  }  else  {  for(int  i  =  0;  i  <  archive.packPos;  i++)  {  archive.packPos  =  readUint64(header);  }  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	if(header!=  null)  {  final  float  numPackStreams  =  readUint64(header);  }  else  {  for(int  i  =  0;  i  <  archive.packPos;  i++)  {  archive.packPos  =  readUint64(header);  }	  final    float    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
372	[BUG]  [BUGGY]  if(header!=  null)  {  final  float  numPackStreams  =  readUint64(header);  }  else  {  for(int  i  =  0;  i  <  archive.packPos;  i++)  {  archive.packPos[i]  =  readUint64(header);  }  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  if(header!=  null)  {  final  float  numPackStreams  =  readUint64(header);  }  else  {  for(int  i  =  0;  i  <  archive.packPos;  i++)  {  archive.packPos[i]  =  readUint64(header);  }  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	if(header!=  null)  {  final  float  numPackStreams  =  readUint64(header);  }  else  {  for(int  i  =  0;  i  <  archive.packPos;  i++)  {  archive.packPos[i]  =  readUint64(header);  }	  final    float    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
373	[BUG]  [BUGGY]  if(header!=  null)  {  final  float  numPackStreams  =  readUint64(header);  }  else  {  for(int  i  =  0;  i  <  archive.packPos;  i++)  {  archive.packPos  =  readUint64(header  [CE]  ')'  expected  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  if(header!=  null)  {  final  float  numPackStreams  =  readUint64(header);  }  else  {  for(int  i  =  0;  i  <  archive.packPos;  i++)  {  archive.packPos  =  readUint64(header  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	if(header!=  null)  {  final  float  numPackStreams  =  readUint64(header);  }  else  {  for(int  i  =  0;  i  <  archive.packPos;  i++)  {  archive.packPos  =  readUint64(header	  final    float    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  ')'  expected	59	None	replace
374	[BUG]  [BUGGY]  if(header!=  null)  {  final  float  numPackStreams  =  readUint64(header);  }  else  {  for(int  i  =  0;  i  <  archive.packPos;  ++i)  {  archive.packPos  =  readUint64(header);  }  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  if(header!=  null)  {  final  float  numPackStreams  =  readUint64(header);  }  else  {  for(int  i  =  0;  i  <  archive.packPos;  ++i)  {  archive.packPos  =  readUint64(header);  }  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	if(header!=  null)  {  final  float  numPackStreams  =  readUint64(header);  }  else  {  for(int  i  =  0;  i  <  archive.packPos;  ++i)  {  archive.packPos  =  readUint64(header);  }	  final    float    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
375	[BUG]  [BUGGY]  int  numPackStreams  =  readUint64(header,  archive.packPos,  index);  [CE]  cannot  find  symbol  index  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  numPackStreams  =  readUint64(header,  archive.packPos,  index);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  numPackStreams  =  readUint64(header,  archive.packPos,  index);	  int    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  index	22	None	replace
376	[BUG]  [BUGGY]  float  numPackStreams  =  readUint64(header.readUnsignedByte());  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  float  numPackStreams  =  readUint64(header.readUnsignedByte());  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	float  numPackStreams  =  readUint64(header.readUnsignedByte());	  float    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	5	None	replace
377	[BUG]  [BUGGY]  int  numPackStreams  =  readUint64(header,  header,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  numPackStreams  =  readUint64(header,  header,  archive.packPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  numPackStreams  =  readUint64(header,  header,  archive.packPos);	  int    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	64	None	replace
378	[BUG]  [BUGGY]  int  numPackStreams  =  readUint64(header,  archive.packStackPos);  [CE]  cannot  find  symbol  packStackPos  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  numPackStreams  =  readUint64(header,  archive.packStackPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  numPackStreams  =  readUint64(header,  archive.packStackPos);	  int    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  packStackPos	64	None	replace
379	[BUG]  [BUGGY]  int  numPackStreams  =  readUint64(header,  archive.zipPos);  [CE]  cannot  find  symbol  zipPos  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  int  numPackStreams  =  readUint64(header,  archive.zipPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  numPackStreams  =  readUint64(header,  archive.zipPos);	  int    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  zipPos	64	None	replace
380	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header.readUnsignedByte());  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUint64(header.readUnsignedByte());  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  readUint64(header.readUnsignedByte());	  Integer    nid    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	6	None	replace
381	[BUG]  [BUGGY]  nid  =  readUint64(header);  Integer  numPackStreams  =  readUint64(header);  [CE]  cannot  find  symbol  nid  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  nid  =  readUint64(header);  Integer  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	nid  =  readUint64(header);  Integer  numPackStreams  =  readUint64(header);	  long    numPackStreams    =    readUint64(header);    Integer    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  nid	33	None	replace
382	[BUG]  [BUGGY]  boolean  numPackStreams  =  readUint64(header);  [CE]  incompatible  types  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  boolean  numPackStreams  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	boolean  numPackStreams  =  readUint64(header);	  long    numPackStreams    =    readUint64(header);    Integer    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  incompatible  types	33	None	replace
383	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header,  header,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  long  numPackStreams  =  readUint64(header,  header,  archive.packPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(header,  header,  archive.packPos);	  long    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	41	None	replace
384	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(header,  header.packPos,  header.length);  [CE]  cannot  find  symbol  packPos  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  numPackStreams  =  readUint64(header,  header.packPos,  header.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(header,  header.packPos,  header.length);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos,    header.length);    	non-compiled	[CE]  cannot  find  symbol  packPos	47	None	replace
385	[BUG]  [BUGGY]  final  double  numPackStreams  =  readUint64(header.readUnsignedByte());  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  double  numPackStreams  =  readUint64(header.readUnsignedByte());  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  double  numPackStreams  =  readUint64(header.readUnsignedByte());	  final    double    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	39	None	replace
386	[BUG]  [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  header,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  header,  archive.packPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  Integer  numPackStreams  =  readUint64(header,  header,  archive.packPos);	  final    Integer    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	17	None	replace
387	[BUG]  [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.printPos);  [CE]  cannot  find  symbol  printPos  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.printPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  Integer  numPackStreams  =  readUint64(header,  archive.printPos);	  final    Integer    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  printPos	17	None	replace
388	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  index);  [CE]  cannot  find  symbol  index  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  index);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.packPos,  index);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos,    headerSize);    	non-compiled	[CE]  cannot  find  symbol  index	49	None	replace
389	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  column);  [CE]  cannot  find  symbol  column  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  column);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.packPos,  column);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos,    headerSize);    	non-compiled	[CE]  cannot  find  symbol  column	49	None	replace
390	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header.readUnsignedByte(),  header.readUnsignedByte());  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  long  numPackStreams  =  readUint64(header.readUnsignedByte(),  header.readUnsignedByte());  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(header.readUnsignedByte(),  header.readUnsignedByte());	  long    numPackStreams    =    readUint64(header.readUnsignedByte());    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	68	None	replace
391	[BUG]  [BUGGY]  if(header!=  null)  {  final  long  nid  =  readUint64(header.length);  }  [CE]  cannot  find  symbol  length  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  if(header!=  null)  {  final  long  nid  =  readUint64(header.length);  }  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	if(header!=  null)  {  final  long  nid  =  readUint64(header.length);  }	  if(header!=    null)    {    final    long    nid    =    readUint64(header);    }    	non-compiled	[CE]  cannot  find  symbol  length	20	None	replace
392	[BUG]  [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  length);  [CE]  cannot  find  symbol  length  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  length);	  final    Integer    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  length	62	None	replace
393	[BUG]  [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  type);  [CE]  cannot  find  symbol  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  type);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  Integer  numPackStreams  =  readUint64(header,  archive.packPos,  type);	  final    Integer    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  type	62	None	replace
394	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive.printPos);  [CE]  cannot  find  symbol  printPos  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive.printPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(header,  archive.printPos);	  final    int    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  printPos	13	None	replace
395	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(file,  header,  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  int  numPackStreams  =  readUint64(file,  header,  archive);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(file,  header,  archive);	  final    int    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	13	None	replace
396	[BUG]  [BUGGY]  double  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  double  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	double    numPackStreams    =    readUint64(header);    int  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	2	None	add
397	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedInt();  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedInt();  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  header.readUnsignedInt();	  Integer    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
398	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.loadPos);  [CE]  cannot  find  symbol  loadPos  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.loadPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.loadPos);	  final    long    numPackStreams    =    readUint64(header,    archive.zipPos);    	non-compiled	[CE]  cannot  find  symbol  loadPos	50	None	replace
399	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.size);  [CE]  cannot  find  symbol  size  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.size);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(header,  archive.size);	  long    numPackStreams    =    readUint64(header.length);    	non-compiled	[CE]  cannot  find  symbol  size	42	None	replace
400	[BUG]  [BUGGY]  Byte  numPackStreams  =  readUint64(header,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  Byte  numPackStreams  =  readUint64(header,  archive.packPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Byte  numPackStreams  =  readUint64(header,  archive.packPos);	  byte    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	29	None	replace
401	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE,  archive.packPos);  [CE]  no  suitable  constructor  found  for  ArrayList(int,long)  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE,  archive.packPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE,  archive.packPos);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(archive.packPos);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,long)	11	None	replace
402	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName);  [CE]  no  suitable  constructor  found  for  ArrayList(String)  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(archive.packPos);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(String)	11	None	replace
403	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  header,  archive.packPos,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  long  numPackStreams  =  readUint64(header,  header,  archive.packPos,  header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  header,  archive.packPos,  header);	  final    long    numPackStreams    =    readUint64(header,    header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	65	None	replace
404	[BUG]  [BUGGY]  static  final  long  numPackStreams  =  readUint64(header,  archive.packStackPos);  [CE]  illegal  start  of  expression  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  static  final  long  numPackStreams  =  readUint64(header,  archive.packStackPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	static  final  long  numPackStreams  =  readUint64(header,  archive.packStackPos);	  final    long    numPackStreams    =    readUint64(header,    archive.packStackPos);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
405	[BUG]  [BUGGY]  short  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);  [CE]  cannot  find  symbol  length  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  short  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	short  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);	  long    numPackStreams    =    readUint64(header,    archive.packPos,    header.length);    	non-compiled	[CE]  cannot  find  symbol  length	27	None	replace
406	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);  [CE]  cannot  find  symbol  numPackStreams  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol  numPackStreams	52	None	replace
407	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.packPos);  Integer  nid  =  readUint64(header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.packPos);  Integer  nid  =  readUint64(header);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(header,  archive.packPos);  Integer  nid  =  readUint64(header);	  long    numPackStreams    =    readUint64(header);    Integer    nid    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	34	None	replace
408	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.printPos);  [CE]  cannot  find  symbol  printPos  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.printPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(header,  archive.printPos);	  long    numPackStreams    =    readUint64(header,    archive.length);    	non-compiled	[CE]  cannot  find  symbol  printPos	56	None	replace
409	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.stringSize);  [CE]  cannot  find  symbol  stringSize  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.stringSize);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(header,  archive.stringSize);	  long    numPackStreams    =    readUint64(header,    archive.length);    	non-compiled	[CE]  cannot  find  symbol  stringSize	56	None	replace
410	[BUG]  [BUGGY]  if(header!=  null)  {  long  numPackStreams  =  readUint64(header);  }  else  {  archive.packPos  =  readUint64(header);  }  [CE]  cannot  find  symbol  numPackStreams  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  if(header!=  null)  {  long  numPackStreams  =  readUint64(header);  }  else  {  archive.packPos  =  readUint64(header);  }  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	if(header!=  null)  {  long  numPackStreams  =  readUint64(header);  }  else  {  archive.packPos  =  readUint64(header);  }	  long    numPackStreams    =    readUint64(header);    long    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  numPackStreams	30	None	replace
411	[BUG]  [BUGGY]  static  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  fileName);  [CE]  illegal  start  of  expression  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  static  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  fileName);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	static  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  fileName);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos,    fileName);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
412	[BUG]  [BUGGY]  final  double  numPackStreams  =  readUint64(header,  archive.packPos,  index);  [CE]  cannot  find  symbol  index  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  double  numPackStreams  =  readUint64(header,  archive.packPos,  index);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  double  numPackStreams  =  readUint64(header,  archive.packPos,  index);	  final    double    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  index	71	None	replace
413	[BUG]  [BUGGY]  final  double  numPackStreams  =  readUint64(header,  header,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);      [BUGGY]  final  double  numPackStreams  =  readUint64(header,  header,  archive.packPos);  [BUGGY]      int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  double  numPackStreams  =  readUint64(header,  header,  archive.packPos);	  final    double    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	71	None	replace
