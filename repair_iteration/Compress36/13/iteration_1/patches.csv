bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  char  numPackStreams  =  readUint64(header);  [CE]  possible  loss  of  precision  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  char  numPackStreams  =  readUint64(header);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	char  numPackStreams  =  readUint64(header);	  int    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  possible  loss  of  precision	4	None	replace
2	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  double  numPackStreams  =  readUint64(header);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	add	double  numPackStreams  =  readUint64(header);	  int    numPackStreams    =    readUint64(header);    	compilable	  [FE]  NoClassDefFoundError  	4	12	replace
3	[BUG]  [BUGGY]  double  numPackStreams  =  readUint64(header);  [FE]  NoClassDefFoundError  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  double  numPackStreams  =  readUint64(header);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	double  numPackStreams  =  readUint64(header);	  int    numPackStreams    =    readUint64(header);    	compilable	  [FE]  NoClassDefFoundError  	4	12	replace
4	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  float  numPackStreams  =  readUint64(header);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	add	float  numPackStreams  =  readUint64(header);	  int    numPackStreams    =    readUint64(header);    	compilable	  [FE]  NoClassDefFoundError  	4	12	replace
5	[BUG]  [BUGGY]  float  numPackStreams  =  readUint64(header);  [FE]  NoClassDefFoundError  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  float  numPackStreams  =  readUint64(header);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	float  numPackStreams  =  readUint64(header);	  int    numPackStreams    =    readUint64(header);    	compilable	  [FE]  NoClassDefFoundError  	4	12	replace
6	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header);  [CE]  incompatible  types  [FE]                    NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  Integer  nid  =  readUint64(header);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  readUint64(header);	      	non-compiled	[CE]  incompatible  types	8	None	replace
7	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]                      NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  int  nid  =  header.readUnsignedByte();  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  nid  =  header.readUnsignedByte();	      	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	8	None	replace
8	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  cannot  find  symbol  Lists  [FE]                        NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();	      	non-compiled	[CE]  cannot  find  symbol  Lists	8	None	replace
9	[BUG]  [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(length);  [CE]  cannot  find  symbol  length  [FE]                          NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(length);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(length);	      	non-compiled	[CE]  cannot  find  symbol  length	8	None	replace
10	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  Integer  nid  =  readUint64(header,  archive.packPos);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  readUint64(header,  archive.packPos);	      	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	8	None	replace
11	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.packPos);  [CE]  no  suitable  constructor  found  for  ArrayList(long)  [FE]                              NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.packPos);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.packPos);	      	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(long)	8	None	replace
12	[BUG]  [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos);  [CE]  no  suitable  constructor  found  for  ArrayList(long)  [FE]                                NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  Long>  deferredBlockStreams  =  new  ArrayList  <  Long>(archive.packPos);	      	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(long)	8	None	replace
13	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(header,  archive);	  final    long    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	3	None	replace
14	[BUG]  [BUGGY]  static  final  long  numPackStreams  =  readUint64(header,  archive.packPos);  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  static  final  long  numPackStreams  =  readUint64(header,  archive.packPos);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	static  final  long  numPackStreams  =  readUint64(header,  archive.packPos);	  final    long    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
15	[BUG]  [BUGGY]  final  byte  numPackStreams  =  readUint64(header,  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  final  byte  numPackStreams  =  readUint64(header,  archive);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  byte  numPackStreams  =  readUint64(header,  archive);	  final    long    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	3	None	replace
16	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packSizes);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packSizes);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.packSizes);	  final    long    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	3	None	replace
17	[BUG]  [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  Integer  numPackStreams  =  readUint64(header,  archive);	  final    long    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	3	None	replace
18	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packStackPos);  [CE]  cannot  find  symbol  packStackPos  [FE]                      NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packStackPos);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.packStackPos);	  final    long    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  packStackPos	3	None	replace
19	[BUG]  [BUGGY]  if(header!=  null)  {  final  int  numPackStreams  =  readUint64(header);  }  [CE]  possible  loss  of  precision  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  if(header!=  null)  {  final  int  numPackStreams  =  readUint64(header);  }  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	if(header!=  null)  {  final  int  numPackStreams  =  readUint64(header);  }	  if(header!=    null)    {    final    long    numPackStreams    =    readUint64(header);    }    	non-compiled	[CE]  possible  loss  of  precision	9	None	replace
20	[BUG]  [BUGGY]  if(header!=  null)  {  final  long  nid  =  readUint64(header);  }  [CE]  cannot  find  symbol  numPackStreams  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  if(header!=  null)  {  final  long  nid  =  readUint64(header);  }  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	if(header!=  null)  {  final  long  nid  =  readUint64(header);  }	  if(header!=    null)    {    final    long    numPackStreams    =    readUint64(header);    }    	non-compiled	[CE]  cannot  find  symbol  numPackStreams	9	None	replace
21	[BUG]  [BUGGY]  if(header!=  null)  {  final  int  nid  =  readUint64(header);  }  [CE]  possible  loss  of  precision  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  if(header!=  null)  {  final  int  nid  =  readUint64(header);  }  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	if(header!=  null)  {  final  int  nid  =  readUint64(header);  }	  if(header!=    null)    {    final    long    numPackStreams    =    readUint64(header);    }    	non-compiled	[CE]  possible  loss  of  precision	9	None	replace
22	[BUG]  [BUGGY]  int  numPackStreams  =  readUint64(header,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  int  numPackStreams  =  readUint64(header,  archive.packPos);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  numPackStreams  =  readUint64(header,  archive.packPos);	  long    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	10	None	replace
23	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.packPos,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.packPos,  header);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(header,  archive.packPos,  header);	  long    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	10	None	replace
24	[BUG]  [BUGGY]  Integer  numPackStreams  =  readUint64(header,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  Integer  numPackStreams  =  readUint64(header,  archive.packPos);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  numPackStreams  =  readUint64(header,  archive.packPos);	  long    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	10	None	replace
25	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.packPos,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.packPos,  fileName);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(header,  archive.packPos,  fileName);	  long    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	10	None	replace
26	[BUG]  [BUGGY]  byte  numPackStreams  =  readUint64(header,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  byte  numPackStreams  =  readUint64(header,  archive.packPos);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	byte  numPackStreams  =  readUint64(header,  archive.packPos);	  long    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	10	None	replace
27	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);  [CE]  cannot  find  symbol  length  [FE]                    NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);	  long    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  length	10	None	replace
28	[BUG]  [BUGGY]  Long  numPackStreams  =  readUint64(header);  [CE]  inconvertible  types  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  Long  numPackStreams  =  readUint64(header);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Long  numPackStreams  =  readUint64(header);	  byte    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  inconvertible  types	5	None	replace
29	[BUG]  [BUGGY]  byte  numPackStreams  =  readUint64(header,  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  byte  numPackStreams  =  readUint64(header,  archive);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	byte  numPackStreams  =  readUint64(header,  archive);	  byte    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	5	None	replace
30	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header);  long  numPackStreams  =  readUint64(header);  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  long  numPackStreams  =  readUint64(header);  long  numPackStreams  =  readUint64(header);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long    numPackStreams    =    readUint64(header);    long  numPackStreams  =  readUint64(header);	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	6	None	add
31	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header);  int  numPackStreams  =  readUint64(header);  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]      NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  long  numPackStreams  =  readUint64(header);  int  numPackStreams  =  readUint64(header);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long    numPackStreams    =    readUint64(header);    int  numPackStreams  =  readUint64(header);	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	6	None	add
32	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header);  Long  numPackStreams  =  readUint64(header);  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  long  numPackStreams  =  readUint64(header);  Long  numPackStreams  =  readUint64(header);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long    numPackStreams    =    readUint64(header);    Long  numPackStreams  =  readUint64(header);	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	6	None	add
33	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header);  Integer  numPackStreams  =  readUint64(header);  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  long  numPackStreams  =  readUint64(header);  Integer  numPackStreams  =  readUint64(header);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long    numPackStreams    =    readUint64(header);    Integer  numPackStreams  =  readUint64(header);	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	6	None	add
34	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header);  Integer  nid  =  readUint64(header);  [CE]  incompatible  types  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  long  numPackStreams  =  readUint64(header);  Integer  nid  =  readUint64(header);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long    numPackStreams    =    readUint64(header);    Integer  nid  =  readUint64(header);	  	non-compiled	[CE]  incompatible  types	6	None	add
35	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header);  int  nid  =  readUint64(header);  [CE]  possible  loss  of  precision  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  long  numPackStreams  =  readUint64(header);  int  nid  =  readUint64(header);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long    numPackStreams    =    readUint64(header);    int  nid  =  readUint64(header);	  	non-compiled	[CE]  possible  loss  of  precision	6	None	add
36	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header);  short  numPackStreams  =  readUint64(header);  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  long  numPackStreams  =  readUint64(header);  short  numPackStreams  =  readUint64(header);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long    numPackStreams    =    readUint64(header);    short  numPackStreams  =  readUint64(header);	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	6	None	add
37	[BUG]  [BUGGY]  final  byte  numPackStreams  =  readUint64(header);  [CE]  possible  loss  of  precision  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  final  byte  numPackStreams  =  readUint64(header);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  byte  numPackStreams  =  readUint64(header);	  final    int    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  possible  loss  of  precision	1	None	replace
38	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  final  double  numPackStreams  =  readUint64(header);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	add	final  double  numPackStreams  =  readUint64(header);	  final    int    numPackStreams    =    readUint64(header);    	compilable	  [FE]  NoClassDefFoundError  	1	12	replace
39	[BUG]  [BUGGY]  final  double  numPackStreams  =  readUint64(header);  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  final  double  numPackStreams  =  readUint64(header);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  double  numPackStreams  =  readUint64(header);	  final    int    numPackStreams    =    readUint64(header);    	compilable	  [FE]  NoClassDefFoundError  	1	12	replace
40	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archive.packPos);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(header,  archive.packPos);	  final    int    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	1	None	replace
41	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header,  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  long  numPackStreams  =  readUint64(header,  archive);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(header,  archive);	  long    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	7	None	replace
42	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header.length);  [CE]  cannot  find  symbol  length  [FE]      NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  long  numPackStreams  =  readUint64(header.length);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(header.length);	  long    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  length	7	None	replace
43	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  long  numPackStreams  =  readUint64(archive);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(archive);	  long    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	7	None	replace
44	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  header);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.packPos,  header);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	2	None	replace
45	[BUG]  [BUGGY]  final  byte  numPackStreams  =  readUint64(header,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  final  byte  numPackStreams  =  readUint64(header,  archive.packPos);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  byte  numPackStreams  =  readUint64(header,  archive.packPos);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	2	None	replace
46	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  fileName);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.packPos,  fileName);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	2	None	replace
47	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);  [CE]  cannot  find  symbol  length  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.packPos,  header.length);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  length	2	None	replace
48	[BUG]  [BUGGY]  static  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  header);  [CE]  illegal  start  of  expression  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  static  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  header);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	static  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  header);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
49	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  headerSize);  [CE]  cannot  find  symbol  headerSize  [FE]                    NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.packPos,  headerSize);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.packPos,  headerSize);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  headerSize	2	None	replace
50	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.zipPos);  [CE]  cannot  find  symbol  zipPos  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.zipPos);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.zipPos);	  final    long    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  zipPos	3	None	replace
51	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.nextHeaderSize);  [CE]  cannot  find  symbol  nextHeaderSize  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  final  long  numPackStreams  =  readUint64(header,  archive.nextHeaderSize);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  archive.nextHeaderSize);	  final    long    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  nextHeaderSize	3	None	replace
52	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  numPackStreams  [FE]                    NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	      	non-compiled	[CE]  cannot  find  symbol  numPackStreams	8	None	replace
53	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());  [CE]  cannot  find  symbol  inputStreamStack  [FE]                      NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());	      	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	8	None	replace
54	[BUG]  [BUGGY]  Integer  nid  =  inputStreamStack.size();  [CE]  cannot  find  symbol  inputStreamStack  [FE]                        NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  Integer  nid  =  inputStreamStack.size();  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  inputStreamStack.size();	      	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	8	None	replace
55	[BUG]  [BUGGY]  int  nid  =  inputStreamStack.size();  [CE]  cannot  find  symbol  inputStreamStack  [FE]                          NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  int  nid  =  inputStreamStack.size();  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  nid  =  inputStreamStack.size();	      	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	8	None	replace
56	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.length);  [CE]  cannot  find  symbol  length  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  long  numPackStreams  =  readUint64(header,  archive.length);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(header,  archive.length);	  long    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  length	7	None	replace
57	[BUG]  [BUGGY]  final  char  numPackStreams  =  readUint64(header);  [CE]  possible  loss  of  precision  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  final  char  numPackStreams  =  readUint64(header);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  char  numPackStreams  =  readUint64(header);	  final    int    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  possible  loss  of  precision	1	None	replace
58	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  final  float  numPackStreams  =  readUint64(header);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	add	final  float  numPackStreams  =  readUint64(header);	  final    int    numPackStreams    =    readUint64(header);    	compilable	  [FE]  NoClassDefFoundError  	1	12	replace
59	[BUG]  [BUGGY]  final  float  numPackStreams  =  readUint64(header);  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  final  float  numPackStreams  =  readUint64(header);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  float  numPackStreams  =  readUint64(header);	  final    int    numPackStreams    =    readUint64(header);    	compilable	  [FE]  NoClassDefFoundError  	1	12	replace
60	[BUG]  [BUGGY]  final  Long  numPackStreams  =  readUint64(header);  [CE]  inconvertible  types  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  final  Long  numPackStreams  =  readUint64(header);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  Long  numPackStreams  =  readUint64(header);	  final    int    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  inconvertible  types	1	None	replace
61	[BUG]  [BUGGY]  Integer  numPackStreams  =  readUint64(header);  [CE]  incompatible  types  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  Integer  numPackStreams  =  readUint64(header);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  numPackStreams  =  readUint64(header);	  byte    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  incompatible  types	5	None	replace
62	[BUG]  [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  final  Integer  numPackStreams  =  readUint64(header,  archive.packPos);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  Integer  numPackStreams  =  readUint64(header,  archive.packPos);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	2	None	replace
63	[BUG]  [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archives.packPos);  [CE]  cannot  find  symbol  archives  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  final  int  numPackStreams  =  readUint64(header,  archives.packPos);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  int  numPackStreams  =  readUint64(header,  archives.packPos);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  archives	2	None	replace
64	[BUG]  [BUGGY]  int  numPackStreams  =  readUint64(header,  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  int  numPackStreams  =  readUint64(header,  archive);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  numPackStreams  =  readUint64(header,  archive);	  final    long    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	3	None	replace
65	[BUG]  [BUGGY]  final  long  numPackStreams  =  readUint64(header,  header,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  final  long  numPackStreams  =  readUint64(header,  header,  archive.packPos);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  long  numPackStreams  =  readUint64(header,  header,  archive.packPos);	  final    long    numPackStreams    =    readUint64(header,    archive);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	3	None	replace
66	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long    numPackStreams    =    readUint64(header);    int  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	6	None	add
67	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header);  Short  numPackStreams  =  readUint64(header);  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]      NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  long  numPackStreams  =  readUint64(header);  Short  numPackStreams  =  readUint64(header);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long    numPackStreams    =    readUint64(header);    Short  numPackStreams  =  readUint64(header);	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	6	None	add
68	[BUG]  [BUGGY]  long  numPackStreams  =  readUint64(header.readUnsignedByte());  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]    NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  long  numPackStreams  =  readUint64(header.readUnsignedByte());  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	long  numPackStreams  =  readUint64(header.readUnsignedByte());	  long    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	7	None	replace
69	[BUG]  [BUGGY]  short  numPackStreams  =  readUint64(header);  [CE]  possible  loss  of  precision  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  short  numPackStreams  =  readUint64(header);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	short  numPackStreams  =  readUint64(header);	  byte    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  possible  loss  of  precision	5	None	replace
70	[BUG]  [BUGGY]  if(header!=  null)  {  final  long  numPackStreams  =  readUint64(header,  archive.packPos);  }  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  if(header!=  null)  {  final  long  numPackStreams  =  readUint64(header,  archive.packPos);  }  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	if(header!=  null)  {  final  long  numPackStreams  =  readUint64(header,  archive.packPos);  }	  if(header!=    null)    {    final    long    numPackStreams    =    readUint64(header);    }    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	9	None	replace
71	[BUG]  [BUGGY]  final  double  numPackStreams  =  readUint64(header,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  final  double  numPackStreams  =  readUint64(header,  archive.packPos);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	final  double  numPackStreams  =  readUint64(header,  archive.packPos);	  final    long    numPackStreams    =    readUint64(header,    archive.packPos);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	2	None	replace
72	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]                    NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  Integer  nid  =  header.readUnsignedByte();  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  header.readUnsignedByte();	      	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	8	None	replace
73	[BUG]  [BUGGY]  Integer  nid  =  inputStreamStack.get(header);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                      NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  Integer  nid  =  inputStreamStack.get(header);  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	Integer  nid  =  inputStreamStack.get(header);	      	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	8	None	replace
74	[BUG]  [BUGGY]  int  nid  =  archive.packPos.length;  [CE]  long  cannot  be  dereferenced  [FE]                        NoClassDefFoundError    [CONTEXT]    private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);    [BUGGY]  int  nid  =  archive.packPos.length;  [BUGGY]    int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	347	347	12	replace	int  nid  =  archive.packPos.length;	      	non-compiled	[CE]  long  cannot  be  dereferenced	8	None	replace
