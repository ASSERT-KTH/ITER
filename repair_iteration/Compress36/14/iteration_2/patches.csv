bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  nid  =  inputStreamStack.readUnsignedByte();  [CE]  cannot  find  symbol  inputStreamStack  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  inputStreamStack.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  inputStreamStack.readUnsignedByte();	  Integer    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	25	None	replace
2	[BUG]  [BUGGY]  Integer  nid  =  archive.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  archive.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  archive.readUnsignedByte();	  Integer    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
3	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  file.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	add	Integer  nid  =  file.readUnsignedByte();	  Integer    nid    =    header.readUnsignedByte();    	compilable	  [FE]  EOFException  	25	12	replace
4	[BUG]  [BUGGY]  Integer  nid  =  file.readUnsignedByte();  [FE]  EOFException  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  file.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  file.readUnsignedByte();	  Integer    nid    =    header.readUnsignedByte();    	compilable	  [FE]  EOFException  	25	12	replace
5	[BUG]  [BUGGY]  Integer  nid  =  reader.readUnsignedByte();  [CE]  cannot  find  symbol  reader  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  reader.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  reader.readUnsignedByte();	  Integer    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  reader	25	None	replace
6	[BUG]  [BUGGY]  Long  nid  =  header.readUnsignedByte()  +  1;  [CE]  incompatible  types  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Long  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Long  nid  =  header.readUnsignedByte()  +  1;	  Long    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  incompatible  types	5	None	replace
7	[BUG]  [BUGGY]  Long  nid  =  inputStreamStack.readUnsignedByte();  [CE]  cannot  find  symbol  inputStreamStack  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Long  nid  =  inputStreamStack.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Long  nid  =  inputStreamStack.readUnsignedByte();	  Long    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	5	None	replace
8	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(numPackStreams,  header);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(numPackStreams,  header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(numPackStreams,  header);	  int    nid    =    header.readUnsignedByte(length,    header);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	67	None	replace
9	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(numPackPos,  header);  [CE]  cannot  find  symbol  numPackPos  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(numPackPos,  header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(numPackPos,  header);	  int    nid    =    header.readUnsignedByte(length,    header);    	non-compiled	[CE]  cannot  find  symbol  numPackPos	67	None	replace
10	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(numPackPos);  [CE]  cannot  find  symbol  numPackPos  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(numPackPos);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(numPackPos);	  int    nid    =    header.readUnsignedByte(length,    header);    	non-compiled	[CE]  cannot  find  symbol  numPackPos	67	None	replace
11	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(name,  header);  [CE]  cannot  find  symbol  name  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(name,  header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(name,  header);	  int    nid    =    header.readUnsignedByte(length,    header);    	non-compiled	[CE]  cannot  find  symbol  name	67	None	replace
12	[BUG]  [BUGGY]  byte  nid  =  header.readUnsignedByte(numPackStreams);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  byte  nid  =  header.readUnsignedByte(numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	byte  nid  =  header.readUnsignedByte(numPackStreams);	  byte    nid    =    header.readUnsignedByte(0);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	37	None	replace
13	[BUG]  [BUGGY]  byte  nid  =  header.readUnsignedByte(1);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  byte  nid  =  header.readUnsignedByte(1);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	byte  nid  =  header.readUnsignedByte(1);	  byte    nid    =    header.readUnsignedByte(0);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	37	None	replace
14	[BUG]  [BUGGY]  byte  nid  =  header.readUnsignedByte(header.length);  [CE]  cannot  find  symbol  length  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  byte  nid  =  header.readUnsignedByte(header.length);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	byte  nid  =  header.readUnsignedByte(header.length);	  byte    nid    =    header.readUnsignedByte(0);    	non-compiled	[CE]  cannot  find  symbol  length	37	None	replace
15	[BUG]  [BUGGY]  byte  nid  =  header.readUnsignedByte(header,  numPackStreams);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  byte  nid  =  header.readUnsignedByte(header,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	byte  nid  =  header.readUnsignedByte(header,  numPackStreams);	  byte    nid    =    header.readUnsignedByte(header);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	29	None	replace
16	[BUG]  [BUGGY]  byte  nid  =  header.readUnsignedByte(packPos,  header);  [CE]  cannot  find  symbol  packPos  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  byte  nid  =  header.readUnsignedByte(packPos,  header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	byte  nid  =  header.readUnsignedByte(packPos,  header);	  byte    nid    =    header.readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol  packPos	29	None	replace
17	[BUG]  [BUGGY]  byte  nid  =  header.readUnsignedByte(header,  archive);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  byte  nid  =  header.readUnsignedByte(header,  archive);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	byte  nid  =  header.readUnsignedByte(header,  archive);	  byte    nid    =    header.readUnsignedByte(header);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	29	None	replace
18	[BUG]  [BUGGY]  byte  nid  =  header.readUnsignedByte(packPos);  [CE]  cannot  find  symbol  packPos  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  byte  nid  =  header.readUnsignedByte(packPos);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	byte  nid  =  header.readUnsignedByte(packPos);	  byte    nid    =    header.readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol  packPos	29	None	replace
19	[BUG]  [BUGGY]  byte  nid  =  header.readUnsignedByte(inputStreamStack,  header);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  byte  nid  =  header.readUnsignedByte(inputStreamStack,  header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	byte  nid  =  header.readUnsignedByte(inputStreamStack,  header);	  byte    nid    =    header.readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	29	None	replace
20	[BUG]  [BUGGY]  byte  nid  =  header.readUnsignedByte(numPackStreams,  header);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  byte  nid  =  header.readUnsignedByte(numPackStreams,  header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	byte  nid  =  header.readUnsignedByte(numPackStreams,  header);	  byte    nid    =    header.readUnsignedByte(header);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	29	None	replace
21	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(0,  numPackStreams);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(0,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(0,  numPackStreams);	  int    nid    =    header.readUnsignedByte(packPos,    header);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	27	None	replace
22	[BUG]  [BUGGY]  int  nid  =  archive.readUnsignedByte(header,  numPackStreams);  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.readUnsignedByte(header,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.readUnsignedByte(header,  numPackStreams);	  int    nid    =    header.readUnsignedByte(packPos,    header);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
23	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  long  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]          IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte();  long  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte();  long  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    long    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	60	None	replace
24	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  long  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]            IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  long  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  header.readUnsignedByte();  long  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    long    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	60	None	replace
25	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  int  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]              IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte();  int  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte();  int  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    long    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	60	None	replace
26	[BUG]  [BUGGY]  int  nid  =  currentFolderInputStream.readUnsignedByte(header,  numPackStreams);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  currentFolderInputStream.readUnsignedByte(header,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  currentFolderInputStream.readUnsignedByte(header,  numPackStreams);	  int    nid    =    inputStreamStack.readUnsignedByte(header,    numPackStreams);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
27	[BUG]  [BUGGY]  int  nid  =  file.readUnsignedByte(header,  numPackStreams);  [CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  file.readUnsignedByte(header,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  file.readUnsignedByte(header,  numPackStreams);	  int    nid    =    inputStreamStack.readUnsignedByte(header,    numPackStreams);    	non-compiled	[CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;	18	None	replace
28	[BUG]  [BUGGY]  int  nid  =  reader.readUnsignedByte(header,  numPackStreams);  [CE]  cannot  find  symbol  reader  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  reader.readUnsignedByte(header,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  reader.readUnsignedByte(header,  numPackStreams);	  int    nid    =    inputStreamStack.readUnsignedByte(header,    numPackStreams);    	non-compiled	[CE]  cannot  find  symbol  reader	18	None	replace
29	[BUG]  [BUGGY]  int  nid  =  readUnsignedByte(header,  numPackStreams);  [CE]  cannot  find  symbol  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  readUnsignedByte(header,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  readUnsignedByte(header,  numPackStreams);	  int    nid    =    inputStreamStack.readUnsignedByte(header,    numPackStreams);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
30	[BUG]  [BUGGY]  int  nid  =  sourceStream.readUnsignedByte(header,  numPackStreams);  [CE]  cannot  find  symbol  sourceStream  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  sourceStream.readUnsignedByte(header,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  sourceStream.readUnsignedByte(header,  numPackStreams);	  int    nid    =    inputStreamStack.readUnsignedByte(header,    numPackStreams);    	non-compiled	[CE]  cannot  find  symbol  sourceStream	18	None	replace
31	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(numPackPos,  numPackStreams);  [CE]  cannot  find  symbol  numPackPos  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(numPackPos,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(numPackPos,  numPackStreams);	  int    nid    =    header.readUnsignedByte(length,    numPackStreams);    	non-compiled	[CE]  cannot  find  symbol  numPackPos	23	None	replace
32	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(numPackStreams,  numPackStreams);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(numPackStreams,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(numPackStreams,  numPackStreams);	  int    nid    =    header.readUnsignedByte(length,    numPackStreams);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	23	None	replace
33	[BUG]  [BUGGY]  int  nid  =  archive.readUnsignedByte(numPackStreams,  header);  [CE]  cannot  find  symbol  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.readUnsignedByte(numPackStreams,  header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.readUnsignedByte(numPackStreams,  header);	  int    nid    =    header.readUnsignedByte(length,    numPackStreams);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
34	[BUG]  [BUGGY]  nid  =  readUint64(header,  archive.packPos);  [CE]  cannot  find  symbol  nid  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  nid  =  readUint64(header,  archive.packPos);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	nid  =  readUint64(header,  archive.packPos);	  nid    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  nid	44	None	replace
35	[BUG]  [BUGGY]  nid  =  readUint64(header,  numPackStreams);  [CE]  cannot  find  symbol  nid  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  nid  =  readUint64(header,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	nid  =  readUint64(header,  numPackStreams);	  nid    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  nid	44	None	replace
36	[BUG]  [BUGGY]  Integer  nid  =  readUnsignedByte(0);  [CE]  cannot  find  symbol  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUnsignedByte(0);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readUnsignedByte(0);	  Integer    nid    =    readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
37	[BUG]  [BUGGY]  Integer  nid  =  readUnsignedByte(header,  numPackStreams);  [CE]  cannot  find  symbol  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUnsignedByte(header,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readUnsignedByte(header,  numPackStreams);	  Integer    nid    =    readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
38	[BUG]  [BUGGY]  Integer  nid  =  readUnsignedByte().intValue();  [CE]  cannot  find  symbol  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUnsignedByte().intValue();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readUnsignedByte().intValue();	  Integer    nid    =    readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
39	[BUG]  [BUGGY]  Integer  nid  =  readUnsignedByteOrBits();  [CE]  cannot  find  symbol  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUnsignedByteOrBits();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readUnsignedByteOrBits();	  Integer    nid    =    readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
40	[BUG]  [BUGGY]  int  nid  =  readUint64(header,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  readUint64(header,  archive.packPos);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  readUint64(header,  archive.packPos);	  int    nid    =    readUint64(header,    numPackStreams);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	70	None	replace
41	[BUG]  [BUGGY]  int  nid  =  readUint64(header,  archive.packPos,  numPackStreams);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  readUint64(header,  archive.packPos,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  readUint64(header,  archive.packPos,  numPackStreams);	  int    nid    =    readUint64(header,    numPackStreams);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	70	None	replace
42	[BUG]  [BUGGY]  long  nid  =  readUint64(header,  numPackStreams);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  long  nid  =  readUint64(header,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	long  nid  =  readUint64(header,  numPackStreams);	  int    nid    =    readUint64(header,    numPackStreams);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	70	None	replace
43	[BUG]  [BUGGY]  int  nid  =  readUint64(header,  fileName,  numPackStreams);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  readUint64(header,  fileName,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  readUint64(header,  fileName,  numPackStreams);	  int    nid    =    readUint64(header,    numPackStreams);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	70	None	replace
44	[BUG]  [BUGGY]  byte  nid  =  readUint64(header,  numPackStreams);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  byte  nid  =  readUint64(header,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	byte  nid  =  readUint64(header,  numPackStreams);	  int    nid    =    readUint64(header,    numPackStreams);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	70	None	replace
45	[BUG]  [BUGGY]  int  nid  =  readUint64(header,  0,  numPackStreams);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  readUint64(header,  0,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  readUint64(header,  0,  numPackStreams);	  int    nid    =    readUint64(header,    numPackStreams);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	70	None	replace
46	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	add	Integer  nid  =  header.readUnsignedByte()  +  1;	  int    nid    =    header.readUnsignedByte()    +    1;    Inte    nid    =    header.readUnsignedByte()    +    1;    	compilable	  [FE]  IOException  	68	12	replace
47	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte()  +  1;  [FE]  IOException  [FE]        IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  header.readUnsignedByte()  +  1;	  int    nid    =    header.readUnsignedByte()    +    1;    Inte    nid    =    header.readUnsignedByte()    +    1;    	compilable	  [FE]  IOException  	68	12	replace
48	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  Inte  nid  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte();  Inte  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte();  Inte  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    Inte    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
49	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]            IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    Inte    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	68	None	replace
50	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  Inte  nid  =  header.readUnsignedByte()  +  1;  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte();  Inte  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte();  Inte  nid  =  header.readUnsignedByte()  +  1;	  int    nid    =    header.readUnsignedByte()    +    1;    Inte    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
51	[BUG]  [BUGGY]  Int  nid  =  inputStreamStack.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Int  nid  =  inputStreamStack.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Int  nid  =  inputStreamStack.readUnsignedByte();	  Int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
52	[BUG]  [BUGGY]  int  nid  =  file.readUnsignedByte();  int  nid  =  file.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]    EOFException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  file.readUnsignedByte();  int  nid  =  file.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int    nid    =    file.readUnsignedByte();    int  nid  =  file.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	13	None	add
53	[BUG]  [BUGGY]  int  nid  =  file.readUnsignedByte();  Integer  nid  =  file.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]      EOFException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  file.readUnsignedByte();  Integer  nid  =  file.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int    nid    =    file.readUnsignedByte();    Integer  nid  =  file.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	13	None	add
54	[BUG]  [BUGGY]  int  nid  =  file.readUnsignedByte();  Int  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]        EOFException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  file.readUnsignedByte();  Int  nid  =  file.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int    nid    =    file.readUnsignedByte();    Int  nid  =  file.readUnsignedByte();	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
55	[BUG]  [BUGGY]  int  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]          EOFException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int    nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	13	None	add
56	[BUG]  [BUGGY]  int  nid  =  file.readUnsignedByte();  long  nid  =  file.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]            EOFException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  file.readUnsignedByte();  long  nid  =  file.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int    nid    =    file.readUnsignedByte();    long  nid  =  file.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	13	None	add
57	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  double  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	add	double  nid  =  header.readUnsignedByte()  +  1;	  double    nid    =    header.readUnsignedByte();    	compilable	  [FE]  IOException  	4	12	replace
58	[BUG]  [BUGGY]  double  nid  =  header.readUnsignedByte()  +  1;  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  double  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	double  nid  =  header.readUnsignedByte()  +  1;	  double    nid    =    header.readUnsignedByte();    	compilable	  [FE]  IOException  	4	12	replace
59	[BUG]  [BUGGY]  double  nid  =  header.readUnsignedByte(numPackStreams);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  double  nid  =  header.readUnsignedByte(numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	double  nid  =  header.readUnsignedByte(numPackStreams);	  double    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	4	None	replace
60	[BUG]  [BUGGY]  double  nid  =  header.readEndByte();  [CE]  cannot  find  symbol  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  double  nid  =  header.readEndByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	double  nid  =  header.readEndByte();	  double    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
61	[BUG]  [BUGGY]  nid  =  archive.readUnsignedByte();  [CE]  cannot  find  symbol  nid  [FE]          IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  nid  =  archive.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	nid  =  archive.readUnsignedByte();	  nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  nid	26	None	replace
62	[BUG]  [BUGGY]  nid  =  inputStreamStack.readUnsignedByte();  [CE]  cannot  find  symbol  nid  [FE]            IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  nid  =  inputStreamStack.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	nid  =  inputStreamStack.readUnsignedByte();	  nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  nid	26	None	replace
63	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  nid  [FE]              IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  nid  =  file.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	nid  =  file.readUnsignedByte();	  nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  nid	26	None	replace
64	[BUG]  [BUGGY]  nid  =  source.readUnsignedByte();  [CE]  cannot  find  symbol  nid  [FE]                IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  nid  =  source.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	nid  =  source.readUnsignedByte();	  nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  nid	26	None	replace
65	[BUG]  [BUGGY]  nid  =  readUnsignedByte();  [CE]  cannot  find  symbol  nid  [FE]                  IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  nid  =  readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	nid  =  readUnsignedByte();	  nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  nid	26	None	replace
66	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(currentFolderIndex);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(currentFolderIndex);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(currentFolderIndex);	  int    nid    =    header.readUnsignedByte(packPos);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	31	None	replace
67	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(inputStreamStack);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(inputStreamStack);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(inputStreamStack);	  int    nid    =    header.readUnsignedByte(packPos);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	31	None	replace
68	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(fileName,  archive.packPos);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(fileName,  archive.packPos);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(fileName,  archive.packPos);	  int    nid    =    header.readUnsignedByte(fileName,    numPackStreams);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	55	None	replace
69	[BUG]  [BUGGY]  int  nid  =  inputStreamStack.readUnsignedByte(fileName,  numPackStreams);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  inputStreamStack.readUnsignedByte(fileName,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  inputStreamStack.readUnsignedByte(fileName,  numPackStreams);	  int    nid    =    header.readUnsignedByte(fileName,    numPackStreams);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	55	None	replace
70	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(currentFolderIndex,  fileName,  numPackStreams);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(currentFolderIndex,  fileName,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(currentFolderIndex,  fileName,  numPackStreams);	  int    nid    =    header.readUnsignedByte(fileName,    numPackStreams);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	55	None	replace
71	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(name,  fileName,  numPackStreams);  [CE]  cannot  find  symbol  name  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(name,  fileName,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(name,  fileName,  numPackStreams);	  int    nid    =    header.readUnsignedByte(fileName,    numPackStreams);    	non-compiled	[CE]  cannot  find  symbol  name	55	None	replace
72	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(data,  fileName,  numPackStreams);  [CE]  cannot  find  symbol  data  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(data,  fileName,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(data,  fileName,  numPackStreams);	  int    nid    =    header.readUnsignedByte(fileName,    numPackStreams);    	non-compiled	[CE]  cannot  find  symbol  data	55	None	replace
73	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(fileName,  archive.packPos,  numPackStreams);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(fileName,  archive.packPos,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(fileName,  archive.packPos,  numPackStreams);	  int    nid    =    header.readUnsignedByte(fileName,    numPackStreams);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	55	None	replace
74	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]                IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    Int    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	42	None	replace
75	[BUG]  [BUGGY]  Int  nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Int  nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Int  nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    Int    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
76	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]                    IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte()  +  1;	  int    nid    =    header.readUnsignedByte()    +    1;    Int    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	42	None	replace
77	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(header,  fileName);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(header,  fileName);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(header,  fileName);	  int    nid    =    header.readUnsignedByte(fileName,    header);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	63	None	replace
78	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(fileName,  archive);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(fileName,  archive);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(fileName,  archive);	  int    nid    =    header.readUnsignedByte(fileName,    header);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	63	None	replace
79	[BUG]  [BUGGY]  byte  nid  =  header.readUnsignedByte(fileName,  header);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  byte  nid  =  header.readUnsignedByte(fileName,  header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	byte  nid  =  header.readUnsignedByte(fileName,  header);	  int    nid    =    header.readUnsignedByte(fileName,    header);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	63	None	replace
80	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(fileName,  header.packPos);  [CE]  cannot  find  symbol  packPos  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(fileName,  header.packPos);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(fileName,  header.packPos);	  int    nid    =    header.readUnsignedByte(fileName,    header);    	non-compiled	[CE]  cannot  find  symbol  packPos	63	None	replace
81	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte(fileName,  header);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedByte(fileName,  header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  header.readUnsignedByte(fileName,  header);	  int    nid    =    header.readUnsignedByte(fileName,    header);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	63	None	replace
82	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(fileName,  file);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(fileName,  file);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(fileName,  file);	  int    nid    =    header.readUnsignedByte(fileName,    header);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	63	None	replace
83	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  int  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]        IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  int  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  header.readUnsignedByte();  int  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    int    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	38	None	replace
84	[BUG]  [BUGGY]  long  nid  =  header.readUnsignedByte();  int  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]          IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  long  nid  =  header.readUnsignedByte();  int  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	long  nid  =  header.readUnsignedByte();  int  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    int    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	38	None	replace
85	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  Long  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  Long  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer    nid    =    header.readUnsignedByte();    Long  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	24	None	add
86	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  Integer  nid  =  head.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  Integer  nid  =  head.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer    nid    =    header.readUnsignedByte();    Integer  nid  =  head.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	24	None	add
87	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  Byte  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  Byte  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer    nid    =    header.readUnsignedByte();    Byte  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	24	None	add
88	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  Boolean  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  Boolean  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer    nid    =    header.readUnsignedByte();    Boolean  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	24	None	add
89	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer    nid    =    header.readUnsignedByte();    nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	24	None	add
90	[BUG]  [BUGGY]  int  nid  =  currentFolderInputStream.readUnsignedByte(header);  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  currentFolderInputStream.readUnsignedByte(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  currentFolderInputStream.readUnsignedByte(header);	  int    nid    =    inputStreamStack.readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
91	[BUG]  [BUGGY]  int  nid  =  reader.readUnsignedByte(header);  [CE]  cannot  find  symbol  reader  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  reader.readUnsignedByte(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  reader.readUnsignedByte(header);	  int    nid    =    inputStreamStack.readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol  reader	19	None	replace
92	[BUG]  [BUGGY]  int  nid  =  file.readUnsignedByte(header);  [CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  file.readUnsignedByte(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  file.readUnsignedByte(header);	  int    nid    =    inputStreamStack.readUnsignedByte(header);    	non-compiled	[CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;	19	None	replace
93	[BUG]  [BUGGY]  int  nid  =  readUnsignedByte(header);  [CE]  cannot  find  symbol  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  readUnsignedByte(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  readUnsignedByte(header);	  int    nid    =    inputStreamStack.readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
94	[BUG]  [BUGGY]  int  nid  =  source.readUnsignedByte(header);  [CE]  cannot  find  symbol  source  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  source.readUnsignedByte(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  source.readUnsignedByte(header);	  int    nid    =    inputStreamStack.readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol  source	19	None	replace
95	[BUG]  [BUGGY]  int  nid  =  archive.readUnsignedByte()  +  header.length;  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.readUnsignedByte()  +  header.length;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.readUnsignedByte()  +  header.length;	  int    nid    =    archive.readUnsignedByte()    +    header;    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
96	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte()  +  archive.headerSize;  [CE]  cannot  find  symbol  headerSize  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte()  +  archive.headerSize;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte()  +  archive.headerSize;	  int    nid    =    archive.readUnsignedByte()    +    header;    	non-compiled	[CE]  cannot  find  symbol  headerSize	53	None	replace
97	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte()  +  archive.header;  [CE]  cannot  find  symbol  header  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte()  +  archive.header;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte()  +  archive.header;	  int    nid    =    archive.readUnsignedByte()    +    header;    	non-compiled	[CE]  cannot  find  symbol  header	53	None	replace
98	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte()  +  archive.bytes;  [CE]  cannot  find  symbol  bytes  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte()  +  archive.bytes;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte()  +  archive.bytes;	  int    nid    =    archive.readUnsignedByte()    +    header;    	non-compiled	[CE]  cannot  find  symbol  bytes	53	None	replace
99	[BUG]  [BUGGY]  int  nid  =  archive.readUnsignedByte()  *  header;  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.readUnsignedByte()  *  header;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.readUnsignedByte()  *  header;	  int    nid    =    archive.readUnsignedByte()    +    header;    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
100	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte()  +  archive.kSize;  [CE]  cannot  find  symbol  kSize  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte()  +  archive.kSize;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte()  +  archive.kSize;	  int    nid    =    archive.readUnsignedByte()    +    header;    	non-compiled	[CE]  cannot  find  symbol  kSize	53	None	replace
101	[BUG]  [BUGGY]  int  nid  =  archive.readUnsignedByte(header,  header);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.readUnsignedByte(header,  header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.readUnsignedByte(header,  header);	  int    nid    =    header.readUnsignedByte(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
102	[BUG]  [BUGGY]  int  nid  =  archive.readUnsignedByte(header,  archive.packPos);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.readUnsignedByte(header,  archive.packPos);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.readUnsignedByte(header,  archive.packPos);	  int    nid    =    header.readUnsignedByte(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
103	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(header,  archive.packPos,  numPackStreams);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(header,  archive.packPos,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(header,  archive.packPos,  numPackStreams);	  int    nid    =    header.readUnsignedByte(header,    archive.packPos);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	65	None	replace
104	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(header,  archive.packPos,  0);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(header,  archive.packPos,  0);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(header,  archive.packPos,  0);	  int    nid    =    header.readUnsignedByte(header,    archive.packPos);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	65	None	replace
105	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(dataInput,  header,  archive.packPos);  [CE]  cannot  find  symbol  dataInput  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(dataInput,  header,  archive.packPos);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(dataInput,  header,  archive.packPos);	  int    nid    =    header.readUnsignedByte(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  dataInput	65	None	replace
106	[BUG]  [BUGGY]  byte  nid  =  header.readUnsignedByte(header,  archive.packPos);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  byte  nid  =  header.readUnsignedByte(header,  archive.packPos);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	byte  nid  =  header.readUnsignedByte(header,  archive.packPos);	  int    nid    =    header.readUnsignedByte(header,    archive.packPos);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	65	None	replace
107	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(length,  header,  archive.packPos);  [CE]  cannot  find  symbol  length  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(length,  header,  archive.packPos);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(length,  header,  archive.packPos);	  int    nid    =    header.readUnsignedByte(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  length	65	None	replace
108	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  int  numPackStreams  =  header.readUnsignedByte();  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]        IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte();  int  numPackStreams  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte();  int  numPackStreams  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    int    numPackStreams    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	59	None	replace
109	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  int  numPackStreams  =  header.readUnsignedByte();  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]          IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  int  numPackStreams  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  header.readUnsignedByte();  int  numPackStreams  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    int    numPackStreams    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	59	None	replace
110	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  int  numPackStreams  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  nid  [FE]            IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  nid  =  header.readUnsignedByte();  int  numPackStreams  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	nid  =  header.readUnsignedByte();  int  numPackStreams  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    int    numPackStreams    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol  nid	59	None	replace
111	[BUG]  [BUGGY]  long  nid  =  header.readUnsignedByte();  int  numPackStreams  =  header.readUnsignedByte();  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]              IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  long  nid  =  header.readUnsignedByte();  int  numPackStreams  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	long  nid  =  header.readUnsignedByte();  int  numPackStreams  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    int    numPackStreams    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	59	None	replace
112	[BUG]  [BUGGY]  int  nid  =  archive.packPos.readUnsignedByte(header,  numPackStreams);  [CE]  long  cannot  be  dereferenced  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.packPos.readUnsignedByte(header,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.packPos.readUnsignedByte(header,  numPackStreams);	  int    nid    =    header.readUnsignedByte(packPos,    numPackStreams);    	non-compiled	[CE]  long  cannot  be  dereferenced	22	None	replace
113	[BUG]  [BUGGY]  int  nid  =  this.inputStreamStack.readUnsignedByte();  [CE]  cannot  find  symbol  inputStreamStack  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  this.inputStreamStack.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  this.inputStreamStack.readUnsignedByte();	  int    nid    =    stream.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	74	None	replace
114	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(currentFolderInputStream,  numPackStreams);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(currentFolderInputStream,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(currentFolderInputStream,  numPackStreams);	  int    nid    =    header.readUnsignedByte(inputStreamStack,    numPackStreams);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	21	None	replace
115	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(currentFolderInput,  numPackStreams);  [CE]  cannot  find  symbol  currentFolderInput  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(currentFolderInput,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(currentFolderInput,  numPackStreams);	  int    nid    =    header.readUnsignedByte(inputStreamStack,    numPackStreams);    	non-compiled	[CE]  cannot  find  symbol  currentFolderInput	21	None	replace
116	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedInt(numPackStreams);  [CE]  cannot  find  symbol  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedInt(numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedInt(numPackStreams);	  int    nid    =    header.readUnsignedInt(header);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
117	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedInt(header,  numPackStreams);  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedInt(header,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedInt(header,  numPackStreams);	  int    nid    =    header.readUnsignedInt(header);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
118	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedInt(0,  numPackStreams);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedInt(0,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedInt(0,  numPackStreams);	  int    nid    =    header.readUnsignedInt(header);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
119	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedInt(NID.kCRC);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedInt(NID.kCRC);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedInt(NID.kCRC);	  int    nid    =    header.readUnsignedInt(header);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
120	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedInt(sIGNATURE_HEADER_SIZE);  [CE]  cannot  find  symbol  sIGNATURE_HEADER_SIZE  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedInt(sIGNATURE_HEADER_SIZE);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedInt(sIGNATURE_HEADER_SIZE);	  int    nid    =    header.readUnsignedInt(header);    	non-compiled	[CE]  cannot  find  symbol  sIGNATURE_HEADER_SIZE	57	None	replace
121	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedInt(inputStreamStack);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedInt(inputStreamStack);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedInt(inputStreamStack);	  int    nid    =    header.readUnsignedInt(header);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	57	None	replace
122	[BUG]  [BUGGY]  int  nid  =  this.header.readUnsignedByte();  [CE]  cannot  find  symbol  header  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  this.header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  this.header.readUnsignedByte();	  int    nid    =    this.header.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol  header	33	None	replace
123	[BUG]  [BUGGY]  int  nid  =  this.inputStreamStack.readUnsignedInt();  [CE]  cannot  find  symbol  inputStreamStack  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  this.inputStreamStack.readUnsignedInt();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  this.inputStreamStack.readUnsignedInt();	  int    nid    =    this.header.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	33	None	replace
124	[BUG]  [BUGGY]  int  nid  =  this.currentFolderIndex.readUnsignedInt();  [CE]  int  cannot  be  dereferenced  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  this.currentFolderIndex.readUnsignedInt();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  this.currentFolderIndex.readUnsignedInt();	  int    nid    =    this.header.readUnsignedInt();    	non-compiled	[CE]  int  cannot  be  dereferenced	33	None	replace
125	[BUG]  [BUGGY]  int  nid  =  this.currentFolder.readUnsignedInt();  [CE]  cannot  find  symbol  currentFolder  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  this.currentFolder.readUnsignedInt();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  this.currentFolder.readUnsignedInt();	  int    nid    =    this.header.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol  currentFolder	33	None	replace
126	[BUG]  [BUGGY]  int  nid  =  archive.packPos.getUnsignedByte();  [CE]  long  cannot  be  dereferenced  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.packPos.getUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.packPos.getUnsignedByte();	  int    nid    =    archive.getUnsignedByte();    	non-compiled	[CE]  long  cannot  be  dereferenced	10	None	replace
127	[BUG]  [BUGGY]  int  nid  =  header.getUnsignedByte();  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.getUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.getUnsignedByte();	  int    nid    =    archive.getUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
128	[BUG]  [BUGGY]  int  nid  =  archive.unsignedByte();  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.unsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.unsignedByte();	  int    nid    =    archive.getUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
129	[BUG]  [BUGGY]  int  nid  =  archive.getUnsignedByte()  +  1;  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.getUnsignedByte()  +  1;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.getUnsignedByte()  +  1;	  int    nid    =    archive.getUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
130	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte(header,  archive.packPos);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedByte(header,  archive.packPos);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  header.readUnsignedByte(header,  archive.packPos);	  int    nid    =    header.readUnsignedByte(header,    archive);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	28	None	replace
131	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(packPos,  header,  archive);  [CE]  cannot  find  symbol  packPos  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(packPos,  header,  archive);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(packPos,  header,  archive);	  int    nid    =    header.readUnsignedByte(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  packPos	28	None	replace
132	[BUG]  [BUGGY]  int  nid  =  archive.readUnsignedByte(header,  archive);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.readUnsignedByte(header,  archive);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.readUnsignedByte(header,  archive);	  int    nid    =    header.readUnsignedByte(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
133	[BUG]  [BUGGY]  long  nid  =  readUint64(header);  long  nid  =  readUint64(header);  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  long  nid  =  readUint64(header);  long  nid  =  readUint64(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	long    nid    =    readUint64(header);    long  nid  =  readUint64(header);	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	71	None	add
134	[BUG]  [BUGGY]  long  nid  =  readUint64(header);  Long  nid  =  readUint64(header);  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  long  nid  =  readUint64(header);  Long  nid  =  readUint64(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	long    nid    =    readUint64(header);    Long  nid  =  readUint64(header);	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	71	None	add
135	[BUG]  [BUGGY]  long  nid  =  readUint64(header);  int  nid  =  readUint64(header);  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  long  nid  =  readUint64(header);  int  nid  =  readUint64(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	long    nid    =    readUint64(header);    int  nid  =  readUint64(header);	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	71	None	add
136	[BUG]  [BUGGY]  long  nid  =  readUint64(header);  Integer  nid  =  readUint64(header);  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  long  nid  =  readUint64(header);  Integer  nid  =  readUint64(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	long    nid    =    readUint64(header);    Integer  nid  =  readUint64(header);	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	71	None	add
137	[BUG]  [BUGGY]  long  nid  =  readUint64(header);  final  long  nid  =  readUint64(header);  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  long  nid  =  readUint64(header);  final  long  nid  =  readUint64(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	long    nid    =    readUint64(header);    final  long  nid  =  readUint64(header);	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	71	None	add
138	[BUG]  [BUGGY]  long  nid  =  readUint64(header);  short  nid  =  readUint64(header);  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  long  nid  =  readUint64(header);  short  nid  =  readUint64(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	long    nid    =    readUint64(header);    short  nid  =  readUint64(header);	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	71	None	add
139	[BUG]  [BUGGY]  long  nid  =  readUint64(header);  Short  nid  =  readUint64(header);  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]                NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  long  nid  =  readUint64(header);  Short  nid  =  readUint64(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	long    nid    =    readUint64(header);    Short  nid  =  readUint64(header);	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	71	None	add
140	[BUG]  [BUGGY]  Integer  nid  =  currentFolderInputStream.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  currentFolderInputStream.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  currentFolderInputStream.readUnsignedByte();	  int    nid    =    currentFolderInputStream.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
141	[BUG]  [BUGGY]  int  nid  =  inputStream.readUnsignedByte();  [CE]  cannot  find  symbol  inputStream  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  inputStream.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  inputStream.readUnsignedByte();	  int    nid    =    currentFolderInputStream.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  inputStream	11	None	replace
142	[BUG]  [BUGGY]  Integer  nid  =  readAllOrBits(header,  (int)numPackStreams,  fileName);  [CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readAllOrBits(header,  (int)numPackStreams,  fileName);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readAllOrBits(header,  (int)numPackStreams,  fileName);	  Integer    nid    =    readAllOrBits(header,    (int)numPackStreams);    	non-compiled	[CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;	46	None	replace
143	[BUG]  [BUGGY]  Integer  nid  =  readAllOrBits(header,  (Integer)numPackStreams);  [CE]  inconvertible  types  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readAllOrBits(header,  (Integer)numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readAllOrBits(header,  (Integer)numPackStreams);	  Integer    nid    =    readAllOrBits(header,    (int)numPackStreams);    	non-compiled	[CE]  inconvertible  types	46	None	replace
144	[BUG]  [BUGGY]  Integer  nid  =  readAllOrBits(header,  (int)numPackStreams,  archive.packPos);  [CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readAllOrBits(header,  (int)numPackStreams,  archive.packPos);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readAllOrBits(header,  (int)numPackStreams,  archive.packPos);	  Integer    nid    =    readAllOrBits(header,    (int)numPackStreams);    	non-compiled	[CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;	46	None	replace
145	[BUG]  [BUGGY]  Integer  nid  =  readAllOrBits(header,  (int)numPackStreams,  NID.kCRC);  [CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readAllOrBits(header,  (int)numPackStreams,  NID.kCRC);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readAllOrBits(header,  (int)numPackStreams,  NID.kCRC);	  Integer    nid    =    readAllOrBits(header,    (int)numPackStreams);    	non-compiled	[CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;	46	None	replace
146	[BUG]  [BUGGY]  Integer  nid  =  readAllOrBits(header,  (int)numPackStreams,  header);  [CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readAllOrBits(header,  (int)numPackStreams,  header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readAllOrBits(header,  (int)numPackStreams,  header);	  Integer    nid    =    readAllOrBits(header,    (int)numPackStreams);    	non-compiled	[CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;	46	None	replace
147	[BUG]  [BUGGY]  int  nid  =  archive.packPos.readUnsignedByte()  +  1;  [CE]  long  cannot  be  dereferenced  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.packPos.readUnsignedByte()  +  1;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.packPos.readUnsignedByte()  +  1;	  int    nid    =    archive.readUnsignedByte()    +    1;    	non-compiled	[CE]  long  cannot  be  dereferenced	52	None	replace
148	[BUG]  [BUGGY]  int  nid  =  archive.bytesReadUnsignedByte()  +  1;  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.bytesReadUnsignedByte()  +  1;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.bytesReadUnsignedByte()  +  1;	  int    nid    =    archive.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
149	[BUG]  [BUGGY]  int  nid  =  archive.in.readUnsignedByte()  +  1;  [CE]  cannot  find  symbol  in  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.in.readUnsignedByte()  +  1;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.in.readUnsignedByte()  +  1;	  int    nid    =    archive.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol  in	52	None	replace
150	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  numPackStreams);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUint64(header,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readUint64(header,  numPackStreams);	  Integer    nid    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	47	None	replace
151	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUint64(header,  archive.packPos);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readUint64(header,  archive.packPos);	  Integer    nid    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	47	None	replace
152	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  0);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUint64(header,  0);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readUint64(header,  0);	  Integer    nid    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	47	None	replace
153	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUint64(header,  archive);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readUint64(header,  archive);	  Integer    nid    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	47	None	replace
154	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUint64(header,  fileName);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readUint64(header,  fileName);	  Integer    nid    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	47	None	replace
155	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  1);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUint64(header,  1);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readUint64(header,  1);	  Integer    nid    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	47	None	replace
156	[BUG]  [BUGGY]  int  nid  =  archive.readUnsignedByte(header,  0);  [CE]  cannot  find  symbol  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.readUnsignedByte(header,  0);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.readUnsignedByte(header,  0);	  int    nid    =    archive.readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
157	[BUG]  [BUGGY]  int  nid  =  archive.readUnsignedByte(header,  false);  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.readUnsignedByte(header,  false);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.readUnsignedByte(header,  false);	  int    nid    =    archive.readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
158	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(archive);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(archive);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(archive);	  int    nid    =    archive.readUnsignedByte(header);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	51	None	replace
159	[BUG]  [BUGGY]  int  nid  =  archive.readUnsignedByte(header,  null);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.readUnsignedByte(header,  null);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.readUnsignedByte(header,  null);	  int    nid    =    archive.readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
160	[BUG]  [BUGGY]  int  nid  =  archive.readUnsignedByte(header,  NID.kCRC);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.readUnsignedByte(header,  NID.kCRC);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.readUnsignedByte(header,  NID.kCRC);	  int    nid    =    archive.readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
161	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  long  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	add	long  nid  =  header.readUnsignedByte()  +  1;	  long    nid    =    header.readUnsignedByte();    	compilable	  [FE]  IOException  	2	12	replace
162	[BUG]  [BUGGY]  long  nid  =  header.readUnsignedByte()  +  1;  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  long  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	long  nid  =  header.readUnsignedByte()  +  1;	  long    nid    =    header.readUnsignedByte();    	compilable	  [FE]  IOException  	2	12	replace
163	[BUG]  [BUGGY]  final  long  nid  =  header.readUnsignedByte();  [CE]  cannot  assign  a  value  to  final  variable  nid  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  final  long  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	final  long  nid  =  header.readUnsignedByte();	  long    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  nid	2	None	replace
164	[BUG]  [BUGGY]  long  nid  =  header.readUnsignedByte(numPackStreams);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  long  nid  =  header.readUnsignedByte(numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	long  nid  =  header.readUnsignedByte(numPackStreams);	  long    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	2	None	replace
165	[BUG]  [BUGGY]  long  nid  =  header.readEndByte();  [CE]  cannot  find  symbol  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  long  nid  =  header.readEndByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	long  nid  =  header.readEndByte();	  long    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
166	[BUG]  [BUGGY]  int  nid  =  inputStreamStack.readUnsignedByte(currentFolderIndex,  numPackStreams);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  inputStreamStack.readUnsignedByte(currentFolderIndex,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  inputStreamStack.readUnsignedByte(currentFolderIndex,  numPackStreams);	  int    nid    =    header.readUnsignedByte(currentFolderIndex,    numPackStreams);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	20	None	replace
167	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(currentFolderIndex,  nextHeaderSize,  numPackStreams);  [CE]  cannot  find  symbol  nextHeaderSize  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(currentFolderIndex,  nextHeaderSize,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(currentFolderIndex,  nextHeaderSize,  numPackStreams);	  int    nid    =    header.readUnsignedByte(currentFolderIndex,    numPackStreams);    	non-compiled	[CE]  cannot  find  symbol  nextHeaderSize	20	None	replace
168	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte(currentFolderIndex,  numPackStreams);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedByte(currentFolderIndex,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  header.readUnsignedByte(currentFolderIndex,  numPackStreams);	  int    nid    =    header.readUnsignedByte(currentFolderIndex,    numPackStreams);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	20	None	replace
169	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(currentFolderIndex,  NID.kCRC);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(currentFolderIndex,  NID.kCRC);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(currentFolderIndex,  NID.kCRC);	  int    nid    =    header.readUnsignedByte(currentFolderIndex,    numPackStreams);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	20	None	replace
170	[BUG]  [BUGGY]  byte  nid  =  readUint64(header);  [CE]  possible  loss  of  precision  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  byte  nid  =  readUint64(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	byte  nid  =  readUint64(header);	  int    nid    =    readUint64(header);    	non-compiled	[CE]  possible  loss  of  precision	45	None	replace
171	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  double  nid  =  readUint64(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	add	double  nid  =  readUint64(header);	  int    nid    =    readUint64(header);    	compilable	  [FE]  NoClassDefFoundError  	45	12	replace
172	[BUG]  [BUGGY]  double  nid  =  readUint64(header);  [FE]  NoClassDefFoundError  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  double  nid  =  readUint64(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	double  nid  =  readUint64(header);	  int    nid    =    readUint64(header);    	compilable	  [FE]  NoClassDefFoundError  	45	12	replace
173	[BUG]  [BUGGY]  char  nid  =  readUint64(header);  [CE]  possible  loss  of  precision  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  char  nid  =  readUint64(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	char  nid  =  readUint64(header);	  int    nid    =    readUint64(header);    	non-compiled	[CE]  possible  loss  of  precision	45	None	replace
174	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(numPackStreams,  0);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(numPackStreams,  0);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(numPackStreams,  0);	  int    nid    =    header.readUnsignedByte(header,    0);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	61	None	replace
175	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(header,  0,  numPackStreams);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(header,  0,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(header,  0,  numPackStreams);	  int    nid    =    header.readUnsignedByte(header,    0);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	61	None	replace
176	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(header,  0L);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(header,  0L);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(header,  0L);	  int    nid    =    header.readUnsignedByte(header,    0);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	61	None	replace
177	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(packPos,  0);  [CE]  cannot  find  symbol  packPos  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(packPos,  0);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(packPos,  0);	  int    nid    =    header.readUnsignedByte(header,    0);    	non-compiled	[CE]  cannot  find  symbol  packPos	61	None	replace
178	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(header,  fileName,  0);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(header,  fileName,  0);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(header,  fileName,  0);	  int    nid    =    header.readUnsignedByte(header,    0);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	61	None	replace
179	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  file.readUnsignedByte()  +  1;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	add	int  nid  =  file.readUnsignedByte()  +  1;	  int    nid    =    file.readUnsignedByte();    	compilable	  [FE]  EOFException  	14	12	replace
180	[BUG]  [BUGGY]  int  nid  =  file.readUnsignedByte()  +  1;  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  file.readUnsignedByte()  +  1;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  file.readUnsignedByte()  +  1;	  int    nid    =    file.readUnsignedByte();    	compilable	  [FE]  EOFException  	14	12	replace
181	[BUG]  [BUGGY]  double  nid  =  header.readUnsignedByte();  double  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  double  nid  =  header.readUnsignedByte();  double  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	double    nid    =    header.readUnsignedByte();    double  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	3	None	add
182	[BUG]  [BUGGY]  double  nid  =  header.readUnsignedByte();  Double  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  double  nid  =  header.readUnsignedByte();  Double  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	double    nid    =    header.readUnsignedByte();    Double  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	3	None	add
183	[BUG]  [BUGGY]  double  nid  =  header.readUnsignedByte();  int  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  double  nid  =  header.readUnsignedByte();  int  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	double    nid    =    header.readUnsignedByte();    int  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	3	None	add
184	[BUG]  [BUGGY]  double  nid  =  header.readUnsignedByte();  long  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  double  nid  =  header.readUnsignedByte();  long  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	double    nid    =    header.readUnsignedByte();    long  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	3	None	add
185	[BUG]  [BUGGY]  double  nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  double  nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	double    nid    =    header.readUnsignedByte();    Integer  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	3	None	add
186	[BUG]  [BUGGY]  double  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  double  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	double    nid    =    header.readUnsignedByte();    nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	3	None	add
187	[BUG]  [BUGGY]  double  nid  =  header.readUnsignedByte();  Math  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]                NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  double  nid  =  header.readUnsignedByte();  Math  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	double    nid    =    header.readUnsignedByte();    Math  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	3	None	add
188	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  int  nid  =  head.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]              IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte();  int  nid  =  head.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte();  int  nid  =  head.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    int    nid    =    head.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	41	None	replace
189	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  int  nid  =  head.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]                IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  int  nid  =  head.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  header.readUnsignedByte();  int  nid  =  head.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    int    nid    =    head.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	41	None	replace
190	[BUG]  [BUGGY]  long  nid  =  header.readUnsignedByte();  int  nid  =  head.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]                  IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  long  nid  =  header.readUnsignedByte();  int  nid  =  head.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	long  nid  =  header.readUnsignedByte();  int  nid  =  head.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    int    nid    =    head.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	41	None	replace
191	[BUG]  [BUGGY]  NoClassDefFoundError  nid  =  readUint64(header,  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  NoClassDefFoundError  nid  =  readUint64(header,  archive);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	NoClassDefFoundError  nid  =  readUint64(header,  archive);	  NoClassDefFoundError    nid    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	56	None	replace
192	[BUG]  [BUGGY]  NoClassDefFoundError  nid  =  readUint64(header,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  NoClassDefFoundError  nid  =  readUint64(header,  archive.packPos);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	NoClassDefFoundError  nid  =  readUint64(header,  archive.packPos);	  NoClassDefFoundError    nid    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	56	None	replace
193	[BUG]  [BUGGY]  NoClassDefFoundError  nid  =  readUint64(header,  numPackStreams);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  NoClassDefFoundError  nid  =  readUint64(header,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	NoClassDefFoundError  nid  =  readUint64(header,  numPackStreams);	  NoClassDefFoundError    nid    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	56	None	replace
194	[BUG]  [BUGGY]  NoClassDefFoundError  nid  =  readUint64(header,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  NoClassDefFoundError  nid  =  readUint64(header,  fileName);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	NoClassDefFoundError  nid  =  readUint64(header,  fileName);	  NoClassDefFoundError    nid    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	56	None	replace
195	[BUG]  [BUGGY]  NoClassDefFoundError  nid  =  readUint64(header,  false);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  NoClassDefFoundError  nid  =  readUint64(header,  false);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	NoClassDefFoundError  nid  =  readUint64(header,  false);	  NoClassDefFoundError    nid    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	56	None	replace
196	[BUG]  [BUGGY]  NoClassDefFoundError  nid  =  readUint64(header,  null);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  NoClassDefFoundError  nid  =  readUint64(header,  null);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	NoClassDefFoundError  nid  =  readUint64(header,  null);	  NoClassDefFoundError    nid    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	56	None	replace
197	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedInt()  *  1;  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedInt()  *  1;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedInt()  *  1;	  int    nid    =    header.readUnsignedInt()    +    1;    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
198	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedInt()  +  2;  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedInt()  +  2;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedInt()  +  2;	  int    nid    =    header.readUnsignedInt()    +    1;    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
199	[BUG]  [BUGGY]  int  nid  =  inputStreamStack.readUnsignedInt()  +  1;  [CE]  cannot  find  symbol  inputStreamStack  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  inputStreamStack.readUnsignedInt()  +  1;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  inputStreamStack.readUnsignedInt()  +  1;	  int    nid    =    header.readUnsignedInt()    +    1;    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	35	None	replace
200	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedInt()  +  1L;  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedInt()  +  1L;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedInt()  +  1L;	  int    nid    =    header.readUnsignedInt()    +    1;    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
201	[BUG]  [BUGGY]  Integer  nid  =  archive.bytes.readUnsignedByte();  [CE]  cannot  find  symbol  bytes  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  archive.bytes.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  archive.bytes.readUnsignedByte();	  int    nid    =    archive.bytes.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  bytes	73	None	replace
202	[BUG]  [BUGGY]  int  nid  =  archive.bytes.length.readUnsignedByte();  [CE]  cannot  find  symbol  bytes  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.bytes.length.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.bytes.length.readUnsignedByte();	  int    nid    =    archive.bytes.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  bytes	73	None	replace
203	[BUG]  [BUGGY]  int  nid  =  archive.bytes.readUnsignedByte()  +  1;  [CE]  cannot  find  symbol  bytes  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.bytes.readUnsignedByte()  +  1;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.bytes.readUnsignedByte()  +  1;	  int    nid    =    archive.bytes.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  bytes	73	None	replace
204	[BUG]  [BUGGY]  int  nid  =  archive.bytes.readUnsignedByte(header);  [CE]  cannot  find  symbol  bytes  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.bytes.readUnsignedByte(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.bytes.readUnsignedByte(header);	  int    nid    =    archive.bytes.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  bytes	73	None	replace
205	[BUG]  [BUGGY]  int  nid  =  currentFolderInputStream.readUnsignedInt();  [CE]  cannot  find  symbol  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  currentFolderInputStream.readUnsignedInt();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  currentFolderInputStream.readUnsignedInt();	  int    nid    =    inputStreamStack.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
206	[BUG]  [BUGGY]  int  nid  =  this.currentFolderInputStream.readUnsignedInt();  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  this.currentFolderInputStream.readUnsignedInt();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  this.currentFolderInputStream.readUnsignedInt();	  int    nid    =    inputStreamStack.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
207	[BUG]  [BUGGY]  int  nid  =  file.readUnsignedInt();  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  file.readUnsignedInt();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  file.readUnsignedInt();	  int    nid    =    inputStreamStack.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
208	[BUG]  [BUGGY]  int  nid  =  reader.readUnsignedInt();  [CE]  cannot  find  symbol  reader  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  reader.readUnsignedInt();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  reader.readUnsignedInt();	  int    nid    =    inputStreamStack.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol  reader	32	None	replace
209	[BUG]  [BUGGY]  Integer  nid  =  archive.packPos.readUnsignedByte();  [CE]  long  cannot  be  dereferenced  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  archive.packPos.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  archive.packPos.readUnsignedByte();	  int    nid    =    archive.packPos.readUnsignedByte();    	non-compiled	[CE]  long  cannot  be  dereferenced	7	None	replace
210	[BUG]  [BUGGY]  int  nid  =  archive.packPos.readUnsignedByte(header);  [CE]  long  cannot  be  dereferenced  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.packPos.readUnsignedByte(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.packPos.readUnsignedByte(header);	  int    nid    =    archive.packPos.readUnsignedByte();    	non-compiled	[CE]  long  cannot  be  dereferenced	7	None	replace
211	[BUG]  [BUGGY]  long  nid  =  header.readUnsignedByte();  long  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  long  nid  =  header.readUnsignedByte();  long  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	long    nid    =    header.readUnsignedByte();    long  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	1	None	add
212	[BUG]  [BUGGY]  long  nid  =  header.readUnsignedByte();  Long  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  long  nid  =  header.readUnsignedByte();  Long  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	long    nid    =    header.readUnsignedByte();    Long  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	1	None	add
213	[BUG]  [BUGGY]  long  nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  long  nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	long    nid    =    header.readUnsignedByte();    Integer  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	1	None	add
214	[BUG]  [BUGGY]  long  nid  =  header.readUnsignedByte();  Short  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  long  nid  =  header.readUnsignedByte();  Short  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	long    nid    =    header.readUnsignedByte();    Short  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	1	None	add
215	[BUG]  [BUGGY]  long  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  long  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	long    nid    =    header.readUnsignedByte();    nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	1	None	add
216	[BUG]  [BUGGY]  long  nid  =  header.readUnsignedByte();  short  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  long  nid  =  header.readUnsignedByte();  short  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	long    nid    =    header.readUnsignedByte();    short  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	1	None	add
217	[BUG]  [BUGGY]  Integer  nid  =  inputStreamStack.readUnsignedInt();  [CE]  cannot  find  symbol  inputStreamStack  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  inputStreamStack.readUnsignedInt();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  inputStreamStack.readUnsignedInt();	  Integer    nid    =    header.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	58	None	replace
218	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedInt(numPackStreams);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedInt(numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  header.readUnsignedInt(numPackStreams);	  Integer    nid    =    header.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
219	[BUG]  [BUGGY]  Integer  nid  =  this.header.readUnsignedInt();  [CE]  cannot  find  symbol  header  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  this.header.readUnsignedInt();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  this.header.readUnsignedInt();	  Integer    nid    =    header.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol  header	58	None	replace
220	[BUG]  [BUGGY]  Integer  nid  =  archive.readUnsignedInt();  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  archive.readUnsignedInt();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  archive.readUnsignedInt();	  Integer    nid    =    header.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
221	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(currentFolderInputStream,  header);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(currentFolderInputStream,  header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(currentFolderInputStream,  header);	  int    nid    =    header.readUnsignedByte(inputStreamStack,    header);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	30	None	replace
222	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(dataInput,  header);  [CE]  cannot  find  symbol  dataInput  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(dataInput,  header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(dataInput,  header);	  int    nid    =    header.readUnsignedByte(inputStreamStack,    header);    	non-compiled	[CE]  cannot  find  symbol  dataInput	30	None	replace
223	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(currentFolderInput,  header);  [CE]  cannot  find  symbol  currentFolderInput  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(currentFolderInput,  header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(currentFolderInput,  header);	  int    nid    =    header.readUnsignedByte(inputStreamStack,    header);    	non-compiled	[CE]  cannot  find  symbol  currentFolderInput	30	None	replace
224	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  byte  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]            IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte();  byte  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte();  byte  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    byte    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	40	None	replace
225	[BUG]  [BUGGY]  long  nid  =  header.readUnsignedByte();  byte  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]              IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  long  nid  =  header.readUnsignedByte();  byte  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	long  nid  =  header.readUnsignedByte();  byte  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    byte    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	40	None	replace
226	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	add	int  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    	compilable	  [FE]  IOException  	43	12	replace
227	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [FE]  IOException  [FE]                  IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    	compilable	  [FE]  IOException  	43	12	replace
228	[BUG]  [BUGGY]  NID  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [CE]  incompatible  types  [FE]                    IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  NID  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	NID  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  incompatible  types	43	None	replace
229	[BUG]  [BUGGY]  Integer  nid  =  readUnsignedByte(header,  0);  [CE]  cannot  find  symbol  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUnsignedByte(header,  0);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readUnsignedByte(header,  0);	  Integer    nid    =    readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
230	[BUG]  [BUGGY]  Integer  nid  =  readUnsignedByte(header,  archive.packPos);  [CE]  cannot  find  symbol  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUnsignedByte(header,  archive.packPos);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readUnsignedByte(header,  archive.packPos);	  Integer    nid    =    readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
231	[BUG]  [BUGGY]  Integer  nid  =  readUnsignedByte(header,  false);  [CE]  cannot  find  symbol  [FE]                                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUnsignedByte(header,  false);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readUnsignedByte(header,  false);	  Integer    nid    =    readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
232	[BUG]  [BUGGY]  Integer  nid  =  readUnsignedByte(header,  archive);  [CE]  cannot  find  symbol  [FE]                                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUnsignedByte(header,  archive);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readUnsignedByte(header,  archive);	  Integer    nid    =    readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
233	[BUG]  [BUGGY]  Integer  nid  =  readUnsignedByte(header,  fileName);  [CE]  cannot  find  symbol  [FE]                                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUnsignedByte(header,  fileName);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readUnsignedByte(header,  fileName);	  Integer    nid    =    readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
234	[BUG]  [BUGGY]  String  nid  =  header.readUnsignedByte()  +  1;  [CE]  incompatible  types  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  String  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	String  nid  =  header.readUnsignedByte()  +  1;	  String    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  incompatible  types	66	None	replace
235	[BUG]  [BUGGY]  String  nid  =  inputStreamStack.readUnsignedByte();  [CE]  cannot  find  symbol  inputStreamStack  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  String  nid  =  inputStreamStack.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	String  nid  =  inputStreamStack.readUnsignedByte();	  String    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	66	None	replace
236	[BUG]  [BUGGY]  String  nid  =  header.readUnsignedByte(numPackStreams);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  String  nid  =  header.readUnsignedByte(numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	String  nid  =  header.readUnsignedByte(numPackStreams);	  String    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	66	None	replace
237	[BUG]  [BUGGY]  String  nid  =  header.readUTF();  [CE]  incomparable  types:  String  and  int  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  String  nid  =  header.readUTF();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	String  nid  =  header.readUTF();	  String    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  incomparable  types:  String  and  int	66	None	replace
238	[BUG]  [BUGGY]  int  nid  =  archive.packPos.readUnsignedInt();  [CE]  long  cannot  be  dereferenced  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.packPos.readUnsignedInt();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.packPos.readUnsignedInt();	  int    nid    =    archive.readUnsignedInt();    	non-compiled	[CE]  long  cannot  be  dereferenced	34	None	replace
239	[BUG]  [BUGGY]  int  nid  =  archive.bytesReadUnsignedInt();  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.bytesReadUnsignedInt();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.bytesReadUnsignedInt();	  int    nid    =    archive.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
240	[BUG]  [BUGGY]  int  nid  =  archive.in.readUnsignedInt();  [CE]  cannot  find  symbol  in  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.in.readUnsignedInt();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.in.readUnsignedInt();	  int    nid    =    archive.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol  in	34	None	replace
241	[BUG]  [BUGGY]  int  nid  =  archive.getUnsignedInt();  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.getUnsignedInt();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.getUnsignedInt();	  int    nid    =    archive.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
242	[BUG]  [BUGGY]  Integer  nid  =  archive.in.readUnsignedByte();  [CE]  cannot  find  symbol  in  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  archive.in.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  archive.in.readUnsignedByte();	  int    nid    =    archive.in.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  in	9	None	replace
243	[BUG]  [BUGGY]  Integer  nid  =  readAllOrBits(header,  numPackStreams,  (int)numPackStreams);  [CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readAllOrBits(header,  numPackStreams,  (int)numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readAllOrBits(header,  numPackStreams,  (int)numPackStreams);	  Integer    nid    =    readAllOrBits(header,    numPackStreams);    	non-compiled	[CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;	49	None	replace
244	[BUG]  [BUGGY]  Integer  nid  =  readAllOrBits(header,  numPackStreams,  NID.kCRC);  [CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readAllOrBits(header,  numPackStreams,  NID.kCRC);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readAllOrBits(header,  numPackStreams,  NID.kCRC);	  Integer    nid    =    readAllOrBits(header,    numPackStreams);    	non-compiled	[CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;	49	None	replace
245	[BUG]  [BUGGY]  Integer  nid  =  readAllOrBits(header,  numPackStreams,  fileName);  [CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readAllOrBits(header,  numPackStreams,  fileName);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readAllOrBits(header,  numPackStreams,  fileName);	  Integer    nid    =    readAllOrBits(header,    numPackStreams);    	non-compiled	[CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;	49	None	replace
246	[BUG]  [BUGGY]  Integer  nid  =  readAllOrBits(header,  numPackStreams,  archive.packPos);  [CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readAllOrBits(header,  numPackStreams,  archive.packPos);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readAllOrBits(header,  numPackStreams,  archive.packPos);	  Integer    nid    =    readAllOrBits(header,    numPackStreams);    	non-compiled	[CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;	49	None	replace
247	[BUG]  [BUGGY]  Integer  nid  =  readAllOrBits(header,  archive.packPos,  numPackStreams);  [CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readAllOrBits(header,  archive.packPos,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readAllOrBits(header,  archive.packPos,  numPackStreams);	  Integer    nid    =    readAllOrBits(header,    numPackStreams);    	non-compiled	[CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;	49	None	replace
248	[BUG]  [BUGGY]  Integer  nid  =  readAllOrBits(header,  numPackStreams,  0);  [CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readAllOrBits(header,  numPackStreams,  0);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readAllOrBits(header,  numPackStreams,  0);	  Integer    nid    =    readAllOrBits(header,    numPackStreams);    	non-compiled	[CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;	49	None	replace
249	[BUG]  [BUGGY]  final  long  nid  =  readUint64(header);  [CE]  cannot  assign  a  value  to  final  variable  nid  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  final  long  nid  =  readUint64(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	final  long  nid  =  readUint64(header);	  long    nid    =    readUint64(header);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  nid	72	None	replace
250	[BUG]  [BUGGY]  long  nid  =  readUint64(header,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  long  nid  =  readUint64(header,  archive.packPos);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	long  nid  =  readUint64(header,  archive.packPos);	  long    nid    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	72	None	replace
251	[BUG]  [BUGGY]  long  nid  =  readUint64(header,  0);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  long  nid  =  readUint64(header,  0);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	long  nid  =  readUint64(header,  0);	  long    nid    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	72	None	replace
252	[BUG]  [BUGGY]  long  nid  =  readUint64(header,  archive);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  long  nid  =  readUint64(header,  archive);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	long  nid  =  readUint64(header,  archive);	  long    nid    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	72	None	replace
253	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(currentFolderIndex,  header);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(currentFolderIndex,  header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(currentFolderIndex,  header);	  int    nid    =    header.readUnsignedByte(data,    header);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	64	None	replace
254	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(sIGNATURE_HEADER_SIZE,  header);  [CE]  cannot  find  symbol  sIGNATURE_HEADER_SIZE  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(sIGNATURE_HEADER_SIZE,  header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(sIGNATURE_HEADER_SIZE,  header);	  int    nid    =    header.readUnsignedByte(data,    header);    	non-compiled	[CE]  cannot  find  symbol  sIGNATURE_HEADER_SIZE	64	None	replace
255	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(inputStreamStack,  header,  numPackStreams);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(inputStreamStack,  header,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(inputStreamStack,  header,  numPackStreams);	  int    nid    =    header.readUnsignedByte(header,    numPackStreams);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	17	None	replace
256	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(data,  header,  numPackStreams);  [CE]  cannot  find  symbol  data  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(data,  header,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(data,  header,  numPackStreams);	  int    nid    =    header.readUnsignedByte(header,    numPackStreams);    	non-compiled	[CE]  cannot  find  symbol  data	17	None	replace
257	[BUG]  [BUGGY]  int  nid  =  readUnsignedByte().length;  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  readUnsignedByte().length;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  readUnsignedByte().length;	  int    nid    =    readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
258	[BUG]  [BUGGY]  int  nid  =  readUnsignedByte(0);  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  readUnsignedByte(0);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  readUnsignedByte(0);	  int    nid    =    readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
259	[BUG]  [BUGGY]  int  nid  =  readUnsignedByte()  +  1;  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  readUnsignedByte()  +  1;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  readUnsignedByte()  +  1;	  int    nid    =    readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
260	[BUG]  [BUGGY]  int  nid  =  this.currentFolderInputStream.readUnsignedByte(numPackStreams);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  this.currentFolderInputStream.readUnsignedByte(numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  this.currentFolderInputStream.readUnsignedByte(numPackStreams);	  int    nid    =    this.currentFolderInputStream.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
261	[BUG]  [BUGGY]  int  nid  =  this.currentFolderInputStream.readUnsignedByte(header);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  this.currentFolderInputStream.readUnsignedByte(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  this.currentFolderInputStream.readUnsignedByte(header);	  int    nid    =    this.currentFolderInputStream.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
262	[BUG]  [BUGGY]  int  nid  =  header.bytesReadUnsignedByte();  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.bytesReadUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.bytesReadUnsignedByte();	  int    nid    =    archive.bytesReadUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
263	[BUG]  [BUGGY]  int  nid  =  archive.bytesReadUnsignedByte(header);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.bytesReadUnsignedByte(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.bytesReadUnsignedByte(header);	  int    nid    =    archive.bytesReadUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
264	[BUG]  [BUGGY]  int  nid  =  archive.bytesWriteUnsignedByte();  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.bytesWriteUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.bytesWriteUnsignedByte();	  int    nid    =    archive.bytesReadUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
265	[BUG]  [BUGGY]  Integer  nid  =  archive.bytesReadUnsignedByte();  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  archive.bytesReadUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  archive.bytesReadUnsignedByte();	  int    nid    =    archive.bytesReadUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
266	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte()  +  archive;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte()  +  archive;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte()  +  archive;	  int    nid    =    archive.readUnsignedByte()    +    header;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	53	None	replace
267	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte()  +  archive.headerLength;  [CE]  cannot  find  symbol  headerLength  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte()  +  archive.headerLength;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte()  +  archive.headerLength;	  int    nid    =    archive.readUnsignedByte()    +    header;    	non-compiled	[CE]  cannot  find  symbol  headerLength	53	None	replace
268	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte()  +  archive.headerPos;  [CE]  cannot  find  symbol  headerPos  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte()  +  archive.headerPos;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte()  +  archive.headerPos;	  int    nid    =    archive.readUnsignedByte()    +    header;    	non-compiled	[CE]  cannot  find  symbol  headerPos	53	None	replace
269	[BUG]  [BUGGY]  int  nid  =  sourceStream.readUnsignedInt();  [CE]  cannot  find  symbol  sourceStream  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  sourceStream.readUnsignedInt();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  sourceStream.readUnsignedInt();	  int    nid    =    inputStreamStack.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol  sourceStream	32	None	replace
270	[BUG]  [BUGGY]  int  nid  =  source.readUnsignedInt();  [CE]  cannot  find  symbol  source  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  source.readUnsignedInt();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  source.readUnsignedInt();	  int    nid    =    inputStreamStack.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol  source	32	None	replace
271	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedInt(header);  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedInt(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  header.readUnsignedInt(header);	  Integer    nid    =    header.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
272	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedInt()  +  1;  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedInt()  +  1;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  header.readUnsignedInt()  +  1;	  Integer    nid    =    header.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
273	[BUG]  [BUGGY]  Integer  nid  =  file.readUnsignedInt();  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  file.readUnsignedInt();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  file.readUnsignedInt();	  Integer    nid    =    header.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
274	[BUG]  [BUGGY]  Integer  nid  =  entry.readUnsignedInt();  [CE]  cannot  find  symbol  entry  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  entry.readUnsignedInt();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  entry.readUnsignedInt();	  Integer    nid    =    header.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol  entry	58	None	replace
275	[BUG]  [BUGGY]  nid  =  readUint64(header.readUnsignedByte());  [CE]  cannot  find  symbol  nid  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  nid  =  readUint64(header.readUnsignedByte());  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	nid  =  readUint64(header.readUnsignedByte());	  nid    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  nid	44	None	replace
276	[BUG]  [BUGGY]  nid  =  readUint64(header,  0);  [CE]  cannot  find  symbol  nid  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  nid  =  readUint64(header,  0);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	nid  =  readUint64(header,  0);	  nid    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  nid	44	None	replace
277	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  Number  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  Number  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer    nid    =    header.readUnsignedByte();    Number  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	24	None	add
278	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  String  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  String  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer    nid    =    header.readUnsignedByte();    String  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	24	None	add
279	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  float  nid  =  readUint64(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	add	float  nid  =  readUint64(header);	  int    nid    =    readUint64(header);    	compilable	  [FE]  NoClassDefFoundError  	45	12	replace
280	[BUG]  [BUGGY]  float  nid  =  readUint64(header);  [FE]  NoClassDefFoundError  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  float  nid  =  readUint64(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	float  nid  =  readUint64(header);	  int    nid    =    readUint64(header);    	compilable	  [FE]  NoClassDefFoundError  	45	12	replace
281	[BUG]  [BUGGY]  short  nid  =  readUint64(header);  [CE]  possible  loss  of  precision  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  short  nid  =  readUint64(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	short  nid  =  readUint64(header);	  int    nid    =    readUint64(header);    	non-compiled	[CE]  possible  loss  of  precision	45	None	replace
282	[BUG]  [BUGGY]  Int  nid  =  header.readUnsignedByte();  long  nid  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Int  nid  =  header.readUnsignedByte();  long  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Int  nid  =  header.readUnsignedByte();  long  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    long    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
283	[BUG]  [BUGGY]  int  nid  =  archive.packPos.readUnsignedByte()  +  header;  [CE]  long  cannot  be  dereferenced  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.packPos.readUnsignedByte()  +  header;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.packPos.readUnsignedByte()  +  header;	  int    nid    =    archive.packPos.readUnsignedByte();    	non-compiled	[CE]  long  cannot  be  dereferenced	7	None	replace
284	[BUG]  [BUGGY]  long  nid  =  readUnsignedByte(header);  [CE]  cannot  find  symbol  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  long  nid  =  readUnsignedByte(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	long  nid  =  readUnsignedByte(header);	  long    nid    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
285	[BUG]  [BUGGY]  byte  nid  =  header.readUnsignedByte(data,  header);  [CE]  cannot  find  symbol  data  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  byte  nid  =  header.readUnsignedByte(data,  header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	byte  nid  =  header.readUnsignedByte(data,  header);	  byte    nid    =    header.readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol  data	29	None	replace
286	[BUG]  [BUGGY]  byte  nid  =  header.readUnsignedByte(currentFolderIndex,  header);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  byte  nid  =  header.readUnsignedByte(currentFolderIndex,  header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	byte  nid  =  header.readUnsignedByte(currentFolderIndex,  header);	  byte    nid    =    header.readUnsignedByte(header);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	29	None	replace
287	[BUG]  [BUGGY]  byte  nid  =  header.readUnsignedByte(header,  0);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  byte  nid  =  header.readUnsignedByte(header,  0);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	byte  nid  =  header.readUnsignedByte(header,  0);	  byte    nid    =    header.readUnsignedByte(header);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	29	None	replace
288	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  null);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUint64(header,  null);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readUint64(header,  null);	  Integer    nid    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	47	None	replace
289	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  false);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUint64(header,  false);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readUint64(header,  false);	  Integer    nid    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	47	None	replace
290	[BUG]  [BUGGY]  Integer  nid  =  readAllOrBits(header,  numPackStreams,  header.readUnsignedByte());  [CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readAllOrBits(header,  numPackStreams,  header.readUnsignedByte());  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readAllOrBits(header,  numPackStreams,  header.readUnsignedByte());	  Integer    nid    =    readAllOrBits(header,    numPackStreams);    	non-compiled	[CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;	49	None	replace
291	[BUG]  [BUGGY]  Integer  nid  =  readAllOrBits(header,  numPackStreams,  deferredBlockStreams);  [CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readAllOrBits(header,  numPackStreams,  deferredBlockStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readAllOrBits(header,  numPackStreams,  deferredBlockStreams);	  Integer    nid    =    readAllOrBits(header,    numPackStreams);    	non-compiled	[CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;	49	None	replace
292	[BUG]  [BUGGY]  Integer  nid  =  readAllOrBits(header,  numPackStreams,  header);  [CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readAllOrBits(header,  numPackStreams,  header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readAllOrBits(header,  numPackStreams,  header);	  Integer    nid    =    readAllOrBits(header,    numPackStreams);    	non-compiled	[CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;	49	None	replace
293	[BUG]  [BUGGY]  Integer  nid  =  readAllOrBits(header,  fileName,  numPackStreams);  [CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readAllOrBits(header,  fileName,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readAllOrBits(header,  fileName,  numPackStreams);	  Integer    nid    =    readAllOrBits(header,    numPackStreams);    	non-compiled	[CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;	49	None	replace
294	[BUG]  [BUGGY]  Int  nid  =  header.readUnsignedByte();  int  nid  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Int  nid  =  header.readUnsignedByte();  int  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Int  nid  =  header.readUnsignedByte();  int  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    int    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
295	[BUG]  [BUGGY]  long  nid  =  header.readUnsignedByte(header);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  long  nid  =  header.readUnsignedByte(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	long  nid  =  header.readUnsignedByte(header);	  long    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	2	None	replace
296	[BUG]  [BUGGY]  long  nid  =  header.readUnsignedByte(0);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  long  nid  =  header.readUnsignedByte(0);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	long  nid  =  header.readUnsignedByte(0);	  long    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	2	None	replace
297	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(fileName,  header.length);  [CE]  cannot  find  symbol  length  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(fileName,  header.length);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(fileName,  header.length);	  int    nid    =    header.readUnsignedByte(fileName,    header);    	non-compiled	[CE]  cannot  find  symbol  length	63	None	replace
298	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(fileName,  sourceFile);  [CE]  cannot  find  symbol  sourceFile  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(fileName,  sourceFile);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(fileName,  sourceFile);	  int    nid    =    header.readUnsignedByte(fileName,    header);    	non-compiled	[CE]  cannot  find  symbol  sourceFile	63	None	replace
299	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(data,  fileName);  [CE]  cannot  find  symbol  data  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(data,  fileName);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(data,  fileName);	  int    nid    =    header.readUnsignedByte(fileName,    header);    	non-compiled	[CE]  cannot  find  symbol  data	63	None	replace
300	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(header,  header);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(header,  header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(header,  header);	  int    nid    =    header.readUnsignedByte(data,    header);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	64	None	replace
301	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(sourceName,  header);  [CE]  cannot  find  symbol  sourceName  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(sourceName,  header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(sourceName,  header);	  int    nid    =    header.readUnsignedByte(data,    header);    	non-compiled	[CE]  cannot  find  symbol  sourceName	64	None	replace
302	[BUG]  [BUGGY]  int  nid  =  archive.getSIGNATURE_HEADER_SIZE();  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.getSIGNATURE_HEADER_SIZE();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.getSIGNATURE_HEADER_SIZE();	  int    nid    =    archive.getUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
303	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(header);  [CE]  cannot  find  symbol  nid  [FE]          IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  nid  =  header.readUnsignedByte(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	nid  =  header.readUnsignedByte(header);	  nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  nid	26	None	replace
304	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  [CE]  cannot  find  symbol  nid  [FE]            IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	nid  =  header.readUnsignedByte()  +  1;	  nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  nid	26	None	replace
305	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  nid  [FE]            IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    byte    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol  nid	40	None	replace
306	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(fileName,  header,  numPackStreams);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(fileName,  header,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(fileName,  header,  numPackStreams);	  int    nid    =    header.readUnsignedByte(header,    numPackStreams);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	17	None	replace
307	[BUG]  [BUGGY]  int  nid  =  archive.sIGNATURE_HEADER_SIZE.readUnsignedInt();  [CE]  cannot  find  symbol  sIGNATURE_HEADER_SIZE  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.sIGNATURE_HEADER_SIZE.readUnsignedInt();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.sIGNATURE_HEADER_SIZE.readUnsignedInt();	  int    nid    =    archive.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol  sIGNATURE_HEADER_SIZE	34	None	replace
308	[BUG]  [BUGGY]  int  nid  =  archive.readUnsignedInt(header);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.readUnsignedInt(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.readUnsignedInt(header);	  int    nid    =    archive.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
309	[BUG]  [BUGGY]  int  nid  =  archive.readUnsignedInt()  +  1;  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.readUnsignedInt()  +  1;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.readUnsignedInt()  +  1;	  int    nid    =    archive.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
310	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  Int  nid  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte();  Int  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte();  Int  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    Int    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
311	[BUG]  [BUGGY]  Int  nid  =  header.readUnsignedByte();  Int  nid  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Int  nid  =  header.readUnsignedByte();  Int  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Int  nid  =  header.readUnsignedByte();  Int  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    Int    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
312	[BUG]  [BUGGY]  Int  nid  =  header.readUnsignedByte()  +  1;  [CE]  cannot  find  symbol  [FE]                    IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Int  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Int  nid  =  header.readUnsignedByte()  +  1;	  int    nid    =    header.readUnsignedByte()    +    1;    Int    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
313	[BUG]  [BUGGY]  Integer  nid  =  readAllOrBits(header,  (long)numPackStreams);  [CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readAllOrBits(header,  (long)numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readAllOrBits(header,  (long)numPackStreams);	  Integer    nid    =    readAllOrBits(header,    (int)numPackStreams);    	non-compiled	[CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;	46	None	replace
314	[BUG]  [BUGGY]  Integer  nid  =  readAllOrBits(header,  (int)numPackStreams,  deferredBlockStreams);  [CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readAllOrBits(header,  (int)numPackStreams,  deferredBlockStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readAllOrBits(header,  (int)numPackStreams,  deferredBlockStreams);	  Integer    nid    =    readAllOrBits(header,    (int)numPackStreams);    	non-compiled	[CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;	46	None	replace
315	[BUG]  [BUGGY]  Integer  nid  =  readAllOrBits(header,  (int)numPackStreams,  header.length);  [CE]  cannot  find  symbol  length  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readAllOrBits(header,  (int)numPackStreams,  header.length);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readAllOrBits(header,  (int)numPackStreams,  header.length);	  Integer    nid    =    readAllOrBits(header,    (int)numPackStreams);    	non-compiled	[CE]  cannot  find  symbol  length	46	None	replace
316	[BUG]  [BUGGY]  Long  nid  =  header.readUnsignedByte(header);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Long  nid  =  header.readUnsignedByte(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Long  nid  =  header.readUnsignedByte(header);	  Long    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	5	None	replace
317	[BUG]  [BUGGY]  Long  nid  =  header.readUnsignedByte(0);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Long  nid  =  header.readUnsignedByte(0);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Long  nid  =  header.readUnsignedByte(0);	  Long    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	5	None	replace
318	[BUG]  [BUGGY]  Long  nid  =  header.readUnsignedByte()  +  6;  [CE]  incompatible  types  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Long  nid  =  header.readUnsignedByte()  +  6;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Long  nid  =  header.readUnsignedByte()  +  6;	  Long    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  incompatible  types	5	None	replace
319	[BUG]  [BUGGY]  NoClassDefFoundError  nid  =  readUint64(header,  0);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  NoClassDefFoundError  nid  =  readUint64(header,  0);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	NoClassDefFoundError  nid  =  readUint64(header,  0);	  NoClassDefFoundError    nid    =    readUint64(header);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	56	None	replace
320	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(fileName,  header,  archive.packPos);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(fileName,  header,  archive.packPos);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(fileName,  header,  archive.packPos);	  int    nid    =    header.readUnsignedByte(header,    archive.packPos);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	65	None	replace
321	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(data,  header,  archive.packPos);  [CE]  cannot  find  symbol  data  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(data,  header,  archive.packPos);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(data,  header,  archive.packPos);	  int    nid    =    header.readUnsignedByte(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  data	65	None	replace
322	[BUG]  [BUGGY]  double  nid  =  header.readUnsignedByte(header);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  double  nid  =  header.readUnsignedByte(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	double  nid  =  header.readUnsignedByte(header);	  double    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	4	None	replace
323	[BUG]  [BUGGY]  double  nid  =  header.readUnsignedByte(0);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  double  nid  =  header.readUnsignedByte(0);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	double  nid  =  header.readUnsignedByte(0);	  double    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	4	None	replace
324	[BUG]  [BUGGY]  int  nid  =  sourceFile.readUnsignedByte();  [CE]  cannot  find  symbol  sourceFile  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  sourceFile.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  sourceFile.readUnsignedByte();	  int    nid    =    this.currentFolderInputStream.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  sourceFile	12	None	replace
325	[BUG]  [BUGGY]  String  nid  =  header.readUnsignedByte(header);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  String  nid  =  header.readUnsignedByte(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	String  nid  =  header.readUnsignedByte(header);	  String    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	66	None	replace
326	[BUG]  [BUGGY]  String  nid  =  header.readUnsignedByte()  +  6;  [CE]  incompatible  types  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  String  nid  =  header.readUnsignedByte()  +  6;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	String  nid  =  header.readUnsignedByte()  +  6;	  String    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  incompatible  types	66	None	replace
327	[BUG]  [BUGGY]  String  nid  =  header.readUnsignedByte()  +  4;  [CE]  incompatible  types  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  String  nid  =  header.readUnsignedByte()  +  4;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	String  nid  =  header.readUnsignedByte()  +  4;	  String    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  incompatible  types	66	None	replace
328	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(header,  source);  [CE]  cannot  find  symbol  source  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(header,  source);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(header,  source);	  int    nid    =    header.readUnsignedByte(inputStreamStack,    header);    	non-compiled	[CE]  cannot  find  symbol  source	30	None	replace
329	[BUG]  [BUGGY]  int  nid  =  file.bytesReadUnsignedByte();  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  file.bytesReadUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  file.bytesReadUnsignedByte();	  int    nid    =    archive.bytesReadUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
330	[BUG]  [BUGGY]  int  nid  =  file.readUnsignedByte();  int  numPackStreams  =  file.readUnsignedByte();  [CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]    EOFException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  file.readUnsignedByte();  int  numPackStreams  =  file.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int    nid    =    file.readUnsignedByte();    int  numPackStreams  =  file.readUnsignedByte();	  	non-compiled	[CE]  variable  numPackStreams  is  already  defined  in  method  readPackInfo(DataInput,Archive)	13	None	add
331	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedInt()  +  4;  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedInt()  +  4;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedInt()  +  4;	  int    nid    =    header.readUnsignedInt()    +    1;    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
332	[BUG]  [BUGGY]  int  nid  =  archive.readUnsignedByte()  *  1;  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.readUnsignedByte()  *  1;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.readUnsignedByte()  *  1;	  int    nid    =    archive.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
333	[BUG]  [BUGGY]  int  nid  =  archive.readUnsignedByte()  +  1L;  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.readUnsignedByte()  +  1L;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.readUnsignedByte()  +  1L;	  int    nid    =    archive.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
334	[BUG]  [BUGGY]  int  nid  =  archive.readUnsignedByte()  +  2;  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.readUnsignedByte()  +  2;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.readUnsignedByte()  +  2;	  int    nid    =    archive.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
335	[BUG]  [BUGGY]  Integer  nid  =  readUnsignedByte(1);  [CE]  cannot  find  symbol  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUnsignedByte(1);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readUnsignedByte(1);	  Integer    nid    =    readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
336	[BUG]  [BUGGY]  Integer  nid  =  readUnsignedByte(header.length);  [CE]  cannot  find  symbol  length  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUnsignedByte(header.length);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readUnsignedByte(header.length);	  Integer    nid    =    readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  length	48	None	replace
337	[BUG]  [BUGGY]  Int  nid  =  header.readUnsignedByte();  int  numPackStreams  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Int  nid  =  header.readUnsignedByte();  int  numPackStreams  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Int  nid  =  header.readUnsignedByte();  int  numPackStreams  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    int    numPackStreams    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
338	[BUG]  [BUGGY]  int  nid  =  file.readUnsignedByte(0);  [CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;  [FE]    EOFException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  file.readUnsignedByte(0);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  file.readUnsignedByte(0);	  int    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;	14	None	replace
339	[BUG]  [BUGGY]  Int  nid  =  archive.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Int  nid  =  archive.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Int  nid  =  archive.readUnsignedByte();	  Int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
340	[BUG]  [BUGGY]  Int  nid  =  header.readUnsignedByte(header);  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Int  nid  =  header.readUnsignedByte(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Int  nid  =  header.readUnsignedByte(header);	  Int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
341	[BUG]  [BUGGY]  Int  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Int  nid  =  file.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Int  nid  =  file.readUnsignedByte();	  Int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
342	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(header,  fileName,  numPackStreams);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(header,  fileName,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(header,  fileName,  numPackStreams);	  int    nid    =    header.readUnsignedByte(fileName,    numPackStreams);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	55	None	replace
343	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(length,  fileName,  numPackStreams);  [CE]  cannot  find  symbol  length  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(length,  fileName,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(length,  fileName,  numPackStreams);	  int    nid    =    header.readUnsignedByte(fileName,    numPackStreams);    	non-compiled	[CE]  cannot  find  symbol  length	55	None	replace
344	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(rootPos,  numPackStreams);  [CE]  cannot  find  symbol  rootPos  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(rootPos,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(rootPos,  numPackStreams);	  int    nid    =    header.readUnsignedByte(inputStreamStack,    numPackStreams);    	non-compiled	[CE]  cannot  find  symbol  rootPos	21	None	replace
345	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(data,  numPackStreams);  [CE]  cannot  find  symbol  data  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(data,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(data,  numPackStreams);	  int    nid    =    header.readUnsignedByte(inputStreamStack,    numPackStreams);    	non-compiled	[CE]  cannot  find  symbol  data	21	None	replace
346	[BUG]  [BUGGY]  int  nid  =  archive.bytes.readUnsignedByte(0);  [CE]  cannot  find  symbol  bytes  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.bytes.readUnsignedByte(0);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.bytes.readUnsignedByte(0);	  int    nid    =    archive.bytes.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  bytes	73	None	replace
347	[BUG]  [BUGGY]  Integer  nid  =  readUnsignedByte(header,  null);  [CE]  cannot  find  symbol  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUnsignedByte(header,  null);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readUnsignedByte(header,  null);	  Integer    nid    =    readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
348	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(currentFolderIndex,  NID.kCRC,  numPackStreams);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(currentFolderIndex,  NID.kCRC,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(currentFolderIndex,  NID.kCRC,  numPackStreams);	  int    nid    =    header.readUnsignedByte(currentFolderIndex,    numPackStreams);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	20	None	replace
349	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedInt(header,  0);  [CE]  cannot  find  symbol  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedInt(header,  0);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedInt(header,  0);	  int    nid    =    header.readUnsignedInt(header);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
350	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedInt(length);  [CE]  cannot  find  symbol  length  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedInt(length);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedInt(length);	  int    nid    =    header.readUnsignedInt(header);    	non-compiled	[CE]  cannot  find  symbol  length	57	None	replace
351	[BUG]  [BUGGY]  Inte  nid  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Inte  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Inte  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    Inte    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
352	[BUG]  [BUGGY]  Inte  nid  =  header.readUnsignedByte()  +  1;  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Inte  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Inte  nid  =  header.readUnsignedByte()  +  1;	  int    nid    =    header.readUnsignedByte()    +    1;    Inte    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
353	[BUG]  [BUGGY]  long  nid  =  readUint64(header);  nid  =  readUint64(header);  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  long  nid  =  readUint64(header);  nid  =  readUint64(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	long    nid    =    readUint64(header);    nid  =  readUint64(header);	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	71	None	add
354	[BUG]  [BUGGY]  long  nid  =  header.readUnsignedByte()  +  1;  Integer  nid  =  header.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]          IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  long  nid  =  header.readUnsignedByte()  +  1;  Integer  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	long  nid  =  header.readUnsignedByte()  +  1;  Integer  nid  =  header.readUnsignedByte()  +  1;	  int    nid    =    header.readUnsignedByte()    +    1;    Integer    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	39	None	replace
355	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(2)  +  1;  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(2)  +  1;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(2)  +  1;	  int    nid    =    header.readUnsignedByte(2);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	62	None	replace
356	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(4);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(4);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(4);	  int    nid    =    header.readUnsignedByte(2);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	62	None	replace
357	[BUG]  [BUGGY]  int  nid  =  readUint64(header,  numPackStreams,  header.readUnsignedByte());  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  readUint64(header,  numPackStreams,  header.readUnsignedByte());  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  readUint64(header,  numPackStreams,  header.readUnsignedByte());	  int    nid    =    readUint64(header,    numPackStreams);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	70	None	replace
358	[BUG]  [BUGGY]  int  nid  =  readUint64(header,  numPackStreams,  fileName);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  readUint64(header,  numPackStreams,  fileName);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  readUint64(header,  numPackStreams,  fileName);	  int    nid    =    readUint64(header,    numPackStreams);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	70	None	replace
359	[BUG]  [BUGGY]  int  nid  =  readUint64(header,  numPackStreams,  header);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  readUint64(header,  numPackStreams,  header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  readUint64(header,  numPackStreams,  header);	  int    nid    =    readUint64(header,    numPackStreams);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	70	None	replace
360	[BUG]  [BUGGY]  int  nid  =  readUint64(header,  numPackStreams,  0);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  readUint64(header,  numPackStreams,  0);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  readUint64(header,  numPackStreams,  0);	  int    nid    =    readUint64(header,    numPackStreams);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	70	None	replace
361	[BUG]  [BUGGY]  double  nid  =  header.readUnsignedByte();  NoClassDefFoundError  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  double  nid  =  header.readUnsignedByte();  NoClassDefFoundError  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	double    nid    =    header.readUnsignedByte();    NoClassDefFoundError  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	3	None	add
362	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(fileName,  header,  archive);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(fileName,  header,  archive);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(fileName,  header,  archive);	  int    nid    =    header.readUnsignedByte(header,    archive);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	28	None	replace
363	[BUG]  [BUGGY]  int  nid  =  receiver.readUnsignedByte();  [CE]  cannot  find  symbol  receiver  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  receiver.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  receiver.readUnsignedByte();	  int    nid    =    stream.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  receiver	74	None	replace
364	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte(header);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedByte(header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  header.readUnsignedByte(header);	  Integer    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	25	None	replace
365	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte(0);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedByte(0);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  header.readUnsignedByte(0);	  Integer    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	25	None	replace
366	[BUG]  [BUGGY]  byte  nid  =  header.readUnsignedByte(2);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  byte  nid  =  header.readUnsignedByte(2);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	byte  nid  =  header.readUnsignedByte(2);	  byte    nid    =    header.readUnsignedByte(0);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	37	None	replace
367	[BUG]  [BUGGY]  int  nid  =  this.header.readUnsignedInt(numPackStreams);  [CE]  cannot  find  symbol  header  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  this.header.readUnsignedInt(numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  this.header.readUnsignedInt(numPackStreams);	  int    nid    =    this.header.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol  header	33	None	replace
368	[BUG]  [BUGGY]  int  nid  =  this.header.readUnsignedInt()  +  1;  [CE]  cannot  find  symbol  header  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  this.header.readUnsignedInt()  +  1;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  this.header.readUnsignedInt()  +  1;	  int    nid    =    this.header.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol  header	33	None	replace
369	[BUG]  [BUGGY]  int  nid  =  this.header.readUnsignedInt(0);  [CE]  cannot  find  symbol  header  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  this.header.readUnsignedInt(0);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  this.header.readUnsignedInt(0);	  int    nid    =    this.header.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol  header	33	None	replace
370	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  Float  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  Float  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer    nid    =    header.readUnsignedByte();    Float  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	24	None	add
371	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte());  [CE]  ';'  expected  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte());  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer    nid    =    header.readUnsignedByte();    Integer  nid  =  header.readUnsignedByte());	  	non-compiled	[CE]  ';'  expected	24	None	add
372	[BUG]  [BUGGY]  int  nid  =  stream.readUnsignedInt();  [CE]  cannot  find  symbol  stream  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  stream.readUnsignedInt();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  stream.readUnsignedInt();	  int    nid    =    inputStreamStack.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol  stream	32	None	replace
373	[BUG]  [BUGGY]  Long  nid  =  header.readUnsignedByte(numPackStreams);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Long  nid  =  header.readUnsignedByte(numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Long  nid  =  header.readUnsignedByte(numPackStreams);	  Long    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	5	None	replace
374	[BUG]  [BUGGY]  int  nid  =  archive.readUnsignedByte()  +  headerSize;  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.readUnsignedByte()  +  headerSize;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.readUnsignedByte()  +  headerSize;	  int    nid    =    archive.readUnsignedByte()    +    header;    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
375	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte()  +  archive.body;  [CE]  cannot  find  symbol  body  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte()  +  archive.body;  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte()  +  archive.body;	  int    nid    =    archive.readUnsignedByte()    +    header;    	non-compiled	[CE]  cannot  find  symbol  body	53	None	replace
376	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte(numPackStreams);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedByte(numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  header.readUnsignedByte(numPackStreams);	  Integer    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	25	None	replace
377	[BUG]  [BUGGY]  Integer  nid  =  header.readEndByte();  [CE]  cannot  find  symbol  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readEndByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  header.readEndByte();	  Integer    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
378	[BUG]  [BUGGY]  int  nid  =  archive.bytes.getUnsignedByte();  [CE]  cannot  find  symbol  bytes  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  archive.bytes.getUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  archive.bytes.getUnsignedByte();	  int    nid    =    archive.getUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  bytes	10	None	replace
379	[BUG]  [BUGGY]  Int  nid  =  archive.bytes.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Int  nid  =  archive.bytes.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Int  nid  =  archive.bytes.readUnsignedByte();	  int    nid    =    archive.bytes.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
380	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  Inte  nid  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  Inte  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  header.readUnsignedByte();  Inte  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    Inte    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
381	[BUG]  [BUGGY]  Int  nid  =  this.header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Int  nid  =  this.header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Int  nid  =  this.header.readUnsignedByte();	  Int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
382	[BUG]  [BUGGY]  byte  nid  =  header.readUnsignedByte();  int  numPackStreams  =  header.readUnsignedByte();  [CE]  possible  loss  of  precision  [FE]        IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  byte  nid  =  header.readUnsignedByte();  int  numPackStreams  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	byte  nid  =  header.readUnsignedByte();  int  numPackStreams  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    int    numPackStreams    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  possible  loss  of  precision	59	None	replace
383	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(inputStreamPos,  header);  [CE]  cannot  find  symbol  inputStreamPos  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(inputStreamPos,  header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(inputStreamPos,  header);	  int    nid    =    header.readUnsignedByte(length,    header);    	non-compiled	[CE]  cannot  find  symbol  inputStreamPos	67	None	replace
384	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  byte  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]            IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  byte  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  header.readUnsignedByte();  byte  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    byte    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	40	None	replace
385	[BUG]  [BUGGY]  Int  nid  =  header.readUnsignedByte();  byte  nid  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Int  nid  =  header.readUnsignedByte();  byte  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Int  nid  =  header.readUnsignedByte();  byte  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    byte    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
386	[BUG]  [BUGGY]  int  nid  =  file.readUnsignedByte();  byte  nid  =  file.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]    EOFException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  file.readUnsignedByte();  byte  nid  =  file.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int    nid    =    file.readUnsignedByte();    byte  nid  =  file.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	13	None	add
387	[BUG]  [BUGGY]  Int  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Int  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Int  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
388	[BUG]  [BUGGY]  Integer  nid  =  readAllOrBits(header,  (int)numPackStreams,  archive.deferredBlockStreams);  [CE]  cannot  find  symbol  deferredBlockStreams  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readAllOrBits(header,  (int)numPackStreams,  archive.deferredBlockStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readAllOrBits(header,  (int)numPackStreams,  archive.deferredBlockStreams);	  Integer    nid    =    readAllOrBits(header,    (int)numPackStreams);    	non-compiled	[CE]  cannot  find  symbol  deferredBlockStreams	46	None	replace
389	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  archive.numPackStreams);  [CE]  cannot  find  symbol  numPackStreams  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUint64(header,  archive.numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readUint64(header,  archive.numPackStreams);	  Integer    nid    =    readUint64(header);    	non-compiled	[CE]  cannot  find  symbol  numPackStreams	47	None	replace
390	[BUG]  [BUGGY]  byte  nid  =  header.readUnsignedByte();  int  nid  =  header.readUnsignedByte();  [CE]  possible  loss  of  precision  [FE]        IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  byte  nid  =  header.readUnsignedByte();  int  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	byte  nid  =  header.readUnsignedByte();  int  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    int    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  possible  loss  of  precision	38	None	replace
391	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedInt(inputStreamStack,  header);  [CE]  cannot  find  symbol  inputStreamStack  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedInt(inputStreamStack,  header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedInt(inputStreamStack,  header);	  int    nid    =    header.readUnsignedInt(header);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	57	None	replace
392	[BUG]  [BUGGY]  int  nid  =  this.currentFolderInputStream.readUnsignedByte(header,  numPackStreams);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  this.currentFolderInputStream.readUnsignedByte(header,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  this.currentFolderInputStream.readUnsignedByte(header,  numPackStreams);	  int    nid    =    inputStreamStack.readUnsignedByte(header,    numPackStreams);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
393	[BUG]  [BUGGY]  int  nid  =  inputStreamStack.readUnsignedByte(header,  archive);  [CE]  cannot  find  symbol  inputStreamStack  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  inputStreamStack.readUnsignedByte(header,  archive);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  inputStreamStack.readUnsignedByte(header,  archive);	  int    nid    =    header.readUnsignedByte(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	28	None	replace
394	[BUG]  [BUGGY]  long  nid  =  header.readUnsignedInt();  [CE]  cannot  find  symbol  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  long  nid  =  header.readUnsignedInt();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	long  nid  =  header.readUnsignedInt();	  long    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
395	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(source,  header);  [CE]  cannot  find  symbol  source  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(source,  header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(source,  header);	  int    nid    =    header.readUnsignedByte(inputStreamStack,    header);    	non-compiled	[CE]  cannot  find  symbol  source	30	None	replace
396	[BUG]  [BUGGY]  Integer  nid  =  readUnsignedByte(header.readUnsignedByte());  [CE]  cannot  find  symbol  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readUnsignedByte(header.readUnsignedByte());  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readUnsignedByte(header.readUnsignedByte());	  Integer    nid    =    readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
397	[BUG]  [BUGGY]  Int  nid  =  archive.packPos.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Int  nid  =  archive.packPos.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Int  nid  =  archive.packPos.readUnsignedByte();	  int    nid    =    archive.packPos.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
398	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(length);  [CE]  cannot  find  symbol  length  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(length);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(length);	  int    nid    =    header.readUnsignedByte(packPos);    	non-compiled	[CE]  cannot  find  symbol  length	31	None	replace
399	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(data,  fileName,  header);  [CE]  cannot  find  symbol  data  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(data,  fileName,  header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(data,  fileName,  header);	  int    nid    =    header.readUnsignedByte(fileName,    header);    	non-compiled	[CE]  cannot  find  symbol  data	63	None	replace
400	[BUG]  [BUGGY]  int  nid  =  inputStreamStack.readUnsignedByte(fileName,  header);  [CE]  cannot  find  symbol  inputStreamStack  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  inputStreamStack.readUnsignedByte(fileName,  header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  inputStreamStack.readUnsignedByte(fileName,  header);	  int    nid    =    header.readUnsignedByte(fileName,    header);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	63	None	replace
401	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(length,  header,  numPackStreams);  [CE]  cannot  find  symbol  length  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(length,  header,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(length,  header,  numPackStreams);	  int    nid    =    header.readUnsignedByte(header,    numPackStreams);    	non-compiled	[CE]  cannot  find  symbol  length	17	None	replace
402	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(header,  numPackStreams,  0);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(header,  numPackStreams,  0);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(header,  numPackStreams,  0);	  int    nid    =    header.readUnsignedByte(header,    numPackStreams);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	17	None	replace
403	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(currentFolderIndex,  header,  numPackStreams);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(currentFolderIndex,  header,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(currentFolderIndex,  header,  numPackStreams);	  int    nid    =    header.readUnsignedByte(header,    numPackStreams);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	17	None	replace
404	[BUG]  [BUGGY]  byte  nid  =  header.readUnsignedByte(length,  header);  [CE]  cannot  find  symbol  length  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  byte  nid  =  header.readUnsignedByte(length,  header);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	byte  nid  =  header.readUnsignedByte(length,  header);	  byte    nid    =    header.readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol  length	29	None	replace
405	[BUG]  [BUGGY]  int  nid  =  inputStreamStack.readUnsignedByte(header,  archive.packPos);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  inputStreamStack.readUnsignedByte(header,  archive.packPos);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  inputStreamStack.readUnsignedByte(header,  archive.packPos);	  int    nid    =    header.readUnsignedByte(header,    archive.packPos);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	65	None	replace
406	[BUG]  [BUGGY]  Int  nid  =  archive.bytesReadUnsignedByte();  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Int  nid  =  archive.bytesReadUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Int  nid  =  archive.bytesReadUnsignedByte();	  int    nid    =    archive.bytesReadUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
407	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte()  +  1;  Integer  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)  [FE]          IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte()  +  1;  Integer  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte()  +  1;  Integer  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    Integer    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readPackInfo(DataInput,Archive)	39	None	replace
408	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  nid  [FE]            IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte()    +    1;    Integer    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol  nid	39	None	replace
409	[BUG]  [BUGGY]  int  nid  =  readUint64(header,  archive.numPackStreams);  [CE]  cannot  find  symbol  numPackStreams  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  readUint64(header,  archive.numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  readUint64(header,  archive.numPackStreams);	  int    nid    =    readUint64(header,    numPackStreams);    	non-compiled	[CE]  cannot  find  symbol  numPackStreams	70	None	replace
410	[BUG]  [BUGGY]  int  nid  =  readUint64(header,  numPackStreams,  archive.packPos);  [CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  readUint64(header,  numPackStreams,  archive.packPos);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  readUint64(header,  numPackStreams,  archive.packPos);	  int    nid    =    readUint64(header,    numPackStreams);    	non-compiled	[CE]  method  readUint64  in  class  SevenZFile  cannot  be  applied  to  given  types;	70	None	replace
411	[BUG]  [BUGGY]  int  nid  =  source.readUnsignedByte(header,  numPackStreams);  [CE]  cannot  find  symbol  source  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  source.readUnsignedByte(header,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  source.readUnsignedByte(header,  numPackStreams);	  int    nid    =    header.readUnsignedByte(packPos,    numPackStreams);    	non-compiled	[CE]  cannot  find  symbol  source	22	None	replace
412	[BUG]  [BUGGY]  char  nid  =  header.readUnsignedByte();  [CE]  possible  loss  of  precision  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  char  nid  =  header.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	char  nid  =  header.readUnsignedByte();	  String    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  possible  loss  of  precision	66	None	replace
413	[BUG]  [BUGGY]  int  nid  =  this.in.readUnsignedByte();  [CE]  cannot  find  symbol  in  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  this.in.readUnsignedByte();  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  this.in.readUnsignedByte();	  int    nid    =    archive.in.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  in	9	None	replace
414	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(currentFolderIndex,  SIGNATURE_HEADER_SIZE,  numPackStreams);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(currentFolderIndex,  SIGNATURE_HEADER_SIZE,  numPackStreams);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(currentFolderIndex,  SIGNATURE_HEADER_SIZE,  numPackStreams);	  int    nid    =    header.readUnsignedByte(currentFolderIndex,    numPackStreams);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	20	None	replace
415	[BUG]  [BUGGY]  Integer  nid  =  readAllOrBits(header,  numPackStreams,  _packPos);  [CE]  cannot  find  symbol  _packPos  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readAllOrBits(header,  numPackStreams,  _packPos);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readAllOrBits(header,  numPackStreams,  _packPos);	  Integer    nid    =    readAllOrBits(header,    numPackStreams);    	non-compiled	[CE]  cannot  find  symbol  _packPos	49	None	replace
416	[BUG]  [BUGGY]  Integer  nid  =  readAllOrBits(header,  numPackStreams,  numHeaderSize);  [CE]  cannot  find  symbol  numHeaderSize  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readAllOrBits(header,  numPackStreams,  numHeaderSize);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readAllOrBits(header,  numPackStreams,  numHeaderSize);	  Integer    nid    =    readAllOrBits(header,    numPackStreams);    	non-compiled	[CE]  cannot  find  symbol  numHeaderSize	49	None	replace
417	[BUG]  [BUGGY]  Integer  nid  =  readAllOrBits(header,  numPackStreams,  null);  [CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  Integer  nid  =  readAllOrBits(header,  numPackStreams,  null);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	Integer  nid  =  readAllOrBits(header,  numPackStreams,  null);	  Integer    nid    =    readAllOrBits(header,    numPackStreams);    	non-compiled	[CE]  method  readAllOrBits  in  class  SevenZFile  cannot  be  applied  to  given  types;	49	None	replace
418	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(length,  0);  [CE]  cannot  find  symbol  length  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  header.readUnsignedByte(length,  0);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  header.readUnsignedByte(length,  0);	  int    nid    =    header.readUnsignedByte(header,    0);    	non-compiled	[CE]  cannot  find  symbol  length	61	None	replace
419	[BUG]  [BUGGY]  int  nid  =  inputStreamStack.readUnsignedByte(header,  0);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);      [BUGGY]  int  nid  =  inputStreamStack.readUnsignedByte(header,  0);  [BUGGY]      if  (nid  ==  NID.kSize)  {  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	348	348	12	replace	int  nid  =  inputStreamStack.readUnsignedByte(header,  0);	  int    nid    =    header.readUnsignedByte(header,    0);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	61	None	replace
