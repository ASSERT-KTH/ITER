bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  nid  =  archive.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  archive.readUnsignedByte();  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  archive.readUnsignedByte();	  nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
2	[BUG]  [BUGGY]  nid  =  inputStreamStack.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  inputStreamStack.readUnsignedByte();  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  inputStreamStack.readUnsignedByte();	  nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
3	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  header.readUnsignedByte()  +  1;	  nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
4	[BUG]  [BUGGY]  nid  =  source.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  source.readUnsignedByte();  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  source.readUnsignedByte();	  nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
5	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    	compilable	  [FE]  EOFException  	45	12	replace
6	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd)  {  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    	compilable	  [FE]  EOFException  	45	12	replace
7	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    	compilable	  [FE]  NoClassDefFoundError  	45	12	replace
8	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd)  {  [FE]  NoClassDefFoundError  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kEnd)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    	compilable	  [FE]  NoClassDefFoundError  	45	12	replace
9	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    	compilable	  [FE]  EOFException  	45	12	replace
10	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    	compilable	  [FE]  EOFException  	45	12	replace
11	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    NID.kEnd)    {    if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
12	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    NID.kEnd)    {    if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
13	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  >>  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  >>  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    NID.kEnd)    {    if(nid  ==  NID.kSubStreamsInfo  ||  nid  >>  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
14	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  If(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  [CE]  ';'  expected  [FE]          NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  If(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    NID.kEnd)    {    If(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {	  	non-compiled	[CE]  ';'  expected	31	None	add
15	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    NID.kEnd)    {    if(nid!=  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
16	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  if(nid  >=  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  if(nid  >=  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    NID.kEnd)    {    if(nid  >=  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
17	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(currentFolderIndex  ==  SIGNATURE_HEADER_SIZE  ||  currentFolderIndex  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(currentFolderIndex  ==  SIGNATURE_HEADER_SIZE  ||  currentFolderIndex  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	25	12	replace
18	[BUG]  [BUGGY]  if(currentFolderIndex  ==  SIGNATURE_HEADER_SIZE  ||  currentFolderIndex  ==  NID.kSubStreamsInfo)  {  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(currentFolderIndex  ==  SIGNATURE_HEADER_SIZE  ||  currentFolderIndex  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(currentFolderIndex  ==  SIGNATURE_HEADER_SIZE  ||  currentFolderIndex  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	25	12	replace
19	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	25	12	replace
20	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [FE]  EOFException  [FE]          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	25	12	replace
21	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	25	12	replace
22	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [FE]  NoClassDefFoundError  [FE]            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	25	12	replace
23	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kEnd)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
24	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kEnd)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
25	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]        EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kEnd)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
26	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kEnd)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
27	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kEnd)    {    if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
28	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kEnd)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
29	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kEnd)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
30	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]                  EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kEnd)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
31	[BUG]  [BUGGY]  [FE]  EOFException  [FE]              EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {	  if(nid!=    NID.kSubStreamsInfo)    {    if(nid!=    NID.kSubStreamsInfo    ||    nid!=    NID.kEnd)    {    	compilable	  [FE]  EOFException  	21	12	replace
32	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  [FE]  EOFException  [FE]              EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {	  if(nid!=    NID.kSubStreamsInfo)    {    if(nid!=    NID.kSubStreamsInfo    ||    nid!=    NID.kEnd)    {    	compilable	  [FE]  EOFException  	21	12	replace
33	[BUG]  [BUGGY]  [FE]  EOFException  [FE]                EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kUnpackInfo  ||  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  NID.kUnpackInfo  ||  nid!=  NID.kEnd)  {	  if(nid!=    NID.kSubStreamsInfo)    {    if(nid!=    NID.kSubStreamsInfo    ||    nid!=    NID.kEnd)    {    	compilable	  [FE]  EOFException  	21	12	replace
34	[BUG]  [BUGGY]  if(nid!=  NID.kUnpackInfo  ||  nid!=  NID.kEnd)  {  [FE]  EOFException  [FE]                EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kUnpackInfo  ||  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kUnpackInfo  ||  nid!=  NID.kEnd)  {	  if(nid!=    NID.kSubStreamsInfo)    {    if(nid!=    NID.kSubStreamsInfo    ||    nid!=    NID.kEnd)    {    	compilable	  [FE]  EOFException  	21	12	replace
35	[BUG]  [BUGGY]  [FE]  EOFException  [FE]                  EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kSubStreamsInfo)    {    if(nid!=    NID.kSubStreamsInfo    ||    nid!=    NID.kEnd)    {    	compilable	  [FE]  EOFException  	21	12	replace
36	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [FE]  EOFException  [FE]                  EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kSubStreamsInfo)    {    if(nid!=    NID.kSubStreamsInfo    ||    nid!=    NID.kEnd)    {    	compilable	  [FE]  EOFException  	21	12	replace
37	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo;  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  NID.kUnpackInfo;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  NID.kUnpackInfo;	  nid    =    NID.kEnd;    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
38	[BUG]  [BUGGY]  nid  =  NID.kInt;  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  NID.kInt;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  NID.kInt;	  nid    =    NID.kEnd;    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
39	[BUG]  [BUGGY]  nid  =  NID.kEnd  +  1;  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  NID.kEnd  +  1;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  NID.kEnd  +  1;	  nid    =    NID.kEnd;    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
40	[BUG]  [BUGGY]  nid  =  NID.kUnpack();  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  NID.kUnpack();  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  NID.kUnpack();	  nid    =    NID.kEnd;    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
41	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  NID.kUnpackInfo  +  1;	  nid    =    NID.kEnd;    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
42	[BUG]  [BUGGY]  nid  =  NID.kUnpackInt;  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  NID.kUnpackInt;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  NID.kUnpackInt;	  nid    =    NID.kEnd;    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
43	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	76	12	replace
44	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	76	12	replace
45	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	76	12	replace
46	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	76	12	replace
47	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  NID.kUnpackInfo  ||  nid!=  NID.kEnd)  {	  if(nid    ==    NID.kUnpackInfo)    {    if(nid    ==    NID.kUnpackInfo    ||    nid!=    NID.kEnd)    {    	compilable	  [FE]  NoClassDefFoundError  	84	12	replace
48	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid!=  NID.kEnd)  {  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kUnpackInfo  ||  nid!=  NID.kEnd)  {	  if(nid    ==    NID.kUnpackInfo)    {    if(nid    ==    NID.kUnpackInfo    ||    nid!=    NID.kEnd)    {    	compilable	  [FE]  NoClassDefFoundError  	84	12	replace
49	[BUG]  [BUGGY]  [FE]  EOFException  [FE]            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {	  if(nid    ==    NID.kUnpackInfo)    {    if(nid    ==    NID.kUnpackInfo    ||    nid!=    NID.kEnd)    {    	compilable	  [FE]  EOFException  	84	12	replace
50	[BUG]  [BUGGY]  if(nid!=  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  [FE]  EOFException  [FE]            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {	  if(nid    ==    NID.kUnpackInfo)    {    if(nid    ==    NID.kUnpackInfo    ||    nid!=    NID.kEnd)    {    	compilable	  [FE]  EOFException  	84	12	replace
51	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	115	None	add
52	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE)    {    If(nid  <  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	115	None	add
53	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	115	None	add
54	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	115	None	add
55	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE)    {    if(nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	115	None	add
56	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEAder_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEAder_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEAder_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	115	None	add
57	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  If(nid!=  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]                  EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  If(nid!=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE)  {  If(nid!=  NID.kUnpackInfo)  {	  if(nid!=    NID.kUnpackInfo)    {    If(nid!=    NID.kUnpackInfo)    {    	non-compiled	[CE]  ';'  expected	63	None	replace
58	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid!=  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]                    EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid!=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid!=  NID.kUnpackInfo)  {	  if(nid!=    NID.kUnpackInfo)    {    If(nid!=    NID.kUnpackInfo)    {    	non-compiled	[CE]  ';'  expected	63	None	replace
59	[BUG]  [BUGGY]  If(nid!=  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]                      EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  If(nid!=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	If(nid!=  NID.kUnpackInfo)  {	  if(nid!=    NID.kUnpackInfo)    {    If(nid!=    NID.kUnpackInfo)    {    	non-compiled	[CE]  ';'  expected	63	None	replace
60	[BUG]  [BUGGY]  If(nid  ==  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]                        EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  If(nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	If(nid  ==  NID.kUnpackInfo)  {	  if(nid!=    NID.kUnpackInfo)    {    If(nid!=    NID.kUnpackInfo)    {    	non-compiled	[CE]  ';'  expected	63	None	replace
61	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]                          EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  NID.kUnpackInfo)  {	  if(nid!=    NID.kUnpackInfo)    {    If(nid!=    NID.kUnpackInfo)    {    	non-compiled	[CE]  ';'  expected	63	None	replace
62	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
63	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
64	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]        EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
65	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
66	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
67	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
68	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [CE]  ';'  expected  [FE]                EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  ';'  expected	44	None	add
69	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
70	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
71	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]        EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
72	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
73	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
74	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
75	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
76	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]                  EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  ';'  expected	89	None	add
77	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpack  ||  nid  ==  NID.kEnd)  {  [CE]  cannot  find  symbol  kUnpack  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kUnpack  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kUnpack  ||  nid  ==  NID.kEnd)  {	  if(nid    ==    NID.kUnpackInfo    ||    nid    ==    NID.kEnd)    {    	non-compiled	[CE]  cannot  find  symbol  kUnpack	11	None	replace
78	[BUG]  [BUGGY]  int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    int    nid    =    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  ';'  expected	97	None	replace
79	[BUG]  [BUGGY]  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    int    nid    =    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  ';'  expected	97	None	replace
80	[BUG]  [BUGGY]  Integer  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]              NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  Integer  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	Integer  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    int    nid    =    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  ';'  expected	97	None	replace
81	[BUG]  [BUGGY]  char  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]                NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  char  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	char  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    int    nid    =    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  ';'  expected	97	None	replace
82	[BUG]  [BUGGY]  byte  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]                  NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  byte  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	byte  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    int    nid    =    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  ';'  expected	97	None	replace
83	[BUG]  [BUGGY]  int  nid  =  SIGNATURE_HEADER_SIZE;  [CE]  illegal  start  of  type  [FE]        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  int  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	int  nid  =  SIGNATURE_HEADER_SIZE;	  if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    int    nid    =    SIGNATURE_HEADER_SIZE;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
84	[BUG]  [BUGGY]  Integer  nid  =  SIGNATURE_HEADER_SIZE;  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  Integer  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	Integer  nid  =  SIGNATURE_HEADER_SIZE;	  if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    int    nid    =    SIGNATURE_HEADER_SIZE;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
85	[BUG]  [BUGGY]  nid  =  SIGNATURE_HEADER_SIZE;  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  SIGNATURE_HEADER_SIZE;	  if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    int    nid    =    SIGNATURE_HEADER_SIZE;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
86	[BUG]  [BUGGY]  long  nid  =  SIGNATURE_HEADER_SIZE;  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  long  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	long  nid  =  SIGNATURE_HEADER_SIZE;	  if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    int    nid    =    SIGNATURE_HEADER_SIZE;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
87	[BUG]  [BUGGY]  if(nid  >=  NID.kEnd)  {  if(nid  >=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  NID.kEnd)  {  if(nid  >=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    >=    NID.kEnd)    {    if(nid  >=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
88	[BUG]  [BUGGY]  if(nid  >=  NID.kEnd)  {  if(nid!=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  NID.kEnd)  {  if(nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    >=    NID.kEnd)    {    if(nid!=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
89	[BUG]  [BUGGY]  if(nid  >=  NID.kEnd)  {  if(nid  >>  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]        EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  NID.kEnd)  {  if(nid  >>  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    >=    NID.kEnd)    {    if(nid  >>  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
90	[BUG]  [BUGGY]  if(nid  >=  NID.kEnd)  {  if(nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  NID.kEnd)  {  if(nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    >=    NID.kEnd)    {    if(nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
91	[BUG]  [BUGGY]  if(nid  >=  NID.kEnd)  {  If(nid  >=  NID.kEnd)  {  [CE]  ';'  expected  [FE]            EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  NID.kEnd)  {  If(nid  >=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    >=    NID.kEnd)    {    If(nid  >=  NID.kEnd)  {	  	non-compiled	[CE]  ';'  expected	111	None	add
92	[BUG]  [BUGGY]  if(nid  >=  NID.kEnd)  {  if(nid  [Delete]  NID.kEnd)  {  [CE]  ')'  expected  [FE]              EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  NID.kEnd)  {  if(nid  [Delete]  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    >=    NID.kEnd)    {    if(nid  [Delete]  NID.kEnd)  {	  	non-compiled	[CE]  ')'  expected	111	None	add
93	[BUG]  [BUGGY]  if(nid  >=  NID.kEnd)  {  if(nid  [BUGGY]  NID.kEnd)  {  [CE]  ')'  expected  [FE]                EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  NID.kEnd)  {  if(nid  [BUGGY]  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    >=    NID.kEnd)    {    if(nid  [BUGGY]  NID.kEnd)  {	  	non-compiled	[CE]  ')'  expected	111	None	add
94	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
95	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
96	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]        EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
97	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
98	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
99	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [CE]  ';'  expected  [FE]              EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  ';'  expected	40	None	add
100	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderIndex  +  1);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderIndex  +  1);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(currentFolderIndex  +  1);	  InputStream    inputStreamStack    =    getInputStreamStack(currentFolderIndex);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
101	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderIndex  -  1);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderIndex  -  1);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(currentFolderIndex  -  1);	  InputStream    inputStreamStack    =    getInputStreamStack(currentFolderIndex);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
102	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderIndex,  archive.folders);  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderIndex,  archive.folders);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(currentFolderIndex,  archive.folders);	  InputStream    inputStreamStack    =    getInputStreamStack(currentFolderIndex);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
103	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderIndex,  fileName);  [CE]  illegal  start  of  type  [FE]                                    NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderIndex,  fileName);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(currentFolderIndex,  fileName);	  InputStream    inputStreamStack    =    getInputStreamStack(currentFolderIndex);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
104	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderIndex,  nid);  [CE]  illegal  start  of  type  [FE]                                      NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderIndex,  nid);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(currentFolderIndex,  nid);	  InputStream    inputStreamStack    =    getInputStreamStack(currentFolderIndex);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
105	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(currentEntryIndex);  [CE]  illegal  start  of  type  [FE]                                        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(currentEntryIndex);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(currentEntryIndex);	  InputStream    inputStreamStack    =    getInputStreamStack(currentFolderIndex);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
106	[BUG]  [BUGGY]  InputStream  currentFolderInputStream  =  getInputStreamStack(currentFolderIndex);  [CE]  illegal  start  of  type  [FE]                                          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  InputStream  currentFolderInputStream  =  getInputStreamStack(currentFolderIndex);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	InputStream  currentFolderInputStream  =  getInputStreamStack(currentFolderIndex);	  InputStream    inputStreamStack    =    getInputStreamStack(currentFolderIndex);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
107	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSubStreamsInfo)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	130	None	add
108	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSubStreamsInfo)    {    If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  ';'  expected	130	None	add
109	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]        EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSubStreamsInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	130	None	add
110	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  UID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  UID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSubStreamsInfo)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  UID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	130	None	add
111	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSubStreamsInfo)    {    if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	130	None	add
112	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  List  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	List  <  String>  deferredBlockStreams  =  Lists.newArrayList();	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
113	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(archive.folders);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(archive.folders);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(archive.folders);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
114	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(length);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(length);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(length);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
115	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(fileName);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(fileName);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(fileName);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
116	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(0);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(0);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(0);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
117	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack()  /  SIGNATURE_HEADER_SIZE;  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack()  /  SIGNATURE_HEADER_SIZE;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	InputStream  inputStreamStack  =  getInputStreamStack()  /  SIGNATURE_HEADER_SIZE;	  InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
118	[BUG]  [BUGGY]  InputStream  nid  =  getInputStreamStack();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  InputStream  nid  =  getInputStreamStack();  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	InputStream  nid  =  getInputStreamStack();	  InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
119	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamSize();  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamSize();  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	InputStream  inputStreamStack  =  getInputStreamSize();	  InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
120	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(nid);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(nid);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(nid);	  InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
121	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack()  -  1;  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack()  -  1;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	InputStream  inputStreamStack  =  getInputStreamStack()  -  1;	  InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
122	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	128	None	add
123	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	128	None	add
124	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kEnd  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kEnd  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  NID.kEnd  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	128	None	add
125	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kEnd  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kEnd  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  NID.kEnd  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	128	None	add
126	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid!=  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	128	None	add
127	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]              EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    If(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	128	None	add
128	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	128	None	add
129	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	26	12	replace
130	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [FE]  EOFException  [FE]          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	26	12	replace
131	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	26	12	replace
132	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {  [FE]  NoClassDefFoundError  [FE]            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	26	12	replace
133	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	78	12	replace
134	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	78	12	replace
135	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  NID.kSubStreamsInfo  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	78	12	replace
136	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kSubStreamsInfo  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	78	12	replace
137	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	78	12	replace
138	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  EOFException  [FE]        NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	78	12	replace
139	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	78	12	replace
140	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [FE]  EOFException  [FE]          NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	78	12	replace
141	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]              NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  >=  NID.kUnpackInfo)  {	  if(nid    ==    NID.kUnpackInfo)    {    if(nid    >=    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	4	12	replace
142	[BUG]  [BUGGY]  if(nid  >=  NID.kUnpackInfo)  {  [FE]  NoClassDefFoundError  [FE]              NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  >=  NID.kUnpackInfo)  {	  if(nid    ==    NID.kUnpackInfo)    {    if(nid    >=    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	4	12	replace
143	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
144	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
145	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]        EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
146	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid  >>  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid  >>  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    if(nid  >>  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
147	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid  >=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid  >=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    if(nid!=  NID.kSubStreamsInfo  ||  nid  >=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
148	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  If(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [CE]  ';'  expected  [FE]              EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  If(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    If(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  ';'  expected	33	None	add
149	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
150	[BUG]  [BUGGY]  [FE]  EOFException  [FE]            EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kUnpackInfo  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  NID.kUnpackInfo  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid!=    NID.kUnpackInfo)    {    if(nid    ==    NID.kUnpackInfo)    {    	compilable	  [FE]  EOFException  	60	12	replace
151	[BUG]  [BUGGY]  if(nid!=  NID.kUnpackInfo  ||  nid  ==  NID.kUnpackInfo)  {  [FE]  EOFException  [FE]            EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kUnpackInfo  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kUnpackInfo  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid!=    NID.kUnpackInfo)    {    if(nid    ==    NID.kUnpackInfo)    {    	compilable	  [FE]  EOFException  	60	12	replace
152	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	39	12	replace
153	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	39	12	replace
154	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	39	12	replace
155	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	39	12	replace
156	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	39	12	replace
157	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]        EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	39	12	replace
158	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kEnd)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kEnd)    {    	compilable	  [FE]  NoClassDefFoundError  	92	12	replace
159	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kEnd)  {  [FE]  NoClassDefFoundError  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kEnd)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kEnd)    {    	compilable	  [FE]  NoClassDefFoundError  	92	12	replace
160	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kEnd)    {    	compilable	  [FE]  NoClassDefFoundError  	92	12	replace
161	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [FE]  NoClassDefFoundError  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kEnd)    {    	compilable	  [FE]  NoClassDefFoundError  	92	12	replace
162	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kEnd)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kEnd)    {    	compilable	  [FE]  NoClassDefFoundError  	92	12	replace
163	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kEnd)  {  [FE]  NoClassDefFoundError  [FE]        EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kEnd)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kEnd)    {    	compilable	  [FE]  NoClassDefFoundError  	92	12	replace
164	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]          EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kEnd)    {    	compilable	  [FE]  NoClassDefFoundError  	92	12	replace
165	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [FE]  NoClassDefFoundError  [FE]          EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kEnd)    {    	compilable	  [FE]  NoClassDefFoundError  	92	12	replace
166	[BUG]  [BUGGY]  [FE]  EOFException  [FE]            EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kEnd)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kEnd)    {    	compilable	  [FE]  EOFException  	92	12	replace
167	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kEnd)  {  [FE]  EOFException  [FE]            EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kEnd)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kEnd)    {    	compilable	  [FE]  EOFException  	92	12	replace
168	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
169	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
170	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  >>  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  >>  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  >>  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
171	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
172	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  [BUGGY]  SIGNATURE_HEADER_SIZE)  {  [CE]  ')'  expected  [FE]            EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  [BUGGY]  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  [BUGGY]  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ')'  expected	38	None	add
173	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  If(nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]              EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  If(nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE)    {    If(nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	38	None	add
174	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  +  1);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  +  1);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  +  1);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(fileName.length());    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
175	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  -  1);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  -  1);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  -  1);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(fileName.length());    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
176	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  -  2);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  -  2);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  -  2);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(fileName.length());    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
177	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  +  2);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  +  2);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  +  2);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(fileName.length());    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
178	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.length());  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.length());  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.length());	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(fileName.length());    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
179	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length(),  archive.folders);  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length(),  archive.folders);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length(),  archive.folders);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(fileName.length());    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
180	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	53	12	replace
181	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	53	12	replace
182	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	53	12	replace
183	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [FE]  EOFException  [FE]      NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	53	12	replace
184	[BUG]  [BUGGY]  if(nid!=  NID.kBlock)  {  [CE]  cannot  find  symbol  kBlock  [FE]                NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kBlock)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kBlock)  {	  if(nid    ==    NID.kBlock)    {    	non-compiled	[CE]  cannot  find  symbol  kBlock	86	None	replace
185	[BUG]  [BUGGY]  if(nid!=  NID.kEnd)  {  if(nid!=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kEnd)  {  if(nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kEnd)    {    if(nid!=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
186	[BUG]  [BUGGY]  if(nid!=  NID.kEnd)  {  if(nid  >=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kEnd)  {  if(nid  >=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kEnd)    {    if(nid  >=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
187	[BUG]  [BUGGY]  if(nid!=  NID.kEnd)  {  if(nid  >>  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kEnd)  {  if(nid  >>  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kEnd)    {    if(nid  >>  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
188	[BUG]  [BUGGY]  if(nid!=  NID.kEnd)  {  if(nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kEnd)  {  if(nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kEnd)    {    if(nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
189	[BUG]  [BUGGY]  if(nid!=  NID.kEnd)  {  If(nid!=  NID.kEnd)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kEnd)  {  If(nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kEnd)    {    If(nid!=  NID.kEnd)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
190	[BUG]  [BUGGY]  if(nid!=  NID.kEnd)  {  If(nid  >=  NID.kEnd)  {  [CE]  ';'  expected  [FE]              NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kEnd)  {  If(nid  >=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kEnd)    {    If(nid  >=  NID.kEnd)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
191	[BUG]  [BUGGY]  if(nid!=  NID.kStreamsInfo)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]        EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kStreamsInfo)  {	  if(nid!=    NID.kSubStreamsInfo)    {    if(nid!=    NID.kStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	123	None	replace
192	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  file.readUnsignedByte()  +  1;	  nid    =    file.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
193	[BUG]  [BUGGY]  nid  =  path.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  path.readUnsignedByte();  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  path.readUnsignedByte();	  nid    =    file.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
194	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  archive.peek();  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  InputStream  inputStreamStack  =  archive.peek();  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	InputStream  inputStreamStack  =  archive.peek();	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
195	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  currentFolderInputStream.peek();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  InputStream  inputStreamStack  =  currentFolderInputStream.peek();  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	InputStream  inputStreamStack  =  currentFolderInputStream.peek();	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
196	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  archive.inputStreamStack.peek();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  InputStream  inputStreamStack  =  archive.inputStreamStack.peek();  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	InputStream  inputStreamStack  =  archive.inputStreamStack.peek();	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
197	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  this.inputStreamStack.peek();  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  InputStream  inputStreamStack  =  this.inputStreamStack.peek();  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	InputStream  inputStreamStack  =  this.inputStreamStack.peek();	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
198	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  archive.files.peek();  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  InputStream  inputStreamStack  =  archive.files.peek();  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	InputStream  inputStreamStack  =  archive.files.peek();	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
199	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  header.peek();  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  InputStream  inputStreamStack  =  header.peek();  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	InputStream  inputStreamStack  =  header.peek();	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
200	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  archive.printInputStream(nid);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  InputStream  inputStreamStack  =  archive.printInputStream(nid);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	InputStream  inputStreamStack  =  archive.printInputStream(nid);	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
201	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.kUnpackInfo)    {    if(nid    ==    NID.kUnpackInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	83	12	replace
202	[BUG]  [BUGGY]  if(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  EOFException  [FE]        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.kUnpackInfo)    {    if(nid    ==    NID.kUnpackInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	83	12	replace
203	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  NID.kUnpackInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.kUnpackInfo)    {    if(nid    ==    NID.kUnpackInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	83	12	replace
204	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [FE]  EOFException  [FE]          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kUnpackInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.kUnpackInfo)    {    if(nid    ==    NID.kUnpackInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	83	12	replace
205	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    NID.kUnpackInfo)    {    if(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
206	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  NID.kEnd  ||  nid!=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  NID.kEnd  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    NID.kUnpackInfo)    {    if(nid  ==  NID.kEnd  ||  nid!=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
207	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]        EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    NID.kUnpackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
208	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  if(nid!=  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  if(nid!=  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    NID.kUnpackInfo)    {    if(nid!=  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
209	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  If(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]            EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  If(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    NID.kUnpackInfo)    {    If(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  ';'  expected	124	None	add
210	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  >=  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  >=  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    NID.kUnpackInfo)    {    if(nid  >=  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
211	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  NID.kEnd  ||  nid  >=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  NID.kEnd  ||  nid  >=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    NID.kUnpackInfo)    {    if(nid  ==  NID.kEnd  ||  nid  >=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
212	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
213	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	116	12	replace
214	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	116	12	replace
215	[BUG]  [BUGGY]  [FE]  EOFException  [FE]                    EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  >=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  NID.kSubStreamsInfo  ||  nid  >=  NID.kEnd)  {	  if(nid!=    NID.kSubStreamsInfo)    {    if(nid!=    NID.kSubStreamsInfo    ||    nid    >=    NID.kEnd)    {    	compilable	  [FE]  EOFException  	24	12	replace
216	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  >=  NID.kEnd)  {  [FE]  EOFException  [FE]                    EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  >=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  >=  NID.kEnd)  {	  if(nid!=    NID.kSubStreamsInfo)    {    if(nid!=    NID.kSubStreamsInfo    ||    nid    >=    NID.kEnd)    {    	compilable	  [FE]  EOFException  	24	12	replace
217	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    	compilable	  [FE]  EOFException  	90	12	replace
218	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    	compilable	  [FE]  EOFException  	90	12	replace
219	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	90	12	replace
220	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {  [FE]  NoClassDefFoundError  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	90	12	replace
221	[BUG]  [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  if(nid  >=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  if(nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    >=    NID.kSubStreamsInfo)    {    if(nid  >=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
222	[BUG]  [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  if(nid!=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  if(nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    >=    NID.kSubStreamsInfo)    {    if(nid!=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
223	[BUG]  [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    >=    NID.kSubStreamsInfo)    {    if(nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
224	[BUG]  [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  if(nid  >>  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  if(nid  >>  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    >=    NID.kSubStreamsInfo)    {    if(nid  >>  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
225	[BUG]  [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    >=    NID.kSubStreamsInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
226	[BUG]  [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  If(nid  >=  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]              NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  If(nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    >=    NID.kSubStreamsInfo)    {    If(nid  >=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  ';'  expected	102	None	add
227	[BUG]  [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  if(nid  >=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]                NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  if(nid  >=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    >=    NID.kSubStreamsInfo)    {    if(nid  >=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
228	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
229	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
230	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
231	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
232	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
233	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]              NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	52	None	add
234	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEaDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEaDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
235	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	114	12	replace
236	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	114	12	replace
237	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	114	12	replace
238	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	114	12	replace
239	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	114	12	replace
240	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]        EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	114	12	replace
241	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	114	12	replace
242	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	114	12	replace
243	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]            EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	114	12	replace
244	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]            EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	114	12	replace
245	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]              EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	114	12	replace
246	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]              EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	114	12	replace
247	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
248	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
249	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]        EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
250	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
251	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
252	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
253	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]                EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  ';'  expected	81	None	add
254	[BUG]  [BUGGY]  if(nid  ==  NID.kSize)  {  if(nid  ==  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSize)  {  if(nid  ==  NID.kSize)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kSize)    {    if(nid  ==  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
255	[BUG]  [BUGGY]  if(nid  ==  NID.kSize)  {  if(nid!=  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSize)  {  if(nid!=  NID.kSize)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kSize)    {    if(nid!=  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
256	[BUG]  [BUGGY]  if(nid  ==  NID.kSize)  {  if(nid  >=  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSize)  {  if(nid  >=  NID.kSize)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kSize)    {    if(nid  >=  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
257	[BUG]  [BUGGY]  if(nid  ==  NID.kSize)  {  If(nid  ==  NID.kSize)  {  [CE]  ';'  expected  [FE]          NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSize)  {  If(nid  ==  NID.kSize)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kSize)    {    If(nid  ==  NID.kSize)  {	  	non-compiled	[CE]  ';'  expected	87	None	add
258	[BUG]  [BUGGY]  if(nid  ==  NID.kSize)  {  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSize)  {  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kSize)    {    if(nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
259	[BUG]  [BUGGY]  if(nid  ==  NID.kSize)  {  if(nid  >>  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSize)  {  if(nid  >>  NID.kSize)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kSize)    {    if(nid  >>  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
260	[BUG]  [BUGGY]  if(nid!=  NID.kUnpack  ||  nid!=  NID.kEnd)  {  [CE]  cannot  find  symbol  kUnpack  [FE]        EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kUnpack  ||  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kUnpack  ||  nid!=  NID.kEnd)  {	  if(nid!=    NID.kUnpack)    {    	non-compiled	[CE]  cannot  find  symbol  kUnpack	35	None	replace
261	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpack)  {  [CE]  cannot  find  symbol  kUnpack  [FE]          EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpack)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpack)  {	  if(nid!=    NID.kUnpack)    {    	non-compiled	[CE]  cannot  find  symbol  kUnpack	35	None	replace
262	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSubStreamsInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
263	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]      NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSubStreamsInfo)    {    If(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  ';'  expected	75	None	add
264	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSubStreamsInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
265	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSubStreamsInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
266	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSubStreamsInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
267	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSubStreamsInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
268	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
269	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
270	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
271	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
272	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  ';'  expected	42	None	add
273	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
274	[BUG]  [BUGGY]  if(nid!=  NID.kInt)  {  [CE]  cannot  find  symbol  kInt  [FE]                NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kInt)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kInt)  {	  if(nid!=    NID.kStart)    {    	non-compiled	[CE]  cannot  find  symbol  kInt	73	None	replace
275	[BUG]  [BUGGY]  [FE]  EOFException  [FE]                  NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kSize)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  NID.kSize)  {	  if(nid!=    NID.kStart)    {    	compilable	  [FE]  EOFException  	73	12	replace
276	[BUG]  [BUGGY]  if(nid!=  NID.kSize)  {  [FE]  EOFException  [FE]                  NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kSize)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kSize)  {	  if(nid!=    NID.kStart)    {    	compilable	  [FE]  EOFException  	73	12	replace
277	[BUG]  [BUGGY]  if(nid!=  NID.kFolderSize)  {  [CE]  cannot  find  symbol  kFolderSize  [FE]                    NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kFolderSize)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kFolderSize)  {	  if(nid!=    NID.kStart)    {    	non-compiled	[CE]  cannot  find  symbol  kFolderSize	73	None	replace
278	[BUG]  [BUGGY]  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    If(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  ';'  expected	27	None	replace
279	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kStart)  {  [CE]  cannot  find  symbol  kStart  [FE]                  NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kStart)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kStart)  {	  if(nid    ==    NID.kUnpackInfo)    {    if(nid    ==    NID.kUnpackInfo    ||    nid    ==    NID.kStart)    {    	non-compiled	[CE]  cannot  find  symbol  kStart	6	None	replace
280	[BUG]  [BUGGY]  if(nid!=  NID.kUnpackInfo  ||  nid  ==  NID.kStart)  {  [CE]  cannot  find  symbol  kStart  [FE]                    NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kUnpackInfo  ||  nid  ==  NID.kStart)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kUnpackInfo  ||  nid  ==  NID.kStart)  {	  if(nid    ==    NID.kUnpackInfo)    {    if(nid    ==    NID.kUnpackInfo    ||    nid    ==    NID.kStart)    {    	non-compiled	[CE]  cannot  find  symbol  kStart	6	None	replace
281	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid!=  NID.kStart)  {  [CE]  cannot  find  symbol  kStart  [FE]                      NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid!=  NID.kStart)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kUnpackInfo  ||  nid!=  NID.kStart)  {	  if(nid    ==    NID.kUnpackInfo)    {    if(nid    ==    NID.kUnpackInfo    ||    nid    ==    NID.kStart)    {    	non-compiled	[CE]  cannot  find  symbol  kStart	6	None	replace
282	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
283	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	113	None	add
284	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
285	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
286	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
287	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
288	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
289	[BUG]  [BUGGY]  If(nid!=  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]                  EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  If(nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	If(nid!=  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kSubStreamsInfo)    {    If(nid!=    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  ';'  expected	23	None	replace
290	[BUG]  [BUGGY]  If(nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]                    EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  If(nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	If(nid  ==  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kSubStreamsInfo)    {    If(nid!=    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  ';'  expected	23	None	replace
291	[BUG]  [BUGGY]  ||(nid!=  NID.kSubStreamsInfo))  {  [CE]  illegal  start  of  expression  [FE]                      EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ||(nid!=  NID.kSubStreamsInfo))  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	||(nid!=  NID.kSubStreamsInfo))  {	  if(nid!=    NID.kSubStreamsInfo)    {    If(nid!=    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
292	[BUG]  [BUGGY]  if(nid  ==  NID.kBlockInfo)  {  [CE]  cannot  find  symbol  kBlockInfo  [FE]        EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kBlockInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kBlockInfo)  {	  if(nid!=    NID.kUnpackInfo)    {    if(nid!=    NID.kBlockInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kBlockInfo	117	None	replace
293	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	55	12	replace
294	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	55	12	replace
295	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	55	12	replace
296	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	55	12	replace
297	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	131	12	replace
298	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	131	12	replace
299	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kEnd)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	131	12	replace
300	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kEnd)  {  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kEnd)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	131	12	replace
301	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSubStreamsInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	131	12	replace
302	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSubStreamsInfo)  {  [FE]  NoClassDefFoundError  [FE]        EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSubStreamsInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	131	12	replace
303	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	131	12	replace
304	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	131	12	replace
305	[BUG]  [BUGGY]  [FE]  EOFException  [FE]            EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	131	12	replace
306	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [FE]  EOFException  [FE]            EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	131	12	replace
307	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE  [FE]        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid    ==    SIGNATURE_HEAFDER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE	121	None	replace
308	[BUG]  [BUGGY]  if(nid  ==  NID.kStart  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  kStart  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kStart  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kStart  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  kStart	129	None	replace
309	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	125	12	replace
310	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kUnpackInfo)  {  [FE]  NoClassDefFoundError  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	125	12	replace
311	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
312	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
313	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]        EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
314	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
315	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
316	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
317	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]                EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  ';'  expected	126	None	add
318	[BUG]  [BUGGY]  nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  not  a  statement  [FE]        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  not  a  statement	96	None	replace
319	[BUG]  [BUGGY]  ||  nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ||  nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	||  nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
320	[BUG]  [BUGGY]  nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [CE]  not  a  statement  [FE]            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  not  a  statement	96	None	replace
321	[BUG]  [BUGGY]  nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  not  a  statement  [FE]              NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  not  a  statement	96	None	replace
322	[BUG]  [BUGGY]  (nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo))  {  [CE]  not  a  statement  [FE]                NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  (nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo))  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo))  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  not  a  statement	96	None	replace
323	[BUG]  [BUGGY]  nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  not  a  statement  [FE]                  NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  not  a  statement	96	None	replace
324	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  NID.kUnpackInfo  ||  nid!=  NID.kUnpackInfo)  {	  if(nid!=    NID.kEnd)    {    	compilable	  [FE]  EOFException  	9	12	replace
325	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid!=  NID.kUnpackInfo)  {  [FE]  EOFException  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kUnpackInfo  ||  nid!=  NID.kUnpackInfo)  {	  if(nid!=    NID.kEnd)    {    	compilable	  [FE]  EOFException  	9	12	replace
326	[BUG]  [BUGGY]  If  (nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]              NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  If  (nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	If  (nid  ==  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    If    (nid    ==    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
327	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreams  ||  nid!=  NID.kEnd)  {  [CE]  cannot  find  symbol  kSubStreams  [FE]          EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kSubStreams  ||  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kSubStreams  ||  nid!=  NID.kEnd)  {	  if(nid!=    NID.kSubStreams)    {    	non-compiled	[CE]  cannot  find  symbol  kSubStreams	104	None	replace
328	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreams  ||  nid!=  NID.kUnpackInfo)  {  [CE]  cannot  find  symbol  kSubStreams  [FE]            EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kSubStreams  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kSubStreams  ||  nid!=  NID.kUnpackInfo)  {	  if(nid!=    NID.kSubStreams)    {    	non-compiled	[CE]  cannot  find  symbol  kSubStreams	104	None	replace
329	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreams  ||  nid  ==  NID.kEnd)  {  [CE]  cannot  find  symbol  kSubStreams  [FE]              EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kSubStreams  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kSubStreams  ||  nid  ==  NID.kEnd)  {	  if(nid!=    NID.kSubStreams)    {    	non-compiled	[CE]  cannot  find  symbol  kSubStreams	104	None	replace
330	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  <  NID.kSubStreamsInfo)  {	  if(nid    <    =    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	132	12	replace
331	[BUG]  [BUGGY]  if(nid  <  NID.kSubStreamsInfo)  {  [FE]  EOFException  [FE]        EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  NID.kSubStreamsInfo)  {	  if(nid    <    =    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	132	12	replace
332	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  <  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {	  if(nid    <    =    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	132	12	replace
333	[BUG]  [BUGGY]  if(nid  <  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [FE]  EOFException  [FE]          EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {	  if(nid    <    =    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	132	12	replace
334	[BUG]  [BUGGY]  [FE]  EOFException  [FE]            EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  NID.kSubStreamsInfo  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  <  NID.kSubStreamsInfo  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid    <    =    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	132	12	replace
335	[BUG]  [BUGGY]  if(nid  <  NID.kSubStreamsInfo  ||  nid  ==  NID.kUnpackInfo)  {  [FE]  EOFException  [FE]            EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  NID.kSubStreamsInfo  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  NID.kSubStreamsInfo  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid    <    =    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	132	12	replace
336	[BUG]  [BUGGY]  [FE]  EOFException  [FE]              EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  NID.kSubStreamsInfo  ||  nid  >  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  <  NID.kSubStreamsInfo  ||  nid  >  NID.kEnd)  {	  if(nid    <    =    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	132	12	replace
337	[BUG]  [BUGGY]  if(nid  <  NID.kSubStreamsInfo  ||  nid  >  NID.kEnd)  {  [FE]  EOFException  [FE]              EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  NID.kSubStreamsInfo  ||  nid  >  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  NID.kSubStreamsInfo  ||  nid  >  NID.kEnd)  {	  if(nid    <    =    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	132	12	replace
338	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kEnd)  {  [CE]  ';'  expected  [FE]                  EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kEnd)  {	  if    (nid    ==    NID.kEnd)    {    If    (nid    ==    NID.kEnd)    {    	non-compiled	[CE]  ';'  expected	51	None	replace
339	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kEnd)  {  [CE]  ';'  expected  [FE]                    EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kEnd)  {	  if    (nid    ==    NID.kEnd)    {    If    (nid    ==    NID.kEnd)    {    	non-compiled	[CE]  ';'  expected	51	None	replace
340	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]                      EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kUnpackInfo)  {	  if    (nid    ==    NID.kEnd)    {    If    (nid    ==    NID.kEnd)    {    	non-compiled	[CE]  ';'  expected	51	None	replace
341	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kEnd)  {  [CE]  ';'  expected  [FE]                        EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kEnd)  {	  if    (nid    ==    NID.kEnd)    {    If    (nid    ==    NID.kEnd)    {    	non-compiled	[CE]  ';'  expected	51	None	replace
342	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kUnpackInfo    ||    nid    ==    NID.kEnd)    {    if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
343	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  if(nid  ==  NID.kUnpackInfo  ||  nid!=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  if(nid  ==  NID.kUnpackInfo  ||  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kUnpackInfo    ||    nid    ==    NID.kEnd)    {    if(nid  ==  NID.kUnpackInfo  ||  nid!=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
344	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  if(nid!=  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]        EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  if(nid!=  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kUnpackInfo    ||    nid    ==    NID.kEnd)    {    if(nid!=  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
345	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  If(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  [CE]  ';'  expected  [FE]          EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  If(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kUnpackInfo    ||    nid    ==    NID.kEnd)    {    If(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
346	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  if(nid  ==  NID.kUnpackInfo  ||  nid  >=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  if(nid  ==  NID.kUnpackInfo  ||  nid  >=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kUnpackInfo    ||    nid    ==    NID.kEnd)    {    if(nid  ==  NID.kUnpackInfo  ||  nid  >=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
347	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  if(nid  >=  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  if(nid  >=  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kUnpackInfo    ||    nid    ==    NID.kEnd)    {    if(nid  >=  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
348	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kUnpackInfo)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    NID.kEnd)    {    	compilable	  [FE]  EOFException  	32	12	replace
349	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kUnpackInfo)  {  [FE]  EOFException  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kUnpackInfo)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    NID.kEnd)    {    	compilable	  [FE]  EOFException  	32	12	replace
350	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    NID.kEnd)    {    	compilable	  [FE]  EOFException  	32	12	replace
351	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [FE]  EOFException  [FE]      NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    NID.kEnd)    {    	compilable	  [FE]  EOFException  	32	12	replace
352	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  >=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  NID.kUnpackInfo  ||  nid  >=  NID.kEnd)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    NID.kEnd)    {    	compilable	  [FE]  EOFException  	32	12	replace
353	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  >=  NID.kEnd)  {  [FE]  EOFException  [FE]        NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  >=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kUnpackInfo  ||  nid  >=  NID.kEnd)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    NID.kEnd)    {    	compilable	  [FE]  EOFException  	32	12	replace
354	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders,  fileName);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders,  fileName);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders,  fileName);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(archive.folders);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
355	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders,  header);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders,  header);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders,  header);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(archive.folders);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
356	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders,  NID.kEnd);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders,  NID.kEnd);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders,  NID.kEnd);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(archive.folders);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
357	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders);  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(archive.folders);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
358	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders,  nid);  [CE]  illegal  start  of  type  [FE]                                    NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders,  nid);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders,  nid);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(archive.folders);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
359	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders,  files);  [CE]  illegal  start  of  type  [FE]                                      NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders,  files);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders,  files);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(archive.folders);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
360	[BUG]  [BUGGY]  nid  =  archive.folders.length  -  1;  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  archive.folders.length  -  1;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  archive.folders.length  -  1;	  nid    =    archive.folders.length;    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
361	[BUG]  [BUGGY]  nid  =  archive.folders.length  +  1;  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  archive.folders.length  +  1;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  archive.folders.length  +  1;	  nid    =    archive.folders.length;    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
362	[BUG]  [BUGGY]  nid  =  archive.folders.length  -  2;  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  archive.folders.length  -  2;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  archive.folders.length  -  2;	  nid    =    archive.folders.length;    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
363	[BUG]  [BUGGY]  nid  =  archive.folders.length  -  6;  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  archive.folders.length  -  6;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  archive.folders.length  -  6;	  nid    =    archive.folders.length;    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
364	[BUG]  [BUGGY]  nid  =  archive.folders.length  -  4;  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  archive.folders.length  -  4;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  archive.folders.length  -  4;	  nid    =    archive.folders.length;    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
365	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreams  ||  nid  ==  NID.kEnd)  {  [CE]  cannot  find  symbol  kSubStreams  [FE]            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreams  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kSubStreams  ||  nid  ==  NID.kEnd)  {	  if(nid    ==    NID.kSubStreams)    {    	non-compiled	[CE]  cannot  find  symbol  kSubStreams	12	None	replace
366	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreams  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  cannot  find  symbol  kSubStreams  [FE]              NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreams  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kSubStreams  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid    ==    NID.kSubStreams)    {    	non-compiled	[CE]  cannot  find  symbol  kSubStreams	12	None	replace
367	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
368	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
369	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
370	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
371	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders.length);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders.length);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders.length);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(folders.length);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
372	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(folders.length);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
373	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(folders.length  +  1);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(folders.length  +  1);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(folders.length  +  1);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(folders.length);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
374	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archivers.length);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archivers.length);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archivers.length);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(folders.length);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
375	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(folders.length);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(folders.length);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(folders.length);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(folders.length);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
376	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSize  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  NID.kSize  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid    ==    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	88	12	replace
377	[BUG]  [BUGGY]  if(nid  ==  NID.kSize  ||  nid  ==  NID.kUnpackInfo)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSize  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kSize  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid    ==    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	88	12	replace
378	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSubStreamsInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
379	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSubStreamsInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
380	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSubStreamsInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
381	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSubStreamsInfo)    {    if(nid  >>  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
382	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  If(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  If(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSubStreamsInfo)    {    If(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  ';'  expected	79	None	add
383	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSubStreamsInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
384	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    	compilable	  [FE]  EOFException  	34	12	replace
385	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kUnpackInfo)  {  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    	compilable	  [FE]  EOFException  	34	12	replace
386	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    	compilable	  [FE]  NoClassDefFoundError  	34	12	replace
387	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kUnpackInfo)  {  [FE]  NoClassDefFoundError  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    	compilable	  [FE]  NoClassDefFoundError  	34	12	replace
388	[BUG]  [BUGGY]  [FE]  EOFException  [FE]              EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(currentFolderIndex!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(currentFolderIndex!=  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.kEnd)    {    if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	49	12	replace
389	[BUG]  [BUGGY]  if(currentFolderIndex!=  SIGNATURE_HEADER_SIZE)  {  [FE]  EOFException  [FE]              EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(currentFolderIndex!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(currentFolderIndex!=  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.kEnd)    {    if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	49	12	replace
390	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]                EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(currentFolderIndex  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(currentFolderIndex  ==  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.kEnd)    {    if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	49	12	replace
391	[BUG]  [BUGGY]  if(currentFolderIndex  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]                EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(currentFolderIndex  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(currentFolderIndex  ==  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.kEnd)    {    if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	49	12	replace
392	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  +  1);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  +  1);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  +  1);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
393	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  +  2);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  +  2);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  +  2);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
394	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  +  7ZSignature);  [CE]  ')'  expected  [FE]                              NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  +  7ZSignature);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  +  7ZSignature);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  ')'  expected	69	None	replace
395	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
396	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpack)  {  [CE]  cannot  find  symbol  kUnpack  [FE]          EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpack)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpack)  {	  if(nid    ==    NID.kUnpack)    {    	non-compiled	[CE]  cannot  find  symbol  kUnpack	36	None	replace
397	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpack  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  kUnpack  [FE]            EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kUnpack  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kUnpack  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.kUnpack)    {    	non-compiled	[CE]  cannot  find  symbol  kUnpack	36	None	replace
398	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  <  NID.kUnpackInfo)  {	  if(nid    <    =    NID.kUnpackInfo)    {    	compilable	  [FE]  EOFException  	110	12	replace
399	[BUG]  [BUGGY]  if(nid  <  NID.kUnpackInfo)  {  [FE]  EOFException  [FE]        EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  NID.kUnpackInfo)  {	  if(nid    <    =    NID.kUnpackInfo)    {    	compilable	  [FE]  EOFException  	110	12	replace
400	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  <  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {	  if(nid    <    =    NID.kUnpackInfo)    {    	compilable	  [FE]  EOFException  	110	12	replace
401	[BUG]  [BUGGY]  if(nid  <  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  [FE]  EOFException  [FE]          EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {	  if(nid    <    =    NID.kUnpackInfo)    {    	compilable	  [FE]  EOFException  	110	12	replace
402	[BUG]  [BUGGY]  [FE]  EOFException  [FE]            EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  NID.kUnpackInfo  ||  nid  >  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  <  NID.kUnpackInfo  ||  nid  >  NID.kEnd)  {	  if(nid    <    =    NID.kUnpackInfo)    {    	compilable	  [FE]  EOFException  	110	12	replace
403	[BUG]  [BUGGY]  if(nid  <  NID.kUnpackInfo  ||  nid  >  NID.kEnd)  {  [FE]  EOFException  [FE]            EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  NID.kUnpackInfo  ||  nid  >  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  NID.kUnpackInfo  ||  nid  >  NID.kEnd)  {	  if(nid    <    =    NID.kUnpackInfo)    {    	compilable	  [FE]  EOFException  	110	12	replace
404	[BUG]  [BUGGY]  [FE]  EOFException  [FE]              EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  NID.kUnpackInfo  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  <  NID.kUnpackInfo  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid    <    =    NID.kUnpackInfo)    {    	compilable	  [FE]  EOFException  	110	12	replace
405	[BUG]  [BUGGY]  if(nid  <  NID.kUnpackInfo  ||  nid  ==  NID.kUnpackInfo)  {  [FE]  EOFException  [FE]              EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  NID.kUnpackInfo  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  NID.kUnpackInfo  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid    <    =    NID.kUnpackInfo)    {    	compilable	  [FE]  EOFException  	110	12	replace
406	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
407	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
408	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
409	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
410	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
411	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
412	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]                EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	54	None	add
413	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName,  archive.folders);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName,  archive.folders);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName,  archive.folders);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(fileName);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
414	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(SIGNATURE_HEADER_SIZE);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(fileName);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
415	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName,  NID.kEnd);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName,  NID.kEnd);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName,  NID.kEnd);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(fileName);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
416	[BUG]  [BUGGY]  if(nid  ==  NID.kLong)  {  [CE]  cannot  find  symbol  kLong  [FE]              NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kLong)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kLong)  {	  if(nid    ==    NID.kInt)    {    	non-compiled	[CE]  cannot  find  symbol  kLong	72	None	replace
417	[BUG]  [BUGGY]  nid  =  fileName.length()  +  1;  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  fileName.length()  +  1;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  fileName.length()  +  1;	  nid    =    fileName.length();    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
418	[BUG]  [BUGGY]  nid  =  header.length();  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  header.length();  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  header.length();	  nid    =    fileName.length();    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
419	[BUG]  [BUGGY]  nid  =  fileName.length()  +  2;  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  fileName.length()  +  2;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  fileName.length()  +  2;	  nid    =    fileName.length();    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
420	[BUG]  [BUGGY]  nid  =  fileName.length()  +  4;  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  fileName.length()  +  4;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  fileName.length()  +  4;	  nid    =    fileName.length();    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
421	[BUG]  [BUGGY]  nid  =  fileName.length()  *  2;  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  fileName.length()  *  2;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  fileName.length()  *  2;	  nid    =    fileName.length();    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
422	[BUG]  [BUGGY]  nid  =  sourceFileName.length();  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  sourceFileName.length();  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  sourceFileName.length();	  nid    =    fileName.length();    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
423	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	57	12	replace
424	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	57	12	replace
425	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	57	12	replace
426	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [FE]  EOFException  [FE]      NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	57	12	replace
427	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
428	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
429	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]        NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	56	None	add
430	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
431	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
432	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
433	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
434	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
435	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]        NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    If(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	77	None	add
436	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
437	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
438	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
439	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
440	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kInt)  {  [CE]  cannot  find  symbol  kInt  [FE]        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kInt)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kInt)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kStart)    {    	non-compiled	[CE]  cannot  find  symbol  kInt	98	None	replace
441	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kLong)  {  [CE]  cannot  find  symbol  kLong  [FE]          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kLong)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kLong)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kStart)    {    	non-compiled	[CE]  cannot  find  symbol  kLong	98	None	replace
442	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kFolderSize)  {  [CE]  cannot  find  symbol  kFolderSize  [FE]            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kFolderSize)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kFolderSize)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kStart)    {    	non-compiled	[CE]  cannot  find  symbol  kFolderSize	98	None	replace
443	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderInputStream);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderInputStream);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(currentFolderInputStream);	  InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
444	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(fileName);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(fileName);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(fileName);	  InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
445	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(currentFolder);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(currentFolder);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(currentFolder);	  InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
446	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.length)  {  [CE]  cannot  find  symbol  length  [FE]        EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.length)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.length)  {	  if(nid    ==    NID.length)    {    	non-compiled	[CE]  cannot  find  symbol  length	122	None	replace
447	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(header);  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  file.readUnsignedByte(header);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  file.readUnsignedByte(header);	  nid    =    file.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
448	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(0);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  file.readUnsignedByte(0);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  file.readUnsignedByte(0);	  nid    =    file.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
449	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsinfo)  {  [CE]  cannot  find  symbol  kSubStreamsinfo  [FE]          EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreamsinfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kSubStreamsinfo)  {	  if(nid!=    NID.kSubStreamsInfo)    {    if(nid!=    NID.kSubStreamsinfo)    {    	non-compiled	[CE]  cannot  find  symbol  kSubStreamsinfo	100	None	replace
450	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
451	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  int  nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  int  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE)    {    int  nid  <  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	115	None	add
452	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HeADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HeADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HeADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	115	None	add
453	[BUG]  [BUGGY]  if(nid!=  NID.kUnpack  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  kUnpack  [FE]        EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kUnpack  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kUnpack  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    NID.kUnpack)    {    	non-compiled	[CE]  cannot  find  symbol  kUnpack	35	None	replace
454	[BUG]  [BUGGY]  nid  =  NID.bytes;  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  NID.bytes;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  NID.bytes;	  nid    =    NID.kEnd;    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
455	[BUG]  [BUGGY]  nid  =  NID.kStart;  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  NID.kStart;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  NID.kStart;	  nid    =    NID.kEnd;    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
456	[BUG]  [BUGGY]  nid  =  NID.kUnpack;  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  NID.kUnpack;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  NID.kUnpack;	  nid    =    NID.kEnd;    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
457	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	128	None	add
458	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kLength)  {  [CE]  cannot  find  symbol  kLength  [FE]        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kLength)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kLength)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kStart)    {    	non-compiled	[CE]  cannot  find  symbol  kLength	98	None	replace
459	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kHeaderSize)  {  [CE]  cannot  find  symbol  kHeaderSize  [FE]          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kHeaderSize)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kHeaderSize)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kStart)    {    	non-compiled	[CE]  cannot  find  symbol  kHeaderSize	98	None	replace
460	[BUG]  [BUGGY]  if(nid!=  NID.kFolderInfo)  {  [CE]  cannot  find  symbol  kFolderInfo  [FE]            EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kFolderInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kFolderInfo)  {	  if(nid!=    NID.kBlockInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kFolderInfo	37	None	replace
461	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length-1);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length-1);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length-1);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
462	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length.length);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length.length);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length.length);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
463	[BUG]  [BUGGY]  if(nid  >=  NID.kEnd)  {  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  NID.kEnd)  {  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    >=    NID.kEnd)    {    if(nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
464	[BUG]  [BUGGY]  if(nid  >=  NID.kEnd)  {  if(nid  <  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  NID.kEnd)  {  if(nid  <  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    >=    NID.kEnd)    {    if(nid  <  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
465	[BUG]  [BUGGY]  if(nid  ==  NID.kStreams)  {  [CE]  cannot  find  symbol  kStreams  [FE]            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kStreams)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kStreams)  {	  if(nid    ==    NID.kSubStreams)    {    	non-compiled	[CE]  cannot  find  symbol  kStreams	12	None	replace
466	[BUG]  [BUGGY]  if(nid  ==  NID.kBlockStreams)  {  [CE]  cannot  find  symbol  kBlockStreams  [FE]              NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kBlockStreams)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kBlockStreams)  {	  if(nid    ==    NID.kSubStreams)    {    	non-compiled	[CE]  cannot  find  symbol  kBlockStreams	12	None	replace
467	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]                NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kFolder)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  NID.kFolder)  {	  if(nid    ==    NID.kSubStreams)    {    	compilable	  [FE]  NoClassDefFoundError  	12	12	replace
468	[BUG]  [BUGGY]  if(nid  ==  NID.kFolder)  {  [FE]  NoClassDefFoundError  [FE]                NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kFolder)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kFolder)  {	  if(nid    ==    NID.kSubStreams)    {    	compilable	  [FE]  NoClassDefFoundError  	12	12	replace
469	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName  +  1);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName  +  1);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName  +  1);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(fileName);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
470	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName,  inputStreamStack);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName,  inputStreamStack);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName,  inputStreamStack);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(fileName);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
471	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName  +  7ZSignature);  [CE]  ')'  expected  [FE]                          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName  +  7ZSignature);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName  +  7ZSignature);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(fileName);    	non-compiled	[CE]  ')'  expected	95	None	replace
472	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
473	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
474	[BUG]  [BUGGY]  if(fileName  ==  null)  {  if(nid!=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(fileName  ==  null)  {  if(nid!=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(fileName  ==  null)  {  if(nid!=  NID.kUnpackInfo)  {	  if(nid    ==    NID.kUnpackInfo)    {    if(nid!=    NID.kEnd)    {    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
475	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kUnpackInfo)  {	  if(nid    ==    NID.kUnpackInfo)    {    if(nid!=    NID.kEnd)    {    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
476	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kEnd)  {	  if(nid    ==    NID.kUnpackInfo)    {    if(nid!=    NID.kEnd)    {    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
477	[BUG]  [BUGGY]  int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    int    nid    =    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  ';'  expected	97	None	replace
478	[BUG]  [BUGGY]  Int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  Int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	Int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    int    nid    =    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  ';'  expected	97	None	replace
479	[BUG]  [BUGGY]  int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]              NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    int    nid    =    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  ';'  expected	97	None	replace
480	[BUG]  [BUGGY]  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    If(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  ';'  expected	27	None	replace
481	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	129	12	replace
482	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	129	12	replace
483	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(inputStreamStack);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(inputStreamStack);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(inputStreamStack);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
484	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithCapacity(archive.folders);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithCapacity(archive.folders);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithCapacity(archive.folders);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
485	[BUG]  [BUGGY]  NID  nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  NID  nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	NID  nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  ';'  expected	96	None	replace
486	[BUG]  [BUGGY]  if(nid  ==  NID.kSize)  {  int  nid  =  NID.kSize;  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSize)  {  int  nid  =  NID.kSize;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kSize)    {    int  nid  =  NID.kSize;	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
487	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	90	12	replace
488	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [FE]  NoClassDefFoundError  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	90	12	replace
489	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  if(nid    ==    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	88	12	replace
490	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  if(nid    ==    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	88	12	replace
491	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  if(nid    ==    NID.kSize)    {    	compilable	  [FE]  EOFException  	88	12	replace
492	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [FE]  EOFException  [FE]      NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  if(nid    ==    NID.kSize)    {    	compilable	  [FE]  EOFException  	88	12	replace
493	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderIndex  +  2);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderIndex  +  2);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(currentFolderIndex  +  2);	  InputStream    inputStreamStack    =    getInputStreamStack(currentFolderIndex);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
494	[BUG]  [BUGGY]  if(nid!=  NID.kStreams)  {  [CE]  cannot  find  symbol  kStreams  [FE]          EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kStreams)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kStreams)  {	  if(nid!=    NID.kSubStreams)    {    	non-compiled	[CE]  cannot  find  symbol  kStreams	104	None	replace
495	[BUG]  [BUGGY]  if(nid!=  NID.kBlockStreams)  {  [CE]  cannot  find  symbol  kBlockStreams  [FE]            EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kBlockStreams)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kBlockStreams)  {	  if(nid!=    NID.kSubStreams)    {    	non-compiled	[CE]  cannot  find  symbol  kBlockStreams	104	None	replace
496	[BUG]  [BUGGY]  [FE]  EOFException  [FE]              EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kFolder)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  NID.kFolder)  {	  if(nid!=    NID.kSubStreams)    {    	compilable	  [FE]  EOFException  	104	12	replace
497	[BUG]  [BUGGY]  if(nid!=  NID.kFolder)  {  [FE]  EOFException  [FE]              EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kFolder)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kFolder)  {	  if(nid!=    NID.kSubStreams)    {    	compilable	  [FE]  EOFException  	104	12	replace
498	[BUG]  [BUGGY]  Int  nid  =  SIGNATURE_HEADER_SIZE;  [CE]  illegal  start  of  type  [FE]        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  Int  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	Int  nid  =  SIGNATURE_HEADER_SIZE;	  if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    int    nid    =    SIGNATURE_HEADER_SIZE;    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
499	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	125	12	replace
500	[BUG]  [BUGGY]  if(nid!=  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  [FE]  NoClassDefFoundError  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	125	12	replace
501	[BUG]  [BUGGY]  if(nid  ==  NID.kStart  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  cannot  find  symbol  kStart  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kStart  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kStart  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    NID.kUnpackInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStart	125	None	replace
502	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  -  4);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  -  4);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  -  4);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(fileName.length());    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
503	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  *  2);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  *  2);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length()  *  2);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(fileName.length());    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
504	[BUG]  [BUGGY]  Integer  nid  =  inputStreamStack.peek();  [CE]  illegal  start  of  type  [FE]                  EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  Integer  nid  =  inputStreamStack.peek();  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	Integer  nid  =  inputStreamStack.peek();	  if(nid!=    NID.kSubStreamsInfo)    {    If(nid!=    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
505	[BUG]  [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  nid  >=  NID.kSubStreamsInfo)  {  [CE]  not  a  statement  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    >=    NID.kSubStreamsInfo)    {    nid  >=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  not  a  statement	102	None	add
506	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kUnpackInfo  ||  nid!=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kUnpackInfo  ||  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kUnpackInfo  ||  nid!=  NID.kEnd)  {	  if(nid    ==    NID.kUnpackInfo)    {    if(nid    ==    NID.kUnpackInfo    ||    nid!=    NID.kEnd)    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
507	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kUnpackInfo  ||  nid!=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kUnpackInfo  ||  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kUnpackInfo  ||  nid!=  NID.kEnd)  {	  if(nid    ==    NID.kUnpackInfo)    {    if(nid    ==    NID.kUnpackInfo    ||    nid!=    NID.kEnd)    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
508	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kStart)  {  [CE]  illegal  start  of  expression  [FE]                  NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kStart)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kStart)  {	  if(nid    ==    NID.kUnpackInfo)    {    if(nid    ==    NID.kUnpackInfo    ||    nid    ==    NID.kStart)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
509	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kStart)  {  [CE]  illegal  start  of  expression  [FE]                    NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kStart)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kStart)  {	  if(nid    ==    NID.kUnpackInfo)    {    if(nid    ==    NID.kUnpackInfo    ||    nid    ==    NID.kStart)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
510	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    NID.kEnd)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
511	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]                  NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	30	12	replace
512	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  [FE]  NoClassDefFoundError  [FE]                  NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	30	12	replace
513	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreams  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  kSubStreams  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreams  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kSubStreams  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  kSubStreams	78	None	replace
514	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    NID.kUnpackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
515	[BUG]  [BUGGY]  if(nid  ==  NID.kStreamsInfo)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]        EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kStreamsInfo)  {	  if(nid!=    NID.kSubStreamsInfo)    {    if(nid!=    NID.kStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	123	None	replace
516	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  not  a  statement  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  not  a  statement	81	None	add
517	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [CE]  ';'  expected  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kEnd)    {    If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {	  	non-compiled	[CE]  ';'  expected	91	None	add
518	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  NID.kSubStreamsInfo  ||  nid  >=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  <  NID.kSubStreamsInfo  ||  nid  >=  NID.kEnd)  {	  if(nid    <    =    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	132	12	replace
519	[BUG]  [BUGGY]  if(nid  <  NID.kSubStreamsInfo  ||  nid  >=  NID.kEnd)  {  [FE]  EOFException  [FE]        EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  NID.kSubStreamsInfo  ||  nid  >=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  NID.kSubStreamsInfo  ||  nid  >=  NID.kEnd)  {	  if(nid    <    =    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	132	12	replace
520	[BUG]  [BUGGY]  nid  =  fileName.substring(0,  fileName.length()  -  1);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  fileName.substring(0,  fileName.length()  -  1);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  fileName.substring(0,  fileName.length()  -  1);	  nid    =    fileName.length();    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
521	[BUG]  [BUGGY]  nid  =  fileName.substring(0,  fileName.length()  -  2);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  fileName.substring(0,  fileName.length()  -  2);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  fileName.substring(0,  fileName.length()  -  2);	  nid    =    fileName.length();    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
522	[BUG]  [BUGGY]  nid  =  fileName.length()  -  1;  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  fileName.length()  -  1;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  fileName.length()  -  1;	  nid    =    fileName.length();    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
523	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kUnpackInfo    ||    nid    ==    NID.kEnd)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
524	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  [CE]  not  a  statement  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kUnpackInfo    ||    nid    ==    NID.kEnd)    {    nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  not  a  statement	10	None	add
525	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  If(nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  If(nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE)    {    If(nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	38	None	add
526	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  not  a  statement  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  not  a  statement	42	None	add
527	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]      NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  ';'  expected	42	None	add
528	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  [CE]  >  expected  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSubStreamsInfo)    {    nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  >  expected	130	None	add
529	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackinfo)  {  [CE]  cannot  find  symbol  kUnpackinfo  [FE]                    EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kUnpackinfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kUnpackinfo)  {	  if(nid!=    NID.kUnpackInfo)    {    if(nid!=    NID.kUnpackinfo)    {    	non-compiled	[CE]  cannot  find  symbol  kUnpackinfo	64	None	replace
530	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd)  {  If(nid  ==  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]                NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kEnd)  {  If(nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kEnd)  {  If(nid  ==  NID.kUnpackInfo)  {	  if(nid    ==    NID.kUnpackInfo)    {    If(nid    ==    NID.kUnpackInfo)    {    	non-compiled	[CE]  ';'  expected	5	None	replace
531	[BUG]  [BUGGY]  if(nid!=  NID.kEnd)  {  If(nid  ==  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]                  NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kEnd)  {  If(nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kEnd)  {  If(nid  ==  NID.kUnpackInfo)  {	  if(nid    ==    NID.kUnpackInfo)    {    If(nid    ==    NID.kUnpackInfo)    {    	non-compiled	[CE]  ';'  expected	5	None	replace
532	[BUG]  [BUGGY]  if(nid!=  NID.kLength)  {  [CE]  cannot  find  symbol  kLength  [FE]                NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kLength)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kLength)  {	  if(nid!=    NID.kStart)    {    	non-compiled	[CE]  cannot  find  symbol  kLength	73	None	replace
533	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
534	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
535	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
536	[BUG]  [BUGGY]  if(fileName!=  null)  {  if  (nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]        EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(fileName!=  null)  {  if  (nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(fileName!=  null)  {  if  (nid  ==  NID.kUnpackInfo)  {	  if    (nid    ==    NID.kEnd)    {    if    (nid    ==    NID.kEnd)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
537	[BUG]  [BUGGY]  if(fileName  ==  null)  {  if  (nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]          EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(fileName  ==  null)  {  if  (nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(fileName  ==  null)  {  if  (nid  ==  NID.kUnpackInfo)  {	  if    (nid    ==    NID.kEnd)    {    if    (nid    ==    NID.kEnd)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
538	[BUG]  [BUGGY]  if(fileName!=  null)  {  if  (nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]            EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(fileName!=  null)  {  if  (nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(fileName!=  null)  {  if  (nid  ==  NID.kEnd)  {	  if    (nid    ==    NID.kEnd)    {    if    (nid    ==    NID.kEnd)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
539	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kStart)  {  [CE]  cannot  find  symbol  kStart  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kStart)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kStart)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStart	131	None	replace
540	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kBlockInfo)  {  [CE]  cannot  find  symbol  kBlockInfo  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kBlockInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kBlockInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kBlockInfo	131	None	replace
541	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  NID.kUnpackInfo  ||  nid  >=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  <  NID.kUnpackInfo  ||  nid  >=  NID.kEnd)  {	  if(nid    <    =    NID.kUnpackInfo)    {    	compilable	  [FE]  EOFException  	110	12	replace
542	[BUG]  [BUGGY]  if(nid  <  NID.kUnpackInfo  ||  nid  >=  NID.kEnd)  {  [FE]  EOFException  [FE]        EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  NID.kUnpackInfo  ||  nid  >=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  NID.kUnpackInfo  ||  nid  >=  NID.kEnd)  {	  if(nid    <    =    NID.kUnpackInfo)    {    	compilable	  [FE]  EOFException  	110	12	replace
543	[BUG]  [BUGGY]  nid  =  file.folders.length;  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  file.folders.length;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  file.folders.length;	  nid    =    archive.folders.length;    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
544	[BUG]  [BUGGY]  nid  =  archive.folders.length  *  2;  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  archive.folders.length  *  2;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  archive.folders.length  *  2;	  nid    =    archive.folders.length;    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
545	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
546	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kBlock)  {  [CE]  cannot  find  symbol  kBlock  [FE]                NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kBlock)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kBlock)  {	  if(nid    ==    NID.kBlock)    {    	non-compiled	[CE]  cannot  find  symbol  kBlock	86	None	replace
547	[BUG]  [BUGGY]  if(nid  ==  NID.kBlock  ||  nid  ==  NID.kEnd)  {  [CE]  cannot  find  symbol  kBlock  [FE]                  NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kBlock  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kBlock  ||  nid  ==  NID.kEnd)  {	  if(nid    ==    NID.kBlock)    {    	non-compiled	[CE]  cannot  find  symbol  kBlock	86	None	replace
548	[BUG]  [BUGGY]  if(nid  ==  NID.kBlock  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  kBlock  [FE]                    NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kBlock  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kBlock  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.kBlock)    {    	non-compiled	[CE]  cannot  find  symbol  kBlock	86	None	replace
549	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(0);  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  header.readUnsignedByte(0);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  header.readUnsignedByte(0);	  nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
550	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(files.length);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(files.length);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(files.length);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(folders.length);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
551	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(file.length);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(file.length);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(file.length);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(folders.length);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
552	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(folders.length,  fileName);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(folders.length,  fileName);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(folders.length,  fileName);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(folders.length);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
553	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders,  7ZSignature);  [CE]  ')'  expected  [FE]                            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders,  7ZSignature);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders,  7ZSignature);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(archive.folders);    	non-compiled	[CE]  ')'  expected	70	None	replace
554	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  file.peek();  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  InputStream  inputStreamStack  =  file.peek();  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	InputStream  inputStreamStack  =  file.peek();	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
555	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  archive.inputStreams.peek();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  InputStream  inputStreamStack  =  archive.inputStreams.peek();  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	InputStream  inputStreamStack  =  archive.inputStreams.peek();	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
556	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {	  if(nid    ==    NID.kUnpackInfo)    {    if(nid    ==    NID.kUnpackInfo    ||    nid    ==    NID.kEnd)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
557	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {	  if(nid    ==    NID.kUnpackInfo)    {    if(nid    ==    NID.kUnpackInfo    ||    nid    ==    NID.kEnd)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
558	[BUG]  [BUGGY]  if(currentFolderIndex!=  SIGNATURE_HEADER_SIZE)  {  if  (nid  ==  NID.kStart)  {  [CE]  illegal  start  of  expression  [FE]                EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(currentFolderIndex!=  SIGNATURE_HEADER_SIZE)  {  if  (nid  ==  NID.kStart)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(currentFolderIndex!=  SIGNATURE_HEADER_SIZE)  {  if  (nid  ==  NID.kStart)  {	  if    (nid    ==    NID.kEnd)    {    if    (nid    ==    NID.kStart)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
559	[BUG]  [BUGGY]  if(currentFolderIndex!=  SIGNATURE_HEADER_SIZE)  {  if  (nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]                  EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(currentFolderIndex!=  SIGNATURE_HEADER_SIZE)  {  if  (nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(currentFolderIndex!=  SIGNATURE_HEADER_SIZE)  {  if  (nid  ==  NID.kEnd)  {	  if    (nid    ==    NID.kEnd)    {    if    (nid    ==    NID.kStart)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
560	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(header!=  null)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(header!=  null)  {	  if    (nid    ==    NID.kEnd)    {    if    (nid    >=    NID.kEnd)    {    	compilable	  [FE]  EOFException  	47	12	replace
561	[BUG]  [BUGGY]  if(header!=  null)  {  [FE]  EOFException  [FE]          EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(header!=  null)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(header!=  null)  {	  if    (nid    ==    NID.kEnd)    {    if    (nid    >=    NID.kEnd)    {    	compilable	  [FE]  EOFException  	47	12	replace
562	[BUG]  [BUGGY]  nid  =  NID.kEnd  -  1;  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  NID.kEnd  -  1;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  NID.kEnd  -  1;	  nid    =    NID.kEnd;    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
563	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  <  NID.kEnd)  {	  if(nid    <    =    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	132	12	replace
564	[BUG]  [BUGGY]  if(nid  <  NID.kEnd)  {  [FE]  NoClassDefFoundError  [FE]        EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  NID.kEnd)  {	  if(nid    <    =    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	132	12	replace
565	[BUG]  [BUGGY]  if(nid  <  =  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]          EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  =  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  =  NID.kEnd)  {	  if(nid    <    =    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
566	[BUG]  [BUGGY]  if(nid  <  NID.kStart)  {  [CE]  cannot  find  symbol  kStart  [FE]            EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  NID.kStart)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  NID.kStart)  {	  if(nid    <    =    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStart	132	None	replace
567	[BUG]  [BUGGY]  if(nid  >>  NID.kSubStreamsInfo)  {  [CE]  incompatible  types  [FE]              EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >>  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  >>  NID.kSubStreamsInfo)  {	  if(nid    <    =    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  incompatible  types	132	None	replace
568	[BUG]  [BUGGY]  if(nid!=  NID.length)  {  [CE]  cannot  find  symbol  length  [FE]              EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.length)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.length)  {	  if(nid!=    NID.kUnpackInfo)    {    if(nid!=    NID.kEnd)    {    	non-compiled	[CE]  cannot  find  symbol  length	61	None	replace
569	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(0);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(0);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(0);	  InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
570	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack().length;  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack().length;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	InputStream  inputStreamStack  =  getInputStreamStack().length;	  InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
571	[BUG]  [BUGGY]  [FE]  EOFException  [FE]                  NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	30	12	replace
572	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {  [FE]  EOFException  [FE]                  NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	30	12	replace
573	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  NID.kStart  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  NID.kStart  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    NID.kUnpackInfo)    {    if(nid  ==  NID.kStart  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
574	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackinfo)  {  [CE]  illegal  start  of  expression  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackinfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    NID.kUnpackInfo)    {    if(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackinfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
575	[BUG]  [BUGGY]  if(nid.length  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [CE]  int  cannot  be  dereferenced  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid.length  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid.length  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	45	None	replace
576	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kStart)  {  [CE]  cannot  find  symbol  kStart  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kStart)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kStart)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    	non-compiled	[CE]  cannot  find  symbol  kStart	45	None	replace
577	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.files);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.files);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.files);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(archive.folders);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
578	[BUG]  [BUGGY]  [FE]  EOFException  [FE]                    EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  NID.kEnd)  {	  if(nid!=    NID.kSubStreamsInfo)    {    if(nid!=    NID.kSubStreamsInfo    ||    nid    >=    NID.kEnd)    {    	compilable	  [FE]  EOFException  	24	12	replace
579	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  NID.kEnd)  {  [FE]  EOFException  [FE]                    EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid  >=  NID.kEnd)  {	  if(nid!=    NID.kSubStreamsInfo)    {    if(nid!=    NID.kSubStreamsInfo    ||    nid    >=    NID.kEnd)    {    	compilable	  [FE]  EOFException  	24	12	replace
580	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	82	12	replace
581	[BUG]  [BUGGY]  if(nid!=  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	82	12	replace
582	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    	compilable	  [FE]  EOFException  	82	12	replace
583	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    	compilable	  [FE]  EOFException  	82	12	replace
584	[BUG]  [BUGGY]  if(nid.length  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  int  cannot  be  dereferenced  [FE]        EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid.length  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid.length  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	82	None	replace
585	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  *  SIGNATURE_HEADER_SIZE);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  *  SIGNATURE_HEADER_SIZE);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  *  SIGNATURE_HEADER_SIZE);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
586	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
587	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackinfo)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackinfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackinfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
588	[BUG]  [BUGGY]  nid  =  fileName.lastIndexOf('.');  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  fileName.lastIndexOf('.');  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  fileName.lastIndexOf('.');	  nid    =    fileName.length();    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
589	[BUG]  [BUGGY]  nid  =  fileName.lastIndexOf('.')+  1;  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  fileName.lastIndexOf('.')+  1;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  fileName.lastIndexOf('.')+  1;	  nid    =    fileName.length();    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
590	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  archive.readStreams();  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  InputStream  inputStreamStack  =  archive.readStreams();  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	InputStream  inputStreamStack  =  archive.readStreams();	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
591	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  &&  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  NID.kSubStreamsInfo  &&  nid  ==  NID.kEnd)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    	compilable	  [FE]  EOFException  	34	12	replace
592	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  &&  nid  ==  NID.kEnd)  {  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  &&  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kSubStreamsInfo  &&  nid  ==  NID.kEnd)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    	compilable	  [FE]  EOFException  	34	12	replace
593	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kStart)  {  [CE]  cannot  find  symbol  kStart  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kStart)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kStart)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    	non-compiled	[CE]  cannot  find  symbol  kStart	34	None	replace
594	[BUG]  [BUGGY]  if(nid.length  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [CE]  int  cannot  be  dereferenced  [FE]        EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid.length  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid.length  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {	  if(nid!=    NID.kSubStreamsInfo    ||    nid    ==    NID.kEnd)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	34	None	replace
595	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	57	12	replace
596	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  EOFException  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	57	12	replace
597	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	116	12	replace
598	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  <  SIGNATURE_HEADER_SIZE)  {  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	116	12	replace
599	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEAFDER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEAFDER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSubStreamsInfo)    {    if(nid!=  SIGNATURE_HEAFDER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
600	[BUG]  [BUGGY]  if(nid  >>  NID.kUnpackInfo)  {  [CE]  incompatible  types  [FE]        EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >>  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  >>  NID.kUnpackInfo)  {	  if(nid    <    =    NID.kUnpackInfo)    {    	non-compiled	[CE]  incompatible  types	110	None	replace
601	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	114	12	replace
602	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	114	12	replace
603	[BUG]  [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  if(nid  <  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  if(nid  <  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    >=    NID.kSubStreamsInfo)    {    if(nid  <  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
604	[BUG]  [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  if(nid  >=  NID.kStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  if(nid  >=  NID.kStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    >=    NID.kSubStreamsInfo)    {    if(nid  >=  NID.kStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
605	[BUG]  [BUGGY]  if(nid  ==  NID.kSize)  {  if(nid  ==  NID.kSize)  <  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CE]  >  expected  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSize)  {  if(nid  ==  NID.kSize)  <  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kSize)    {    if(nid  ==  NID.kSize)  <  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  >  expected	87	None	add
606	[BUG]  [BUGGY]  if(nid  ==  NID.kSize)  {  if(nid  ==  NID.kSize)  {  this.readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSize)  {  if(nid  ==  NID.kSize)  {  this.readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kSize)    {    if(nid  ==  NID.kSize)  {  this.readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
607	[BUG]  [BUGGY]  if(nid  ==  NID.kSize)  {  if(nid  ==  NID.kSize)  <  reader.readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CE]  >  expected  [FE]        NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSize)  {  if(nid  ==  NID.kSize)  <  reader.readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kSize)    {    if(nid  ==  NID.kSize)  <  reader.readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  >  expected	87	None	add
608	[BUG]  [BUGGY]  if(nid  ==  NID.kSize)  {  if(nid  ==  NID.kSize)  {  }  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSize)  {  if(nid  ==  NID.kSize)  {  }  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kSize)    {    if(nid  ==  NID.kSize)  {  }  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
609	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSize  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  NID.kSize  ||  nid  ==  NID.kEnd)  {	  if(nid    ==    NID.kSize)    {    	compilable	  [FE]  EOFException  	88	12	replace
610	[BUG]  [BUGGY]  if(nid  ==  NID.kSize  ||  nid  ==  NID.kEnd)  {  [FE]  EOFException  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSize  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kSize  ||  nid  ==  NID.kEnd)  {	  if(nid    ==    NID.kSize)    {    	compilable	  [FE]  EOFException  	88	12	replace
611	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length(),  fileName.length());  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length(),  fileName.length());  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length(),  fileName.length());	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(fileName.length());    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
612	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  if(NID  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  if(NID  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSubStreamsInfo)    {    if(NID  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	130	None	add
613	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
614	[BUG]  [BUGGY]  nid  =  header.folders.length;  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  header.folders.length;  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  header.folders.length;	  nid    =    archive.folders.length;    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
615	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kEnd  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  NID.kEnd  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kEnd)    {    	compilable	  [FE]  EOFException  	92	12	replace
616	[BUG]  [BUGGY]  if(nid!=  NID.kEnd  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kEnd  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kEnd  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kEnd)    {    	compilable	  [FE]  EOFException  	92	12	replace
617	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
618	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HeADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HeADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HeADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
619	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kInt)  {  [CE]  cannot  find  symbol  kInt  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kInt)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kInt)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kInt	131	None	replace
620	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kLong)  {  [CE]  cannot  find  symbol  kLong  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kLong)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kLong)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kLong	131	None	replace
621	[BUG]  [BUGGY]  NID  nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  NID  nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	NID  nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  ';'  expected	96	None	replace
622	[BUG]  [BUGGY]  (nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo));  [CE]  not  a  statement  [FE]          NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  (nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo));  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo));	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  not  a  statement	96	None	replace
623	[BUG]  [BUGGY]  nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {  [CE]  not  a  statement  [FE]            NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  not  a  statement	96	None	replace
624	[BUG]  [BUGGY]  if(nid.length  ==  NID.length)  {  [CE]  int  cannot  be  dereferenced  [FE]        EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid.length  ==  NID.length)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid.length  ==  NID.length)  {	  if(nid    ==    NID.length)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	122	None	replace
625	[BUG]  [BUGGY]  if(nid.length  ==  NID.kEnd)  {  [CE]  int  cannot  be  dereferenced  [FE]          EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid.length  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid.length  ==  NID.kEnd)  {	  if(nid    ==    NID.length)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	122	None	replace
626	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(NID.kEnd);  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  nid  =  file.readUnsignedByte(NID.kEnd);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  file.readUnsignedByte(NID.kEnd);	  nid    =    file.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
627	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kStart)  {  [CE]  cannot  find  symbol  kStart  [FE]              EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kStart)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kStart)  {	  if(nid!=    NID.kSubStreamsInfo)    {    if(nid!=    NID.kSubStreamsInfo    ||    nid!=    NID.kEnd)    {    	non-compiled	[CE]  cannot  find  symbol  kStart	21	None	replace
628	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid!=  NID.kStart)  {  [CE]  cannot  find  symbol  kStart  [FE]                EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid!=  NID.kStart)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid!=  NID.kStart)  {	  if(nid!=    NID.kSubStreamsInfo)    {    if(nid!=    NID.kSubStreamsInfo    ||    nid!=    NID.kEnd)    {    	non-compiled	[CE]  cannot  find  symbol  kStart	21	None	replace
629	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid!=  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
630	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
631	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  |&  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  |&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSubStreamsInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  |&  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
632	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
633	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack.size());  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack.size());  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(inputStreamStack.size());	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(fileName);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
634	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kBlockInfo);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kBlockInfo);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kBlockInfo);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(fileName);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
635	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(folders.length  +  2);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(folders.length  +  2);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(folders.length  +  2);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(folders.length);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
636	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  NID.kEnd  ||  nid!=  NID.kUnpackInfo)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    NID.kUnpackInfo)    {    	compilable	  [FE]  EOFException  	125	12	replace
637	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid!=  NID.kUnpackInfo)  {  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kEnd  ||  nid!=  NID.kUnpackInfo)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    NID.kUnpackInfo)    {    	compilable	  [FE]  EOFException  	125	12	replace
638	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kEnd  &&  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  NID.kEnd  &&  nid  ==  NID.kUnpackInfo)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	125	12	replace
639	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  &&  nid  ==  NID.kUnpackInfo)  {  [FE]  NoClassDefFoundError  [FE]      EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kEnd  &&  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kEnd  &&  nid  ==  NID.kUnpackInfo)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	125	12	replace
640	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  >=  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    NID.kUnpackInfo)    {    	compilable	  [FE]  EOFException  	125	12	replace
641	[BUG]  [BUGGY]  if(nid  >=  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  >=  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  >=  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    NID.kUnpackInfo)    {    	compilable	  [FE]  EOFException  	125	12	replace
642	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  if(NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  if(NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    NID.kEnd)    {    if(NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
643	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid!=  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  if(nid!=  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kEnd)    {    if(nid!=  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
644	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithCapacity(length);  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithCapacity(length);  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithCapacity(length);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
645	[BUG]  [BUGGY]  If  (nid  ==  NID.kEnd)  {  [CE]  ';'  expected  [FE]                  EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  If  (nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	If  (nid  ==  NID.kEnd)  {	  if    (nid    ==    NID.kEnd)    {    If    (nid    ==    NID.kEnd)    {    	non-compiled	[CE]  ';'  expected	51	None	replace
646	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
647	[BUG]  [BUGGY]  if(nid  ==  NID.kInt  ||  nid  ==  NID.kEnd)  {  [CE]  cannot  find  symbol  kInt  [FE]              NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kInt  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kInt  ||  nid  ==  NID.kEnd)  {	  if(nid    ==    NID.kInt)    {    	non-compiled	[CE]  cannot  find  symbol  kInt	72	None	replace
648	[BUG]  [BUGGY]  if(nid  ==  NID.kInt  ||  nid  ==  NID.kStart)  {  [CE]  cannot  find  symbol  kInt  [FE]                NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kInt  ||  nid  ==  NID.kStart)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kInt  ||  nid  ==  NID.kStart)  {	  if(nid    ==    NID.kInt)    {    	non-compiled	[CE]  cannot  find  symbol  kInt	72	None	replace
649	[BUG]  [BUGGY]  if(nid!=  NID.kEnd)  {  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kEnd)  {  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kEnd)    {    if(nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
650	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpack  ||  nid  ==  NID.kStart)  {  [CE]  cannot  find  symbol  kUnpack  [FE]          EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kUnpack  ||  nid  ==  NID.kStart)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kUnpack  ||  nid  ==  NID.kStart)  {	  if(nid    ==    NID.kUnpack)    {    	non-compiled	[CE]  cannot  find  symbol  kUnpack	36	None	replace
651	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid!=  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid!=  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid!=  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
652	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kStart)  {  [CE]  cannot  find  symbol  kStart  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kStart)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kStart)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStart	80	None	replace
653	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  NID.kEnd  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	129	12	replace
654	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kEnd  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    NID.kEnd    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	129	12	replace
655	[BUG]  [BUGGY]  if(nid  ==  NID.kStreamsInfo  ||  nid  ==  NID.kEnd)  {  [CE]  cannot  find  symbol  kStreamsInfo  [FE]    NoClassDefFoundError    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kStreamsInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kStreamsInfo  ||  nid  ==  NID.kEnd)  {	  if(nid    ==    NID.kSubStreamsInfo    ||    nid!=    NID.kEnd)    {    	non-compiled	[CE]  cannot  find  symbol  kStreamsInfo	32	None	replace
656	[BUG]  [BUGGY]  if(nid!=  NID.kUnpack  ||  nid!=  NID.kStart)  {  [CE]  cannot  find  symbol  kUnpack  [FE]        EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kUnpack  ||  nid!=  NID.kStart)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kUnpack  ||  nid!=  NID.kStart)  {	  if(nid!=    NID.kUnpack)    {    	non-compiled	[CE]  cannot  find  symbol  kUnpack	35	None	replace
657	[BUG]  [BUGGY]  if(nid!=  NID.kUnpack  ||  nid  ==  NID.kEnd)  {  [CE]  cannot  find  symbol  kUnpack  [FE]          EOFException      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid!=  NID.kUnpack  ||  nid  ==  NID.kEnd)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kUnpack  ||  nid  ==  NID.kEnd)  {	  if(nid!=    NID.kUnpack)    {    	non-compiled	[CE]  cannot  find  symbol  kUnpack	35	None	replace
658	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kStart  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kStart  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kEnd    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  NID.kStart  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	128	None	add
659	[BUG]  [BUGGY]  if(nid  ==  NID.kBlock  ||  nid  ==  NID.kStart)  {  [CE]  cannot  find  symbol  kBlock  [FE]                NoClassDefFoundError      [CONTEXT]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }      [BUGGY]  if(nid  ==  NID.kBlock  ||  nid  ==  NID.kStart)  {  [BUGGY]      readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(     "Badly  terminated  StreamsInfo     ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kBlock  ||  nid  ==  NID.kStart)  {	  if(nid    ==    NID.kBlock)    {    	non-compiled	[CE]  cannot  find  symbol  kBlock	86	None	replace
