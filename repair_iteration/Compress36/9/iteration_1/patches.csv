bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  if(nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  if(nid  ==  NID.kUnpackInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kUnpackInfo)    {    if(nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
2	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  if(nid!=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  if(nid!=  NID.kUnpackInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kUnpackInfo)    {    if(nid!=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
3	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kUnpackInfo)    {    if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
4	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  if(nid  >=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  if(nid  >=  NID.kUnpackInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kUnpackInfo)    {    if(nid  >=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
5	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  If(nid  ==  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  If(nid  ==  NID.kUnpackInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kUnpackInfo)    {    If(nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
6	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kStart)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kStart)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kUnpackInfo)    {    if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kStart)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
7	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  if(nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]                NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  if(nid  ==  NID.kEnd)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kUnpackInfo)    {    if(nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
8	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  NID.kEnd)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  NID.kEnd)  {	  if(nid    ==    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	2	12	replace
9	[BUG]  [BUGGY]  if(nid!=  NID.kEnd)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  NID.kEnd)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kEnd)  {	  if(nid    ==    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	2	12	replace
10	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {	  if(nid    ==    NID.kUnpackInfo)    {    	compilable	  [FE]  EOFException  	2	12	replace
11	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  [FE]  EOFException  [FE]      NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kEnd)  {	  if(nid    ==    NID.kUnpackInfo)    {    	compilable	  [FE]  EOFException  	2	12	replace
12	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreams)  {  [CE]  cannot  find  symbol  kSubStreams  [FE]        NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  NID.kSubStreams)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kSubStreams)  {	  if(nid    ==    NID.kUnpackInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kSubStreams	2	None	replace
13	[BUG]  [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    if  (nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
14	[BUG]  [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  if  (nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  if  (nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    if  (nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
15	[BUG]  [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  if  (nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  if  (nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    if  (nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
16	[BUG]  [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]          NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    If  (nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
17	[BUG]  [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  if  (nid  >>  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  if  (nid  >>  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    if  (nid  >>  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
18	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  if(nid!=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  if(nid!=  NID.kSubStreamsInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kSubStreamsInfo)    {    if(nid!=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
19	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  if(nid  >=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]      EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  if(nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kSubStreamsInfo)    {    if(nid  >=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
20	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]        EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  if(nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kSubStreamsInfo)    {    if(nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
21	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kSubStreamsInfo)    {    if(nid!=  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
22	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  if(nid  >>  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  if(nid  >>  NID.kSubStreamsInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kSubStreamsInfo)    {    if(nid  >>  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
23	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  If(nid!=  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]              EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  If(nid!=  NID.kSubStreamsInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kSubStreamsInfo)    {    If(nid!=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
24	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid  >=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  if(nid!=  NID.kSubStreamsInfo  ||  nid  >=  NID.kEnd)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kSubStreamsInfo)    {    if(nid!=  NID.kSubStreamsInfo  ||  nid  >=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
25	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
26	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
27	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]        NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
28	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
29	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
30	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
31	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {	  if(nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	13	12	replace
32	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  [FE]  NoClassDefFoundError  [FE]    EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid!=  NID.kEnd)  {	  if(nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	13	12	replace
33	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {	  if(nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	13	12	replace
34	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [FE]  EOFException  [FE]      EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kSubStreamsInfo  ||  nid  ==  NID.kEnd)  {	  if(nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	13	12	replace
35	[BUG]  [BUGGY]  if(nid!=  NID.kUnpack)  {  [CE]  cannot  find  symbol  kUnpack  [FE]    EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  NID.kUnpack)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kUnpack)  {	  if(nid!=    NID.kUnpackInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kUnpack	6	None	replace
36	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpack)  {  [CE]  cannot  find  symbol  kUnpack  [FE]      EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  NID.kUnpack)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kUnpack)  {	  if(nid!=    NID.kUnpackInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kUnpack	6	None	replace
37	[BUG]  [BUGGY]  if(nid!=  NID.kBlockInfo)  {  [CE]  cannot  find  symbol  kBlockInfo  [FE]        EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  NID.kBlockInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kBlockInfo)  {	  if(nid!=    NID.kUnpackInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kBlockInfo	6	None	replace
38	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.kEnd)    {    	compilable	  [FE]  EOFException  	4	12	replace
39	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [FE]  EOFException  [FE]    EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.kEnd)    {    	compilable	  [FE]  EOFException  	4	12	replace
40	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  if    (nid    ==    NID.kEnd)    {    	compilable	  [FE]  EOFException  	4	12	replace
41	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [FE]  EOFException  [FE]      EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  if    (nid    ==    NID.kEnd)    {    	compilable	  [FE]  EOFException  	4	12	replace
42	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  if    (nid    ==    NID.kEnd)    {    	compilable	  [FE]  NoClassDefFoundError  	4	12	replace
43	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [FE]  NoClassDefFoundError  [FE]        EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  if    (nid    ==    NID.kEnd)    {    	compilable	  [FE]  NoClassDefFoundError  	4	12	replace
44	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  if    (nid    ==    NID.kEnd)    {    	compilable	  [FE]  EOFException  	4	12	replace
45	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [FE]  EOFException  [FE]          EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kEnd)  {	  if    (nid    ==    NID.kEnd)    {    	compilable	  [FE]  EOFException  	4	12	replace
46	[BUG]  [BUGGY]  if  (nid  ==  NID.kEnd)  {  if  (nid  ==  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if  (nid  ==  NID.kEnd)  {  if  (nid  ==  NID.kEnd)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if    (nid    ==    NID.kEnd)    {    if  (nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
47	[BUG]  [BUGGY]  if  (nid  ==  NID.kEnd)  {  if  (nid  >=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]      EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if  (nid  ==  NID.kEnd)  {  if  (nid  >=  NID.kEnd)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if    (nid    ==    NID.kEnd)    {    if  (nid  >=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
48	[BUG]  [BUGGY]  if  (nid  ==  NID.kEnd)  {  if  (nid!=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]        EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if  (nid  ==  NID.kEnd)  {  if  (nid!=  NID.kEnd)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if    (nid    ==    NID.kEnd)    {    if  (nid!=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
49	[BUG]  [BUGGY]  if  (nid  ==  NID.kEnd)  {  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if  (nid  ==  NID.kEnd)  {  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if    (nid    ==    NID.kEnd)    {    if  (nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
50	[BUG]  [BUGGY]  if  (nid  ==  NID.kEnd)  {  if  (nid  ==  NID.kStart)  {  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if  (nid  ==  NID.kEnd)  {  if  (nid  ==  NID.kStart)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if    (nid    ==    NID.kEnd)    {    if  (nid  ==  NID.kStart)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
51	[BUG]  [BUGGY]  if  (nid  ==  NID.kEnd)  {  If  (nid  ==  NID.kEnd)  {  [CE]  ';'  expected  [FE]              EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if  (nid  ==  NID.kEnd)  {  If  (nid  ==  NID.kEnd)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if    (nid    ==    NID.kEnd)    {    If  (nid  ==  NID.kEnd)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
52	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	9	12	replace
53	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	9	12	replace
54	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	9	12	replace
55	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  EOFException  [FE]      NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	9	12	replace
56	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	9	12	replace
57	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	9	12	replace
58	[BUG]  [BUGGY]  if(nid!=  NID.kUnpackInfo)  {  if(nid!=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  NID.kUnpackInfo)  {  if(nid!=  NID.kUnpackInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kUnpackInfo)    {    if(nid!=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
59	[BUG]  [BUGGY]  if(nid!=  NID.kUnpackInfo)  {  if(nid  >=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]      EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  NID.kUnpackInfo)  {  if(nid  >=  NID.kUnpackInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kUnpackInfo)    {    if(nid  >=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
60	[BUG]  [BUGGY]  if(nid!=  NID.kUnpackInfo)  {  if(nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]        EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  NID.kUnpackInfo)  {  if(nid  ==  NID.kUnpackInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kUnpackInfo)    {    if(nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
61	[BUG]  [BUGGY]  if(nid!=  NID.kUnpackInfo)  {  if(nid!=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]          EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  NID.kUnpackInfo)  {  if(nid!=  NID.kEnd)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kUnpackInfo)    {    if(nid!=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
62	[BUG]  [BUGGY]  if(nid!=  NID.kUnpackInfo)  {  if(nid  >>  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]            EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  NID.kUnpackInfo)  {  if(nid  >>  NID.kUnpackInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kUnpackInfo)    {    if(nid  >>  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
63	[BUG]  [BUGGY]  if(nid!=  NID.kUnpackInfo)  {  If(nid!=  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]              EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  NID.kUnpackInfo)  {  If(nid!=  NID.kUnpackInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kUnpackInfo)    {    If(nid!=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
64	[BUG]  [BUGGY]  if(nid!=  NID.kUnpackInfo)  {  if(nid!=  NID.kUnpackinfo)  {  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  NID.kUnpackInfo)  {  if(nid!=  NID.kUnpackinfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kUnpackInfo)    {    if(nid!=  NID.kUnpackinfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
65	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  nid  =  header.readUnsignedByte();  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  header.readUnsignedByte();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
66	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
67	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
68	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length());  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length());  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName.length());	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
69	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length);  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
70	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders);  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(archive.folders);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
71	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderIndex);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderIndex);  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(currentFolderIndex);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
72	[BUG]  [BUGGY]  if(nid  ==  NID.kInt)  {  [CE]  cannot  find  symbol  kInt  [FE]          NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  NID.kInt)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kInt)  {	  if(nid    ==    NID.kStart)    {    	non-compiled	[CE]  cannot  find  symbol  kInt	14	None	replace
73	[BUG]  [BUGGY]  if(nid!=  NID.kStart)  {  [CE]  cannot  find  symbol  kStart  [FE]            NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  NID.kStart)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kStart)  {	  if(nid    ==    NID.kStart)    {    	non-compiled	[CE]  cannot  find  symbol  kStart	14	None	replace
74	[BUG]  [BUGGY]  if(nid  ==  NID.kFolderSize)  {  [CE]  cannot  find  symbol  kFolderSize  [FE]              NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  NID.kFolderSize)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kFolderSize)  {	  if(nid    ==    NID.kStart)    {    	non-compiled	[CE]  cannot  find  symbol  kFolderSize	14	None	replace
75	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	11	12	replace
76	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	11	12	replace
77	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	11	12	replace
78	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	11	12	replace
79	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	11	12	replace
80	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	11	12	replace
81	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	11	12	replace
82	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [FE]  EOFException  [FE]          NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	11	12	replace
83	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kUnpackInfo)    {    if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
84	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  if(nid  ==  NID.kUnpackInfo  ||  nid!=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  if(nid  ==  NID.kUnpackInfo  ||  nid!=  NID.kEnd)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kUnpackInfo)    {    if(nid  ==  NID.kUnpackInfo  ||  nid!=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
85	[BUG]  [BUGGY]  if(nid  ==  NID.kLength)  {  [CE]  cannot  find  symbol  kLength  [FE]          NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  NID.kLength)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kLength)  {	  if(nid    ==    NID.kStart)    {    	non-compiled	[CE]  cannot  find  symbol  kLength	14	None	replace
86	[BUG]  [BUGGY]  if(nid  ==  NID.kBlock)  {  [CE]  cannot  find  symbol  kBlock  [FE]            NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  NID.kBlock)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kBlock)  {	  if(nid    ==    NID.kStart)    {    	non-compiled	[CE]  cannot  find  symbol  kBlock	14	None	replace
87	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]              NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  NID.kSize)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  NID.kSize)  {	  if(nid    ==    NID.kStart)    {    	compilable	  [FE]  NoClassDefFoundError  	14	12	replace
88	[BUG]  [BUGGY]  if(nid  ==  NID.kSize)  {  [FE]  NoClassDefFoundError  [FE]              NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  NID.kSize)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kSize)  {	  if(nid    ==    NID.kStart)    {    	compilable	  [FE]  NoClassDefFoundError  	14	12	replace
89	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {	  if(nid!=    NID.kUnpackInfo)    {    	compilable	  [FE]  EOFException  	6	12	replace
90	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [FE]  EOFException  [FE]    EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {	  if(nid!=    NID.kUnpackInfo)    {    	compilable	  [FE]  EOFException  	6	12	replace
91	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {	  if(nid!=    NID.kUnpackInfo)    {    	compilable	  [FE]  EOFException  	6	12	replace
92	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [FE]  EOFException  [FE]      EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kEnd)  {	  if(nid!=    NID.kUnpackInfo)    {    	compilable	  [FE]  EOFException  	6	12	replace
93	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.peek();  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.peek();  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	InputStream  inputStreamStack  =  inputStreamStack.peek();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
94	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(folders.length);  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(folders.length);  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(folders.length);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
95	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName);  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName);  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(fileName);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
96	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  not  a  statement  [FE]    NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  not  a  statement	10	None	add
97	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]      NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
98	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kStart)  {  [CE]  cannot  find  symbol  kStart  [FE]    NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kStart)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kStart)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kStart	11	None	replace
99	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  if(nid!=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  if(nid!=  NID.kUnpackInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kSubStreamsInfo)    {    if(nid!=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
100	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  if(nid!=  NID.kSubStreamsinfo)  {  [CE]  illegal  start  of  expression  [FE]      EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  if(nid!=  NID.kSubStreamsinfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kSubStreamsInfo)    {    if(nid!=  NID.kSubStreamsinfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
101	[BUG]  [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  int  nid  =  SIGNATURE_HEADER_SIZE;  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  int  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    int  nid  =  SIGNATURE_HEADER_SIZE;	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
102	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  >=  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	13	12	replace
103	[BUG]  [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  [FE]  NoClassDefFoundError  [FE]    EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  >=  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	13	12	replace
104	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreams)  {  [CE]  cannot  find  symbol  kSubStreams  [FE]      EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  NID.kSubStreams)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  NID.kSubStreams)  {	  if(nid!=    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kSubStreams	13	None	replace
105	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]              NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  nid  =  file.readUnsignedByte();  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  file.readUnsignedByte();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
106	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack();  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack();  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	InputStream  inputStreamStack  =  getInputStreamStack();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
107	[BUG]  [BUGGY]  nid  =  NID.kEnd;  [CE]  illegal  start  of  type  [FE]                  NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  nid  =  NID.kEnd;  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  NID.kEnd;	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
108	[BUG]  [BUGGY]  nid  =  fileName.length();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  nid  =  fileName.length();  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  fileName.length();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
109	[BUG]  [BUGGY]  nid  =  archive.folders.length;  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  nid  =  archive.folders.length;  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	nid  =  archive.folders.length;	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
110	[BUG]  [BUGGY]  if(nid  <  =  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  <  =  NID.kUnpackInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  =  NID.kUnpackInfo)  {	  if(nid!=    NID.kUnpackInfo)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
111	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  >=  NID.kEnd)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  >=  NID.kEnd)  {	  if(nid!=    NID.kUnpackInfo)    {    	compilable	  [FE]  EOFException  	6	12	replace
112	[BUG]  [BUGGY]  if(nid  >=  NID.kEnd)  {  [FE]  EOFException  [FE]      EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  >=  NID.kEnd)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  >=  NID.kEnd)  {	  if(nid!=    NID.kUnpackInfo)    {    	compilable	  [FE]  EOFException  	6	12	replace
113	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	9	12	replace
114	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  EOFException  [FE]    NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	9	12	replace
115	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  <  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	9	12	replace
116	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  [FE]  EOFException  [FE]      NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  EOFException  	9	12	replace
117	[BUG]  [BUGGY]  if(nid!=  NID.kUnpackInfo)  {  if(nid!=  NID.kBlockInfo)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  NID.kUnpackInfo)  {  if(nid!=  NID.kBlockInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kUnpackInfo)    {    if(nid!=  NID.kBlockInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
118	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  if(nid!=  NID.kEnd)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  if(nid!=  NID.kEnd)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kUnpackInfo)    {    if(nid!=  NID.kEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
119	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  if(nid  ==  NID.kBlockInfo)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  if(nid  ==  NID.kBlockInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kUnpackInfo)    {    if(nid  ==  NID.kBlockInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
120	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  if(nid  ==  NID.kStart)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  if(nid  ==  NID.kStart)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    NID.kUnpackInfo)    {    if(nid  ==  NID.kStart)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
121	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
122	[BUG]  [BUGGY]  if(nid  ==  NID.length)  {  [CE]  cannot  find  symbol  length  [FE]    EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  NID.length)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.length)  {	  if    (nid    ==    NID.kEnd)    {    	non-compiled	[CE]  cannot  find  symbol  length	4	None	replace
123	[BUG]  [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  if(nid!=  NID.kStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  NID.kSubStreamsInfo)  {  if(nid!=  NID.kStreamsInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=    NID.kSubStreamsInfo)    {    if(nid!=  NID.kStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
124	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid    ==    NID.kUnpackInfo)    {    	compilable	  [FE]  EOFException  	2	12	replace
125	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  [FE]  EOFException  [FE]    NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kEnd  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid    ==    NID.kUnpackInfo)    {    	compilable	  [FE]  EOFException  	2	12	replace
126	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	11	12	replace
127	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [FE]  EOFException  [FE]    NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	11	12	replace
128	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	11	12	replace
129	[BUG]  [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  EOFException  [FE]      NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  ==  NID.kEnd  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	11	12	replace
130	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	11	12	replace
131	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  [FE]  EOFException  [FE]        NoClassDefFoundError    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSubStreamsInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  EOFException  	11	12	replace
132	[BUG]  [BUGGY]  if(nid  <  =  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }    [BUGGY]  if(nid  <  =  NID.kSubStreamsInfo)  {  [BUGGY]    readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  !=  NID.kEnd)  {  throw  new  IOException(   "Badly  terminated  StreamsInfo   ");  }  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	335	335	12	replace	if(nid  <  =  NID.kSubStreamsInfo)  {	  if(nid!=    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
