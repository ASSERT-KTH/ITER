bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	5	None	add
2	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  cannot  find  symbol  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
3	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  Collection  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  cannot  find  symbol  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  Collection  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    Collection  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
4	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  arrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  cannot  find  symbol  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  arrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    arrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
5	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  Set  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  cannot  find  symbol  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  Set  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    Set  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
6	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  System.arraycopy(nid,  0,  deferredBlockStreams,  0,  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    System.arraycopy(nid,  0,  deferredBlockStreams,  0,  nid);	  	compilable	  [FE]  ArrayStoreException  	5	12	add
7	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  System.arraycopy(nid,  0,  deferredBlockStreams,  0,  nid);  [FE]  ArrayStoreException  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  System.arraycopy(nid,  0,  deferredBlockStreams,  0,  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    System.arraycopy(nid,  0,  deferredBlockStreams,  0,  nid);	  	compilable	  [FE]  ArrayStoreException  	5	12	add
8	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    nid    =    head.readUnsignedByte()    +    1;    	compilable	  [FE]  IOException  	58	12	replace
9	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [FE]  IOException  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    nid    =    head.readUnsignedByte()    +    1;    	compilable	  [FE]  IOException  	58	12	replace
10	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;	  nid    =    header.readUnsignedByte()    +    1;    nid    =    head.readUnsignedByte()    +    1;    	compilable	  [FE]  IOException  	58	12	replace
11	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;  [FE]  IOException  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;	  nid    =    header.readUnsignedByte()    +    1;    nid    =    head.readUnsignedByte()    +    1;    	compilable	  [FE]  IOException  	58	12	replace
12	[BUG]  [BUGGY]  nid  =  head.readUnsignedByte();  nid  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  head  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  head.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  head.readUnsignedByte();  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    nid    =    head.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol  head	58	None	replace
13	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  head.readUnsignedByte();  [CE]  cannot  find  symbol  head  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  head.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  nid  =  head.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    nid    =    head.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol  head	58	None	replace
14	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  reader.readUnsignedByte();  [CE]  cannot  find  symbol  reader  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  reader.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  nid  =  reader.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    nid    =    head.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol  reader	58	None	replace
15	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kUnpackInfo,  fileName);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kUnpackInfo,  fileName);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid,  NID.kUnpackInfo,  fileName);	  nid    =    header.readUnsignedByte(nid,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	12	None	replace
16	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo.readUnsignedByte(header,  archive);  [CE]  int  cannot  be  dereferenced  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo.readUnsignedByte(header,  archive);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  NID.kUnpackInfo.readUnsignedByte(header,  archive);	  nid    =    header.readUnsignedByte(nid,    NID.kUnpackInfo);    	non-compiled	[CE]  int  cannot  be  dereferenced	12	None	replace
17	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  SIGNATURE_HEADER_SIZE,  NID.kUnpackInfo);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  SIGNATURE_HEADER_SIZE,  NID.kUnpackInfo);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid,  SIGNATURE_HEADER_SIZE,  NID.kUnpackInfo);	  nid    =    header.readUnsignedByte(nid,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	12	None	replace
18	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte(header,  NID.kUnpackInfo);  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte(header,  NID.kUnpackInfo);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  NID.readUnsignedByte(header,  NID.kUnpackInfo);	  nid    =    header.readUnsignedByte(nid,    NID.kUnpackInfo);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
19	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kUnpackInfo,  archive);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kUnpackInfo,  archive);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid,  NID.kUnpackInfo,  archive);	  nid    =    header.readUnsignedByte(nid,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	12	None	replace
20	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(NID.kUnpackInfo,  nid);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(NID.kUnpackInfo,  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(NID.kUnpackInfo,  nid);	  nid    =    header.readUnsignedByte(nid,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	12	None	replace
21	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kUnpackInfo,  archive.folders);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kUnpackInfo,  archive.folders);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid,  NID.kUnpackInfo,  archive.folders);	  nid    =    header.readUnsignedByte(nid,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	12	None	replace
22	[BUG]  [BUGGY]  Nid  nid  =  NID.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Nid  nid  =  NID.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Nid  nid  =  NID.readUnsignedByte();	  Nid    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
23	[BUG]  [BUGGY]  Nid  nid  =  this.header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Nid  nid  =  this.header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Nid  nid  =  this.header.readUnsignedByte();	  Nid    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
24	[BUG]  [BUGGY]  Nid  nid  =  archive.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Nid  nid  =  archive.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Nid  nid  =  archive.readUnsignedByte();	  Nid    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
25	[BUG]  [BUGGY]  Ned  nid  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Ned  nid  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Ned  nid  =  header.readUnsignedByte();	  Nid    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
26	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(nid);  [CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte(nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  file.readUnsignedByte(nid);	  nid    =    file.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;	64	None	replace
27	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	nid  =  file.readUnsignedByte()  +  1;	  nid    =    file.readUnsignedByte();    	compilable	  [FE]  EOFException  	64	12	replace
28	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  file.readUnsignedByte()  +  1;	  nid    =    file.readUnsignedByte();    	compilable	  [FE]  EOFException  	64	12	replace
29	[BUG]  [BUGGY]  nid  =  reader.readUnsignedByte();  [CE]  cannot  find  symbol  reader  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  reader.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  reader.readUnsignedByte();	  nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  reader	64	None	replace
30	[BUG]  [BUGGY]  nid  =  inputStreamStack.isEmpty();  [CE]  cannot  find  symbol  inputStreamStack  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  inputStreamStack.isEmpty();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  inputStreamStack.isEmpty();	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    if(!inputStreamStack.isEmpty())    {    return;    }    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	47	None	replace
31	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(!inputStreamStack.isEmpty())  {  return;  }  [CE]  illegal  start  of  expression  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(!inputStreamStack.isEmpty())  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(!inputStreamStack.isEmpty())  {  return;  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    if(!inputStreamStack.isEmpty())    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
32	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(inputStreamStack.isEmpty())  {  return;  }  [CE]  illegal  start  of  expression  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(inputStreamStack.isEmpty())  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(inputStreamStack.isEmpty())  {  return;  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    if(!inputStreamStack.isEmpty())    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
33	[BUG]  [BUGGY]  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(!inputStreamStack.isEmpty())  {  return;  }  [CE]  illegal  start  of  expression  [FE]                        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(!inputStreamStack.isEmpty())  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(!inputStreamStack.isEmpty())  {  return;  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    if(!inputStreamStack.isEmpty())    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
34	[BUG]  [BUGGY]  int  nid  =  inputStreamStack.isEmpty();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  inputStreamStack.isEmpty();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  inputStreamStack.isEmpty();	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    if(!inputStreamStack.isEmpty())    {    return;    }    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	47	None	replace
35	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(!inputStreamStack.isEmpty()  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(!inputStreamStack.isEmpty()  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(!inputStreamStack.isEmpty()  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  return;  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    if(!inputStreamStack.isEmpty())    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
36	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  fileName);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  fileName);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  fileName);	  nid    =    header.readUnsignedByte(nid,    NID.kPackInfo);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	13	None	replace
37	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  SIGNATURE_HEADER_SIZE,  NID.kPackInfo);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  SIGNATURE_HEADER_SIZE,  NID.kPackInfo);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid,  SIGNATURE_HEADER_SIZE,  NID.kPackInfo);	  nid    =    header.readUnsignedByte(nid,    NID.kPackInfo);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	13	None	replace
38	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte(header,  NID.kPackInfo);  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte(header,  NID.kPackInfo);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  NID.readUnsignedByte(header,  NID.kPackInfo);	  nid    =    header.readUnsignedByte(nid,    NID.kPackInfo);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
39	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  archive);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  archive);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  archive);	  nid    =    header.readUnsignedByte(nid,    NID.kPackInfo);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	13	None	replace
40	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(NID.kPackInfo,  nid);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(NID.kPackInfo,  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(NID.kPackInfo,  nid);	  nid    =    header.readUnsignedByte(nid,    NID.kPackInfo);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	13	None	replace
41	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  signature);  [CE]  cannot  find  symbol  signature  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  signature);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  signature);	  nid    =    header.readUnsignedByte(nid,    NID.kPackInfo);    	non-compiled	[CE]  cannot  find  symbol  signature	13	None	replace
42	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  null);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  null);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  null);	  nid    =    header.readUnsignedByte(nid,    NID.kPackInfo);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	13	None	replace
43	[BUG]  [BUGGY]  nid  =  archive.readUnsignedByte(header,  archive);  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  archive.readUnsignedByte(header,  archive);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  archive.readUnsignedByte(header,  archive);	  nid    =    header.readUnsignedByte(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
44	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  header,  archive);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  header,  archive);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(inputStreamStack,  header,  archive);	  nid    =    header.readUnsignedByte(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	14	None	replace
45	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(header,  archive,  nid);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(header,  archive,  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(header,  archive,  nid);	  nid    =    header.readUnsignedByte(header,    archive);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	14	None	replace
46	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(fileName,  header,  archive);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(fileName,  header,  archive);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(fileName,  header,  archive);	  nid    =    header.readUnsignedByte(header,    archive);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	14	None	replace
47	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(dataInput,  header,  archive);  [CE]  cannot  find  symbol  dataInput  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(dataInput,  header,  archive);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(dataInput,  header,  archive);	  nid    =    header.readUnsignedByte(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  dataInput	14	None	replace
48	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(dataInput,  header);  [CE]  cannot  find  symbol  dataInput  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(dataInput,  header);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(dataInput,  header);	  nid    =    header.readUnsignedByte(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  dataInput	14	None	replace
49	[BUG]  [BUGGY]  nid  =  currentFolderIndex.readUnsignedSize();  [CE]  int  cannot  be  dereferenced  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderIndex.readUnsignedSize();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  currentFolderIndex.readUnsignedSize();	  nid    =    nid.readUnsignedSize();    	non-compiled	[CE]  int  cannot  be  dereferenced	77	None	replace
50	[BUG]  [BUGGY]  nid  =  reader.readUnsignedSize();  [CE]  cannot  find  symbol  reader  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  reader.readUnsignedSize();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  reader.readUnsignedSize();	  nid    =    nid.readUnsignedSize();    	non-compiled	[CE]  cannot  find  symbol  reader	77	None	replace
51	[BUG]  [BUGGY]  nid  =  entry.readUnsignedSize();  [CE]  cannot  find  symbol  entry  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  entry.readUnsignedSize();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  entry.readUnsignedSize();	  nid    =    nid.readUnsignedSize();    	non-compiled	[CE]  cannot  find  symbol  entry	77	None	replace
52	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  SIGNATURE_HEADER_SIZE,  fileName);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  SIGNATURE_HEADER_SIZE,  fileName);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid,  SIGNATURE_HEADER_SIZE,  fileName);	  nid    =    header.readUnsignedByte(nid,    fileName);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	11	None	replace
53	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  fileName,  archive.folders);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  fileName,  archive.folders);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid,  fileName,  archive.folders);	  nid    =    header.readUnsignedByte(nid,    fileName);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	11	None	replace
54	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  SIGNATURE_HEADER_SIZE);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  SIGNATURE_HEADER_SIZE);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid,  SIGNATURE_HEADER_SIZE);	  nid    =    header.readUnsignedByte(nid,    fileName);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	11	None	replace
55	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nid;  i++)  {  readStreamsInfo(header,  archive.folders[i]);  }  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  for(int  i  =  0;  i  <  nid;  i++)  {  readStreamsInfo(header,  archive.folders[i]);  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	for(int  i  =  0;  i  <  nid;  i++)  {  readStreamsInfo(header,  archive.folders[i]);  }	          if(nid    ==    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    i++)    {    readStreamsInfo(header,    archive.folders[i]);    }    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	45	None	replace
56	[BUG]  [BUGGY]  readStreamsInfo(header,  archive.folders[i]);  [CE]  cannot  find  symbol  i  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  readStreamsInfo(header,  archive.folders[i]);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	readStreamsInfo(header,  archive.folders[i]);	          if(nid    ==    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    i++)    {    readStreamsInfo(header,    archive.folders[i]);    }    	non-compiled	[CE]  cannot  find  symbol  i	45	None	replace
57	[BUG]  [BUGGY]  Integer  nid  =  readUnpackInfo(header,  archive.folders[i]);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Integer  nid  =  readUnpackInfo(header,  archive.folders[i]);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Integer  nid  =  readUnpackInfo(header,  archive.folders[i]);	          if(nid    ==    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    i++)    {    readStreamsInfo(header,    archive.folders[i]);    }    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	45	None	replace
58	[BUG]  [BUGGY]  Integer  nid  =  inputStreamStack.size();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Integer  nid  =  inputStreamStack.size();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Integer  nid  =  inputStreamStack.size();	          if(nid    ==    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    i++)    {    readStreamsInfo(header,    archive.folders[i]);    }    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	45	None	replace
59	[BUG]  [BUGGY]  Integer  nid  =  inputStreamStack.readInt();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Integer  nid  =  inputStreamStack.readInt();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Integer  nid  =  inputStreamStack.readInt();	          if(nid    ==    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    i++)    {    readStreamsInfo(header,    archive.folders[i]);    }    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	45	None	replace
60	[BUG]  [BUGGY]  Integer  nid  =  inputStreamStack.get(currentFolderIndex);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Integer  nid  =  inputStreamStack.get(currentFolderIndex);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Integer  nid  =  inputStreamStack.get(currentFolderIndex);	          if(nid    ==    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    i++)    {    readStreamsInfo(header,    archive.folders[i]);    }    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	45	None	replace
61	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid  +  1);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid  +  1);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid  +  1);	  nid    =    header.readUnsignedByte(1)    +    1;    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	73	None	replace
62	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(1)  +  2;  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(1)  +  2;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(1)  +  2;	  nid    =    header.readUnsignedByte(1)    +    1;    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	73	None	replace
63	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(2)  +  1;  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(2)  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(2)  +  1;	  nid    =    header.readUnsignedByte(1)    +    1;    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	73	None	replace
64	[BUG]  [BUGGY]  Integer  nid  =  header.readEndByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Integer  nid  =  header.readEndByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Integer  nid  =  header.readEndByte();	  int    nid    =    header.readEndByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	29	None	replace
65	[BUG]  [BUGGY]  int  nid  =  header.readInt();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readInt();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readInt();	  int    nid    =    header.readEndByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	29	None	replace
66	[BUG]  [BUGGY]  [FE]  EOFException  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  for(int  i  =  0;  i  <  nid;  i++)  {  readStreamsInfo(header,  archive);  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	for(int  i  =  0;  i  <  nid;  i++)  {  readStreamsInfo(header,  archive);  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    i++)    {    readStreamsInfo(header,    archive);    }    	compilable	  [FE]  EOFException  	44	12	replace
67	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nid;  i++)  {  readStreamsInfo(header,  archive);  }  [FE]  EOFException  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  for(int  i  =  0;  i  <  nid;  i++)  {  readStreamsInfo(header,  archive);  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	for(int  i  =  0;  i  <  nid;  i++)  {  readStreamsInfo(header,  archive);  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    i++)    {    readStreamsInfo(header,    archive);    }    	compilable	  [FE]  EOFException  	44	12	replace
68	[BUG]  [BUGGY]  [FE]  IOException  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  readStreamsInfo(header,  archive);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	readStreamsInfo(header,  archive);	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    i++)    {    readStreamsInfo(header,    archive);    }    	compilable	  [FE]  IOException  	44	12	replace
69	[BUG]  [BUGGY]  readStreamsInfo(header,  archive);  [FE]  IOException  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  readStreamsInfo(header,  archive);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	readStreamsInfo(header,  archive);	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    i++)    {    readStreamsInfo(header,    archive);    }    	compilable	  [FE]  IOException  	44	12	replace
70	[BUG]  [BUGGY]  Integer  nid  =  inputStreamStack.get(nid);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Integer  nid  =  inputStreamStack.get(nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Integer  nid  =  inputStreamStack.get(nid);	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    i++)    {    readStreamsInfo(header,    archive);    }    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	44	None	replace
71	[BUG]  [BUGGY]  Integer  nid  =  inputStreamStack.values().iterator().next();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Integer  nid  =  inputStreamStack.values().iterator().next();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Integer  nid  =  inputStreamStack.values().iterator().next();	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    i++)    {    readStreamsInfo(header,    archive);    }    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	44	None	replace
72	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  SIGNATURE_HEADER_SIZE,  archive);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  SIGNATURE_HEADER_SIZE,  archive);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid,  SIGNATURE_HEADER_SIZE,  archive);	  nid    =    header.readUnsignedByte(nid,    archive);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	10	None	replace
73	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  fileName,  archive);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  fileName,  archive);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid,  fileName,  archive);	  nid    =    header.readUnsignedByte(nid,    archive);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	10	None	replace
74	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  archive,  fileName);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  archive,  fileName);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid,  archive,  fileName);	  nid    =    header.readUnsignedByte(nid,    archive);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	10	None	replace
75	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  null);  [CE]  not  a  statement  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  null);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  null);	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    null);    	non-compiled	[CE]  not  a  statement	26	None	replace
76	[BUG]  [BUGGY]  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  null);  [CE]  not  a  statement  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  null);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  null);	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    null);    	non-compiled	[CE]  not  a  statement	26	None	replace
77	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  null);  [CE]  not  a  statement  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  null);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  null);	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    null);    	non-compiled	[CE]  not  a  statement	26	None	replace
78	[BUG]  [BUGGY]  NID  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  null);  [CE]  not  a  statement  [FE]                        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  NID  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  null);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	NID  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  null);	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    null);    	non-compiled	[CE]  not  a  statement	26	None	replace
79	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  for(int  i  =  0;  i  <  nid;  ++i)  {  readUnpackInfo(header,  archive);  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	for(int  i  =  0;  i  <  nid;  ++i)  {  readUnpackInfo(header,  archive);  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    ++i)    {    readUnpackInfo(header,    archive);    }    	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	7	12	replace
80	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nid;  ++i)  {  readUnpackInfo(header,  archive);  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  for(int  i  =  0;  i  <  nid;  ++i)  {  readUnpackInfo(header,  archive);  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	for(int  i  =  0;  i  <  nid;  ++i)  {  readUnpackInfo(header,  archive);  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    ++i)    {    readUnpackInfo(header,    archive);    }    	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	7	12	replace
81	[BUG]  [BUGGY]  ((  SIGNATURE_HEADER_SIZE  +  nid)+  1)  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  ++i)  {  readUnpackInfo(header,  archive);  }  [CE]  not  a  statement  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ((  SIGNATURE_HEADER_SIZE  +  nid)+  1)  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  ++i)  {  readUnpackInfo(header,  archive);  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	((  SIGNATURE_HEADER_SIZE  +  nid)+  1)  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  ++i)  {  readUnpackInfo(header,  archive);  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    ++i)    {    readUnpackInfo(header,    archive);    }    	non-compiled	[CE]  not  a  statement	7	None	replace
82	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  readUnpackInfo(header,  archive);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	readUnpackInfo(header,  archive);	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    ++i)    {    readUnpackInfo(header,    archive);    }    	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	7	12	replace
83	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  [FE]  java.io.IOException:  Expected  kFolder  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  readUnpackInfo(header,  archive);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	readUnpackInfo(header,  archive);	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    ++i)    {    readUnpackInfo(header,    archive);    }    	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	7	12	replace
84	[BUG]  [BUGGY]  ((  SIGNATURE_HEADER_SIZE  +  nid)+  1)  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  NID.length;  ++i)  {  readUnpackInfo(header,  archive);  }  [CE]  not  a  statement  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ((  SIGNATURE_HEADER_SIZE  +  nid)+  1)  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  NID.length;  ++i)  {  readUnpackInfo(header,  archive);  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	((  SIGNATURE_HEADER_SIZE  +  nid)+  1)  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  NID.length;  ++i)  {  readUnpackInfo(header,  archive);  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    ++i)    {    readUnpackInfo(header,    archive);    }    	non-compiled	[CE]  not  a  statement	7	None	replace
85	[BUG]  [BUGGY]  Integer  nid  =  readUnpackInfo(header,  archive);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Integer  nid  =  readUnpackInfo(header,  archive);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Integer  nid  =  readUnpackInfo(header,  archive);	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    ++i)    {    readUnpackInfo(header,    archive);    }    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	7	None	replace
86	[BUG]  [BUGGY]  ((  SIGNATURE_HEADER_SIZE  +  nid)+  1)  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  NID.kPackInfo;  ++i)  {  readUnpackInfo(header,  archive);  }  [CE]  not  a  statement  [FE]                          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ((  SIGNATURE_HEADER_SIZE  +  nid)+  1)  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  NID.kPackInfo;  ++i)  {  readUnpackInfo(header,  archive);  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	((  SIGNATURE_HEADER_SIZE  +  nid)+  1)  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  NID.kPackInfo;  ++i)  {  readUnpackInfo(header,  archive);  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    ++i)    {    readUnpackInfo(header,    archive);    }    	non-compiled	[CE]  not  a  statement	7	None	replace
87	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  return;  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName    ==    null)    {    return;    }    	compilable	  [FE]  NoClassDefFoundError  	75	12	replace
88	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  return;  }  [FE]  NoClassDefFoundError  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  return;  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName    ==    null)    {    return;    }    	compilable	  [FE]  NoClassDefFoundError  	75	12	replace
89	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  return;  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  return;  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName    ==    null)    {    return;    }    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	75	None	replace
90	[BUG]  [BUGGY]  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null)  {  return;  }  [CE]  incompatible  types  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null)  {  return;  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName    ==    null)    {    return;    }    	non-compiled	[CE]  incompatible  types	75	None	replace
91	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  if(nid!=  SIGNATURE_HEADER_SIZE)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	nid  =  header.readUnsignedByte();  if(nid!=  SIGNATURE_HEADER_SIZE)  {  return;  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName    ==    null)    {    return;    }    	compilable	  [FE]  NullPointerException  	75	12	replace
92	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  if(nid!=  SIGNATURE_HEADER_SIZE)  {  return;  }  [FE]  NullPointerException  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  if(nid!=  SIGNATURE_HEADER_SIZE)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  if(nid!=  SIGNATURE_HEADER_SIZE)  {  return;  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName    ==    null)    {    return;    }    	compilable	  [FE]  NullPointerException  	75	12	replace
93	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  if(nid  <  SIGNATURE_HEADER_SIZE)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	nid  =  header.readUnsignedByte();  if(nid  <  SIGNATURE_HEADER_SIZE)  {  return;  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName    ==    null)    {    return;    }    	compilable	  [FE]  NullPointerException  	75	12	replace
94	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  if(nid  <  SIGNATURE_HEADER_SIZE)  {  return;  }  [FE]  NullPointerException  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  if(nid  <  SIGNATURE_HEADER_SIZE)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  if(nid  <  SIGNATURE_HEADER_SIZE)  {  return;  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName    ==    null)    {    return;    }    	compilable	  [FE]  NullPointerException  	75	12	replace
95	[BUG]  [BUGGY]  File  fileName  =  header.readUnsignedByte();  if(fileName  ==  null)  {  return;  }  [CE]  incompatible  types  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  File  fileName  =  header.readUnsignedByte();  if(fileName  ==  null)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	File  fileName  =  header.readUnsignedByte();  if(fileName  ==  null)  {  return;  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName    ==    null)    {    return;    }    	non-compiled	[CE]  incompatible  types	75	None	replace
96	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  for(int  i  =  0;  i  <  nid;  i++)  {  readUnpackInfo(header,  archive);  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	for(int  i  =  0;  i  <  nid;  i++)  {  readUnpackInfo(header,  archive);  }	          if(nid    ==    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    i++)    {    readUnpackInfo(header,    archive);    }    	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	43	12	replace
97	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nid;  i++)  {  readUnpackInfo(header,  archive);  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  for(int  i  =  0;  i  <  nid;  i++)  {  readUnpackInfo(header,  archive);  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	for(int  i  =  0;  i  <  nid;  i++)  {  readUnpackInfo(header,  archive);  }	          if(nid    ==    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    i++)    {    readUnpackInfo(header,    archive);    }    	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	43	12	replace
98	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Integer  nid  =  header.readUnsignedByte();	          if(nid    ==    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    i++)    {    readUnpackInfo(header,    archive);    }    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	43	None	replace
99	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(4);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(4);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(4);	  nid    =    header.readUnsignedByte(3);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	17	None	replace
100	[BUG]  [BUGGY]  ((  SIGNATURE_HEADER_SIZE  +  nid)+  1)  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  i++)  {  readUnpackInfo(header,  archive);  }  [CE]  not  a  statement  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ((  SIGNATURE_HEADER_SIZE  +  nid)+  1)  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  i++)  {  readUnpackInfo(header,  archive);  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	((  SIGNATURE_HEADER_SIZE  +  nid)+  1)  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  i++)  {  readUnpackInfo(header,  archive);  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    i++)    {    readUnpackInfo(header,    archive);    }    	non-compiled	[CE]  not  a  statement	8	None	replace
101	[BUG]  [BUGGY]  ((  SIGNATURE_HEADER_SIZE  +  nid)+  1)  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  NID.kPackInfo;  i++)  {  readUnpackInfo(header,  archive);  }  [CE]  not  a  statement  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ((  SIGNATURE_HEADER_SIZE  +  nid)+  1)  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  NID.kPackInfo;  i++)  {  readUnpackInfo(header,  archive);  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	((  SIGNATURE_HEADER_SIZE  +  nid)+  1)  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  NID.kPackInfo;  i++)  {  readUnpackInfo(header,  archive);  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    i++)    {    readUnpackInfo(header,    archive);    }    	non-compiled	[CE]  not  a  statement	8	None	replace
102	[BUG]  [BUGGY]  ((  SIGNATURE_HEADER_SIZE  +  nid)+  1)  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  NID.kUnpackInfo;  i++)  {  readUnpackInfo(header,  archive);  }  [CE]  not  a  statement  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ((  SIGNATURE_HEADER_SIZE  +  nid)+  1)  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  NID.kUnpackInfo;  i++)  {  readUnpackInfo(header,  archive);  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	((  SIGNATURE_HEADER_SIZE  +  nid)+  1)  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  NID.kUnpackInfo;  i++)  {  readUnpackInfo(header,  archive);  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    i++)    {    readUnpackInfo(header,    archive);    }    	non-compiled	[CE]  not  a  statement	8	None	replace
103	[BUG]  [BUGGY]  nid  =  header.readEndByte(NID.kPackInfo);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readEndByte(NID.kPackInfo);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readEndByte(NID.kPackInfo);	  nid    =    header.readEndByte(header);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
104	[BUG]  [BUGGY]  nid  =  header.readEndByte(inputStreamStack);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readEndByte(inputStreamStack);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readEndByte(inputStreamStack);	  nid    =    header.readEndByte(header);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	51	None	replace
105	[BUG]  [BUGGY]  nid  =  header.readEndByte(fileName);  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readEndByte(fileName);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readEndByte(fileName);	  nid    =    header.readEndByte(header);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
106	[BUG]  [BUGGY]  nid  =  header.readEndByte(false);  [CE]  cannot  find  symbol  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readEndByte(false);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readEndByte(false);	  nid    =    header.readEndByte(header);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
107	[BUG]  [BUGGY]  nid  =  header.readEndByte(NID.kUnpackInfo);  [CE]  cannot  find  symbol  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readEndByte(NID.kUnpackInfo);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readEndByte(NID.kUnpackInfo);	  nid    =    header.readEndByte(header);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
108	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();	  	compilable	  [FE]  EOFException  	63	12	add
109	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();	  	compilable	  [FE]  EOFException  	63	12	add
110	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  }  else  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  file.readUnsignedByte();  }  [CE]  illegal  start  of  type  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  }  else  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  file.readUnsignedByte();  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  }  else  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  file.readUnsignedByte();  }	  	non-compiled	[CE]  illegal  start  of  type	63	None	add
111	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  }  else  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CE]  illegal  start  of  type  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  }  else  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  }  else  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }	  	non-compiled	[CE]  illegal  start  of  type	63	None	add
112	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte();  int  nid  =  file.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte();  int  nid  =  file.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid    =    file.readUnsignedByte();    int  nid  =  file.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	63	None	add
113	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnpackInfo(nid);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]            EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnpackInfo(nid);  nid  =  file.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid    =    file.readUnsignedByte();    ((  RandomAccessFile)file).readUnpackInfo(nid);  nid  =  file.readUnsignedByte();	  	non-compiled	[CE]  cannot  find  symbol	63	None	add
114	[BUG]  [BUGGY]  [FE]  EOFException  [FE]              EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  }  else  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  file.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  }  else  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  file.readUnsignedByte();	  	compilable	  [FE]  EOFException  	63	12	add
115	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  }  else  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  file.readUnsignedByte();  [FE]  EOFException  [FE]              EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  }  else  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  file.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  }  else  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  file.readUnsignedByte();	  	compilable	  [FE]  EOFException  	63	12	add
116	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnpackInfo(header,  archive);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnpackInfo(header,  archive);  nid  =  file.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid    =    file.readUnsignedByte();    ((  RandomAccessFile)file).readUnpackInfo(header,  archive);  nid  =  file.readUnsignedByte();	  	non-compiled	[CE]  cannot  find  symbol	63	None	add
117	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  }  else  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  [CE]  illegal  start  of  type  [FE]                  EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  }  else  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  }  else  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }	  	non-compiled	[CE]  illegal  start  of  type	63	None	add
118	[BUG]  [BUGGY]  [FE]  EOFException  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  for(int  i  =  0;  i  <  nid;  ++i)  {  readStreamsInfo(header,  archive);  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	for(int  i  =  0;  i  <  nid;  ++i)  {  readStreamsInfo(header,  archive);  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    ++i)    {    readStreamsInfo(header,    archive);    }    	compilable	  [FE]  EOFException  	9	12	replace
119	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nid;  ++i)  {  readStreamsInfo(header,  archive);  }  [FE]  EOFException  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  for(int  i  =  0;  i  <  nid;  ++i)  {  readStreamsInfo(header,  archive);  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	for(int  i  =  0;  i  <  nid;  ++i)  {  readStreamsInfo(header,  archive);  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    ++i)    {    readStreamsInfo(header,    archive);    }    	compilable	  [FE]  EOFException  	9	12	replace
120	[BUG]  [BUGGY]  int  nid  =  inputStreamStack.size();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  inputStreamStack.size();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  inputStreamStack.size();	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    ++i)    {    readStreamsInfo(header,    archive);    }    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	9	None	replace
121	[BUG]  [BUGGY]  int  nid  =  NID.readUnsignedInt();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  NID.readUnsignedInt();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  NID.readUnsignedInt();	  nid    =    NID.readUnsignedInt();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	36	None	replace
122	[BUG]  [BUGGY]  NID  nid  =  NID.readUnsignedInt();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  NID  nid  =  NID.readUnsignedInt();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	NID  nid  =  NID.readUnsignedInt();	  nid    =    NID.readUnsignedInt();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	36	None	replace
123	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolderInputStream,  nid);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolderInputStream,  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(currentFolderInputStream,  nid);	  nid    =    header.readUnsignedByte(inputStreamStack,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	15	None	replace
124	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolderInput,  nid);  [CE]  cannot  find  symbol  currentFolderInput  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolderInput,  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(currentFolderInput,  nid);	  nid    =    header.readUnsignedByte(inputStreamStack,    nid);    	non-compiled	[CE]  cannot  find  symbol  currentFolderInput	15	None	replace
125	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  currentFolderInput);  [CE]  cannot  find  symbol  currentFolderInput  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  currentFolderInput);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid,  currentFolderInput);	  nid    =    header.readUnsignedByte(inputStreamStack,    nid);    	non-compiled	[CE]  cannot  find  symbol  currentFolderInput	15	None	replace
126	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  nid);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid,  nid);	  nid    =    header.readUnsignedByte(inputStreamStack,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	15	None	replace
127	[BUG]  [BUGGY]  Integer  nid  =  NID.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Integer  nid  =  NID.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Integer  nid  =  NID.readUnsignedByte();	  NID    nid    =    NID.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	62	None	replace
128	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  nid,  SIGNATURE_HEADER_SIZE);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  nid,  SIGNATURE_HEADER_SIZE);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(currentFolderIndex,  nid,  SIGNATURE_HEADER_SIZE);	  nid    =    header.readUnsignedByte(currentFolderIndex,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	55	None	replace
129	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  SIGNATURE_HEADER_SIZE,  nid);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  SIGNATURE_HEADER_SIZE,  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(currentFolderIndex,  SIGNATURE_HEADER_SIZE,  nid);	  nid    =    header.readUnsignedByte(currentFolderIndex,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	55	None	replace
130	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  nid,  fileName);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  nid,  fileName);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(currentFolderIndex,  nid,  fileName);	  nid    =    header.readUnsignedByte(currentFolderIndex,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	55	None	replace
131	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  nid,  NID);  [CE]  cannot  find  symbol  NID  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  nid,  NID);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(currentFolderIndex,  nid,  NID);	  nid    =    header.readUnsignedByte(currentFolderIndex,    nid);    	non-compiled	[CE]  cannot  find  symbol  NID	55	None	replace
132	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  nid,  NID.kUnpackInfo);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  nid,  NID.kUnpackInfo);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(currentFolderIndex,  nid,  NID.kUnpackInfo);	  nid    =    header.readUnsignedByte(currentFolderIndex,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	55	None	replace
133	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  nid,  1);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  nid,  1);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(currentFolderIndex,  nid,  1);	  nid    =    header.readUnsignedByte(currentFolderIndex,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	55	None	replace
134	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  nid,  firstPackStreamIndex);  [CE]  cannot  find  symbol  firstPackStreamIndex  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  nid,  firstPackStreamIndex);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(currentFolderIndex,  nid,  firstPackStreamIndex);	  nid    =    header.readUnsignedByte(currentFolderIndex,    nid);    	non-compiled	[CE]  cannot  find  symbol  firstPackStreamIndex	55	None	replace
135	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid);  [CE]  cannot  find  symbol  Lists  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid);	          ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Lists	2	None	replace
136	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Collections.newArrayList();  [CE]  cannot  find  symbol  Collections  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Collections.newArrayList();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Collections.newArrayList();	          ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Collections	2	None	replace
137	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  List  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	List  <  String>  deferredBlockStreams  =  Lists.newArrayList();	          ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
138	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(1);  [CE]  cannot  find  symbol  Lists  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(1);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(1);	          ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Lists	2	None	replace
139	[BUG]  [BUGGY]  nid  =  header.readStartByte()  +  1;  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readStartByte()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readStartByte()  +  1;	  nid    =    header.readStartByte();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
140	[BUG]  [BUGGY]  int  nid  =  header.readStartByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readStartByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readStartByte();	  nid    =    header.readStartByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	30	None	replace
141	[BUG]  [BUGGY]  nid  =  NID.readStartByte();  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  NID.readStartByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  NID.readStartByte();	  nid    =    header.readStartByte();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
142	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  [CE]  illegal  start  of  type  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
143	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	72	None	replace
144	[BUG]  [BUGGY]  Nid  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Nid  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Nid  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
145	[BUG]  [BUGGY]  NID  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  NID  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	NID  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	72	None	replace
146	[BUG]  [BUGGY]  NID.kUnpackInfo  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [CE]  cannot  assign  a  value  to  final  variable  kUnpackInfo  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  NID.kUnpackInfo  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	NID.kUnpackInfo  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  kUnpackInfo	72	None	replace
147	[BUG]  [BUGGY]  nid  =  inputStreamStack.readEndByte();  [CE]  cannot  find  symbol  inputStreamStack  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  inputStreamStack.readEndByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  inputStreamStack.readEndByte();	  nid    =    file.readEndByte();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	74	None	replace
148	[BUG]  [BUGGY]  nid  =  path.readEndByte();  [CE]  cannot  find  symbol  path  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  path.readEndByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  path.readEndByte();	  nid    =    file.readEndByte();    	non-compiled	[CE]  cannot  find  symbol  path	74	None	replace
149	[BUG]  [BUGGY]  nid  =  entry.readEndByte();  [CE]  cannot  find  symbol  entry  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  entry.readEndByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  entry.readEndByte();	  nid    =    file.readEndByte();    	non-compiled	[CE]  cannot  find  symbol  entry	74	None	replace
150	[BUG]  [BUGGY]  nid  =  source.readEndByte();  [CE]  cannot  find  symbol  source  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  source.readEndByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  source.readEndByte();	  nid    =    file.readEndByte();    	non-compiled	[CE]  cannot  find  symbol  source	74	None	replace
151	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(NID.kPackInfo);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(NID.kPackInfo);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(NID.kPackInfo);	  nid    =    header.readUnsignedByte(header);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	49	None	replace
152	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  header);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  header);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(inputStreamStack,  header);	  nid    =    header.readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	49	None	replace
153	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(NID.kPackInfo,  header);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(NID.kPackInfo,  header);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(NID.kPackInfo,  header);	  nid    =    header.readUnsignedByte(header);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	49	None	replace
154	[BUG]  [BUGGY]  InputStream  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  InputStream  nid  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	InputStream  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    InputStream    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	57	None	replace
155	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  InputStream  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte();  InputStream  nid  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedByte();  InputStream  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    InputStream    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	57	None	replace
156	[BUG]  [BUGGY]  File  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  File  nid  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	File  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    InputStream    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	57	None	replace
157	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  if(nid!=  SIGNATURE_HEADER_SIZE)  {  return;  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte();  if(nid!=  SIGNATURE_HEADER_SIZE)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedByte();  if(nid!=  SIGNATURE_HEADER_SIZE)  {  return;  }	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName!=    null)    {    return;    }    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	68	None	replace
158	[BUG]  [BUGGY]  String  fileName  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }  [CE]  incompatible  types  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  String  fileName  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	String  fileName  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName!=    null)    {    return;    }    	non-compiled	[CE]  incompatible  types	68	None	replace
159	[BUG]  [BUGGY]  File  fileName  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }  [CE]  incompatible  types  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  File  fileName  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	File  fileName  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName!=    null)    {    return;    }    	non-compiled	[CE]  incompatible  types	68	None	replace
160	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  if(nid!=  SIGNATURE_HEADER_SIZE)  {  fileName  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte();  if(nid!=  SIGNATURE_HEADER_SIZE)  {  fileName  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedByte();  if(nid!=  SIGNATURE_HEADER_SIZE)  {  fileName  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
161	[BUG]  [BUGGY]  nid  =  path.readUnsignedInt();  [CE]  cannot  find  symbol  path  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  path.readUnsignedInt();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  path.readUnsignedInt();	  nid    =    file.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol  path	67	None	replace
162	[BUG]  [BUGGY]  nid  =  archive.readUnsignedInt();  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  archive.readUnsignedInt();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  archive.readUnsignedInt();	  nid    =    file.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
163	[BUG]  [BUGGY]  nid  =  source.readUnsignedInt();  [CE]  cannot  find  symbol  source  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  source.readUnsignedInt();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  source.readUnsignedInt();	  nid    =    file.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol  source	67	None	replace
164	[BUG]  [BUGGY]  nid  =  entry.readUnsignedInt();  [CE]  cannot  find  symbol  entry  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  entry.readUnsignedInt();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  entry.readUnsignedInt();	  nid    =    file.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol  entry	67	None	replace
165	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  fileName;  [CE]  not  a  statement  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  fileName;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  fileName;	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    fileName;    	non-compiled	[CE]  not  a  statement	27	None	replace
166	[BUG]  [BUGGY]  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  fileName;  [CE]  not  a  statement  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  fileName;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  fileName;	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    fileName;    	non-compiled	[CE]  not  a  statement	27	None	replace
167	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  fileName;  [CE]  not  a  statement  [FE]                        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  fileName;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  fileName;	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    fileName;    	non-compiled	[CE]  not  a  statement	27	None	replace
168	[BUG]  [BUGGY]  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  nid;  [CE]  not  a  statement  [FE]                          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  nid;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  nid;	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    fileName;    	non-compiled	[CE]  not  a  statement	27	None	replace
169	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  nid;  [CE]  not  a  statement  [FE]                            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  nid;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  nid;	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    fileName;    	non-compiled	[CE]  not  a  statement	27	None	replace
170	[BUG]  [BUGGY]  NID  nid  =  header.readUnsignedSize();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  NID  nid  =  header.readUnsignedSize();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	NID  nid  =  header.readUnsignedSize();	  nid    =    NID.readUnsignedSize();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	39	None	replace
171	[BUG]  [BUGGY]  int  nid  =  NID.readUnsignedSize();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  NID.readUnsignedSize();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  NID.readUnsignedSize();	  nid    =    NID.readUnsignedSize();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	39	None	replace
172	[BUG]  [BUGGY]  nid  =  NID.readUnsignedSize(nid);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedSize(nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  NID.readUnsignedSize(nid);	  nid    =    NID.readUnsignedSize();    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
173	[BUG]  [BUGGY]  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  nid);  [CE]  not  a  statement  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  nid);	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    nid);    	non-compiled	[CE]  not  a  statement	28	None	replace
174	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  nid);  [CE]  not  a  statement  [FE]                        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  nid);	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    nid);    	non-compiled	[CE]  not  a  statement	28	None	replace
175	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  nid);  [CE]  not  a  statement  [FE]                          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  nid);	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    nid);    	non-compiled	[CE]  not  a  statement	28	None	replace
176	[BUG]  [BUGGY]  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  nid);  [CE]  not  a  statement  [FE]                            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  nid);	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    nid);    	non-compiled	[CE]  not  a  statement	28	None	replace
177	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  nid);  [CE]  not  a  statement  [FE]                              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  nid);	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    nid);    	non-compiled	[CE]  not  a  statement	28	None	replace
178	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID);  [CE]  cannot  find  symbol  NID  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid,  NID);	  nid    =    header.readUnsignedByte(length,    nid);    	non-compiled	[CE]  cannot  find  symbol  NID	56	None	replace
179	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  currentFolderIndex);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  currentFolderIndex);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid,  currentFolderIndex);	  nid    =    header.readUnsignedByte(length,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	56	None	replace
180	[BUG]  [BUGGY]  reader.readStreamsInfo(header,  archive.folders[i]);  [CE]  cannot  find  symbol  i  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  reader.readStreamsInfo(header,  archive.folders[i]);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	reader.readStreamsInfo(header,  archive.folders[i]);	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    i++)    {    readStreamsInfo(header,    archive.folders[i]);    }    	non-compiled	[CE]  cannot  find  symbol  i	46	None	replace
181	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  if(nid  <  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  if(nid  <  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  if(nid  <  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName    ==    null    ||    fileName.length()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
182	[BUG]  [BUGGY]  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }  [CE]  incompatible  types  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName    ==    null    ||    fileName.length()    ==    0)    {    return;    }    	non-compiled	[CE]  incompatible  types	69	None	replace
183	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName    ==    null    ||    fileName.length()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
184	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  if(nid  <  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte();  if(nid  <  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedByte();  if(nid  <  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName    ==    null    ||    fileName.length()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
185	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName    ==    null    ||    fileName.length()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
186	[BUG]  [BUGGY]  File  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }  [CE]  incompatible  types  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  File  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	File  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName    ==    null    ||    fileName.length()    ==    0)    {    return;    }    	non-compiled	[CE]  incompatible  types	69	None	replace
187	[BUG]  [BUGGY]  nid  =  header.readUnsignedSize(sIGNATURE_HEADER_SIZE);  [CE]  cannot  find  symbol  sIGNATURE_HEADER_SIZE  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedSize(sIGNATURE_HEADER_SIZE);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedSize(sIGNATURE_HEADER_SIZE);	  nid    =    header.readUnsignedSize(nid);    	non-compiled	[CE]  cannot  find  symbol  sIGNATURE_HEADER_SIZE	52	None	replace
188	[BUG]  [BUGGY]  nid  =  header.readUnsignedSize(nid,  archive);  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedSize(nid,  archive);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedSize(nid,  archive);	  nid    =    header.readUnsignedSize(nid);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
189	[BUG]  [BUGGY]  nid  =  header.readUnsignedSize(nid  +  1);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedSize(nid  +  1);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedSize(nid  +  1);	  nid    =    header.readUnsignedSize(nid);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
190	[BUG]  [BUGGY]  nid  =  header.readUnsignedSize(nid,  fileName);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedSize(nid,  fileName);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedSize(nid,  fileName);	  nid    =    header.readUnsignedSize(nid);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
191	[BUG]  [BUGGY]  nid  =  header.readUnsignedSize(nid,  archive.folders);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedSize(nid,  archive.folders);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedSize(nid,  archive.folders);	  nid    =    header.readUnsignedSize(nid);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
192	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	4	12	replace
193	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	4	12	replace
194	[BUG]  [BUGGY]  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	4	12	replace
195	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	4	12	replace
196	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
197	[BUG]  [BUGGY]  [FE]  IOException  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	4	12	replace
198	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);  [FE]  IOException  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	4	12	replace
199	[BUG]  [BUGGY]  [FE]  IOException  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	4	12	replace
200	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);  [FE]  IOException  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	4	12	replace
201	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedSize();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Integer  nid  =  header.readUnsignedSize();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Integer  nid  =  header.readUnsignedSize();	  int    nid    =    header.readUnsignedSize();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	37	None	replace
202	[BUG]  [BUGGY]  int  nid  =  inputStreamStack.readUnsignedSize();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  inputStreamStack.readUnsignedSize();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  inputStreamStack.readUnsignedSize();	  int    nid    =    header.readUnsignedSize();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	37	None	replace
203	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  fileName  =  header.readUnsignedByte();  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  fileName  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  fileName  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    fileName    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	60	None	replace
204	[BUG]  [BUGGY]  fileName  =  header.readUnsignedByte();  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  fileName  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	fileName  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    fileName    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	60	None	replace
205	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  fileName  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte();  fileName  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedByte();  fileName  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    fileName    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	60	None	replace
206	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  fileName  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  fileName  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Integer  nid  =  header.readUnsignedByte();  fileName  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    fileName    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	60	None	replace
207	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  fileName  =  header.readUnsignedByte()  +  1;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  fileName  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  fileName  =  header.readUnsignedByte()  +  1;	  nid    =    header.readUnsignedByte()    +    1;    fileName    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	60	None	replace
208	[BUG]  [BUGGY]  reader.readUnsignedByte();  fileName  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  reader  [FE]                        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  reader.readUnsignedByte();  fileName  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	reader.readUnsignedByte();  fileName  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    fileName    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol  reader	60	None	replace
209	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedInt();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Integer  nid  =  header.readUnsignedInt();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Integer  nid  =  header.readUnsignedInt();	  NID    nid    =    header.readUnsignedInt();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	35	None	replace
210	[BUG]  [BUGGY]  nid  =  currentFolderInputStream.readUnsignedSize();  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderInputStream.readUnsignedSize();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  currentFolderInputStream.readUnsignedSize();	  nid    =    inputStreamStack.readUnsignedSize();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
211	[BUG]  [BUGGY]  nid  =  this.currentFolderInputStream.readUnsignedSize();  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  this.currentFolderInputStream.readUnsignedSize();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  this.currentFolderInputStream.readUnsignedSize();	  nid    =    inputStreamStack.readUnsignedSize();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
212	[BUG]  [BUGGY]  nid  =  nextHeaderSize.readUnsignedSize();  [CE]  cannot  find  symbol  nextHeaderSize  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  nextHeaderSize.readUnsignedSize();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  nextHeaderSize.readUnsignedSize();	  nid    =    inputStreamStack.readUnsignedSize();    	non-compiled	[CE]  cannot  find  symbol  nextHeaderSize	38	None	replace
213	[BUG]  [BUGGY]  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  fileName);  [CE]  not  a  statement  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  fileName);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  fileName);	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    fileName);    	non-compiled	[CE]  not  a  statement	25	None	replace
214	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  fileName);  [CE]  not  a  statement  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  fileName);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  fileName);	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    fileName);    	non-compiled	[CE]  not  a  statement	25	None	replace
215	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  fileName);  [CE]  not  a  statement  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  fileName);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  fileName);	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    fileName);    	non-compiled	[CE]  not  a  statement	25	None	replace
216	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  fileName);  [CE]  not  a  statement  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  fileName);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  fileName);	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    fileName);    	non-compiled	[CE]  not  a  statement	25	None	replace
217	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	3	None	add
218	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
219	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  Collection  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  Collection  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    Collection  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
220	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  arrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  arrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    arrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
221	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  System.arraycopy(currentFolderIndex,  nid,  deferredBlockStreams,  0,  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    System.arraycopy(currentFolderIndex,  nid,  deferredBlockStreams,  0,  nid);	  	compilable	  [FE]  ArrayStoreException  	3	12	add
222	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  System.arraycopy(currentFolderIndex,  nid,  deferredBlockStreams,  0,  nid);  [FE]  ArrayStoreException  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  System.arraycopy(currentFolderIndex,  nid,  deferredBlockStreams,  0,  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    System.arraycopy(currentFolderIndex,  nid,  deferredBlockStreams,  0,  nid);	  	compilable	  [FE]  ArrayStoreException  	3	12	add
223	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  Set  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  Set  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    Set  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
224	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedInt()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedInt()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedInt()  +  1;	  int    nid    =    header.readUnsignedInt();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	34	None	replace
225	[BUG]  [BUGGY]  nid  =  currentFolderInputStream.readUnsignedInt();  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderInputStream.readUnsignedInt();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  currentFolderInputStream.readUnsignedInt();	  nid    =    inputStreamStack.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
226	[BUG]  [BUGGY]  nid  =  this.currentFolderInputStream.readUnsignedInt();  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  this.currentFolderInputStream.readUnsignedInt();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  this.currentFolderInputStream.readUnsignedInt();	  nid    =    inputStreamStack.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
227	[BUG]  [BUGGY]  nid  =  reader.readUnsignedInt();  [CE]  cannot  find  symbol  reader  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  reader.readUnsignedInt();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  reader.readUnsignedInt();	  nid    =    inputStreamStack.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol  reader	66	None	replace
228	[BUG]  [BUGGY]  nid  =  sourceStream.readUnsignedInt();  [CE]  cannot  find  symbol  sourceStream  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  sourceStream.readUnsignedInt();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  sourceStream.readUnsignedInt();	  nid    =    inputStreamStack.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol  sourceStream	66	None	replace
229	[BUG]  [BUGGY]  nid  =  header.readEndByte(nid,  archive);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readEndByte(nid,  archive);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readEndByte(nid,  archive);	  nid    =    header.readEndByte(nid);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
230	[BUG]  [BUGGY]  nid  =  header.readEndByte(nid,  archive.folders);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readEndByte(nid,  archive.folders);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readEndByte(nid,  archive.folders);	  nid    =    header.readEndByte(nid);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
231	[BUG]  [BUGGY]  nid  =  header.readEndByte(nid,  NID.kPackInfo);  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readEndByte(nid,  NID.kPackInfo);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readEndByte(nid,  NID.kPackInfo);	  nid    =    header.readEndByte(nid);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
232	[BUG]  [BUGGY]  int  nid  =  header.readEndByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readEndByte()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readEndByte()  +  1;	  nid    =    header.readEndByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	31	None	replace
233	[BUG]  [BUGGY]  nid  =  header,  archive.readEndByte()  +  1;  [CE]  ';'  expected  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header,  archive.readEndByte()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header,  archive.readEndByte()  +  1;	  nid    =    header.readEndByte()    +    1;    	non-compiled	[CE]  ';'  expected	31	None	replace
234	[BUG]  [BUGGY]  Int  nid  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Int  nid  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Int  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    int    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
235	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedByte()  +  1;	          int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	1	None	replace
236	[BUG]  [BUGGY]  byte  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  byte  nid  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	byte  nid  =  header.readUnsignedByte();	          int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	1	None	replace
237	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte(1);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Integer  nid  =  header.readUnsignedByte(1);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Integer  nid  =  header.readUnsignedByte(1);	  int    nid    =    header.readUnsignedByte(1);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	76	None	replace
238	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(2);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte(2);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedByte(2);	  int    nid    =    header.readUnsignedByte(1);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	76	None	replace
239	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(0);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte(0);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedByte(0);	  int    nid    =    header.readUnsignedByte(1);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	76	None	replace
240	[BUG]  [BUGGY]  nid  =  currentFolder.readUnsignedSize();  [CE]  cannot  find  symbol  currentFolder  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  currentFolder.readUnsignedSize();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  currentFolder.readUnsignedSize();	  nid    =    file.readUnsignedSize();    	non-compiled	[CE]  cannot  find  symbol  currentFolder	40	None	replace
241	[BUG]  [BUGGY]  nid  =  path.readUnsignedSize();  [CE]  cannot  find  symbol  path  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  path.readUnsignedSize();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  path.readUnsignedSize();	  nid    =    file.readUnsignedSize();    	non-compiled	[CE]  cannot  find  symbol  path	40	None	replace
242	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  NID  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  NID  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  NID  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  NID  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    NID    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol  NID	59	None	replace
243	[BUG]  [BUGGY]  NID  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  NID  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  NID  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	NID  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    NID    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol  NID	59	None	replace
244	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  NID  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte();  NID  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedByte();  NID  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    NID    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	59	None	replace
245	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	nid        =        header.readUnsignedByte()        +        1;        nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;	  	compilable	  [FE]  IOException  	20	12	add
246	[BUG]  [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid        =        header.readUnsignedByte()        +        1;        nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;	  	compilable	  [FE]  IOException  	20	12	add
247	[BUG]  [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  int  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  int  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid        =        header.readUnsignedByte()        +        1;        nid    =    header.readUnsignedByte()    +    1;    int  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	20	None	add
248	[BUG]  [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  DataInput  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  DataInput  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid        =        header.readUnsignedByte()        +        1;        nid    =    header.readUnsignedByte()    +    1;    DataInput  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	20	None	add
249	[BUG]  [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  InputStream  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  InputStream  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid        =        header.readUnsignedByte()        +        1;        nid    =    header.readUnsignedByte()    +    1;    InputStream  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	20	None	add
250	[BUG]  [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  NID  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  NID  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid        =        header.readUnsignedByte()        +        1;        nid    =    header.readUnsignedByte()    +    1;    NID  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	20	None	add
251	[BUG]  [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  nid  =  head.readUnsignedByte()  +  1;  [CE]  cannot  find  symbol  head  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  nid  =  head.readUnsignedByte()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid        =        header.readUnsignedByte()        +        1;        nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  nid  =  head.readUnsignedByte()  +  1;	  	non-compiled	[CE]  cannot  find  symbol  head	20	None	add
252	[BUG]  [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  fileName  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]                IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  fileName  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid        =        header.readUnsignedByte()        +        1;        nid    =    header.readUnsignedByte()    +    1;    fileName  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	20	None	add
253	[BUG]  [BUGGY]  nid  =  entry.readUnsignedByte();  [CE]  cannot  find  symbol  entry  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  entry.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  entry.readUnsignedByte();	  nid    =    UID.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  entry	61	None	replace
254	[BUG]  [BUGGY]  nid  =  header.readUnsignedInt()  +  2;  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedInt()  +  2;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedInt()  +  2;	  nid    =    header.readUnsignedInt()    +    1;    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
255	[BUG]  [BUGGY]  NID  nid  =  header.readUnsignedInt()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  NID  nid  =  header.readUnsignedInt()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	NID  nid  =  header.readUnsignedInt()  +  1;	  nid    =    header.readUnsignedInt()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	41	None	replace
256	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedSize()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedSize()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedSize()  +  1;	  nid    =    header.readUnsignedSize()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	53	None	replace
257	[BUG]  [BUGGY]  nid  =  header.readUnsignedSize(nid)+  1;  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedSize(nid)+  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedSize(nid)+  1;	  nid    =    header.readUnsignedSize()    +    1;    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
258	[BUG]  [BUGGY]  nid  =  nid.readUnsignedByte();  [CE]  int  cannot  be  dereferenced  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  nid.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  nid.readUnsignedByte();	  nid    =    head.readUnsignedByte();    	non-compiled	[CE]  int  cannot  be  dereferenced	32	None	replace
259	[BUG]  [BUGGY]  nid  =  inputStreamStack.readUnsignedByte();  [CE]  cannot  find  symbol  inputStreamStack  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  inputStreamStack.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  inputStreamStack.readUnsignedByte();	  nid    =    head.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	32	None	replace
260	[BUG]  [BUGGY]  nid  =  source.readUnsignedByte();  [CE]  cannot  find  symbol  source  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  source.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  source.readUnsignedByte();	  nid    =    head.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  source	32	None	replace
261	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nid;  ++i)  {  readStreamsInfo(header,  archive.folders[i]);  }  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  for(int  i  =  0;  i  <  nid;  ++i)  {  readStreamsInfo(header,  archive.folders[i]);  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	for(int  i  =  0;  i  <  nid;  ++i)  {  readStreamsInfo(header,  archive.folders[i]);  }	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    ++i)    {    readStreamsInfo(header,    archive.folders[i]);    }    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	70	None	replace
262	[BUG]  [BUGGY]  nid  =  currentFolderIndex.readUnsignedByte(header);  [CE]  int  cannot  be  dereferenced  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderIndex.readUnsignedByte(header);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  currentFolderIndex.readUnsignedByte(header);	  nid    =    header.readUnsignedByte(currentFolderIndex);    	non-compiled	[CE]  int  cannot  be  dereferenced	48	None	replace
263	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentEntryIndex,  nid);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentEntryIndex,  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(currentEntryIndex,  nid);	  nid    =    header.readUnsignedByte(currentFolderIndex);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	48	None	replace
264	[BUG]  [BUGGY]  nid  =  inputStreamStack.readUnsignedByte(currentFolderIndex);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  inputStreamStack.readUnsignedByte(currentFolderIndex);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  inputStreamStack.readUnsignedByte(currentFolderIndex);	  nid    =    header.readUnsignedByte(currentFolderIndex);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	48	None	replace
265	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  null;  [CE]  not  a  statement  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  null;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  null;	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    null;    	non-compiled	[CE]  not  a  statement	24	None	replace
266	[BUG]  [BUGGY]  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  null;  [CE]  not  a  statement  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  null;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  null;	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    null;    	non-compiled	[CE]  not  a  statement	24	None	replace
267	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  null;  [CE]  not  a  statement  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  null;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  null;	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    null;    	non-compiled	[CE]  not  a  statement	24	None	replace
268	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  null;  [CE]  not  a  statement  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  null;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  null;	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    null;    	non-compiled	[CE]  not  a  statement	24	None	replace
269	[BUG]  [BUGGY]  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo));  nid  =  header.readUnsignedByte();  [CE]  not  a  statement  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo));  nid  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo));  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo));    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  not  a  statement	22	None	replace
270	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo));  nid  =  header.readUnsignedByte();  [CE]  not  a  statement  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo));  nid  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo));  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo));    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  not  a  statement	22	None	replace
271	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo));  nid  =  header.readUnsignedByte();  [CE]  not  a  statement  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo));  nid  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo));  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo));    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  not  a  statement	22	None	replace
272	[BUG]  [BUGGY]  NID  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo));  nid  =  header.readUnsignedByte();  [CE]  not  a  statement  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  NID  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo));  nid  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	NID  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo));  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo));    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  not  a  statement	22	None	replace
273	[BUG]  [BUGGY]  Nid  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo));  nid  =  header.readUnsignedByte();  [CE]  not  a  statement  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Nid  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo));  nid  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Nid  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo));  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo));    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  not  a  statement	22	None	replace
274	[BUG]  [BUGGY]  NID  nid  =  header.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  NID  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	NID  nid  =  header.readUnsignedByte()  +  1;	  NID    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	19	None	replace
275	[BUG]  [BUGGY]  SIGNATURE_HEADER_SIZE  =  header.readUnsignedByte();  [CE]  cannot  assign  a  value  to  final  variable  SIGNATURE_HEADER_SIZE  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  SIGNATURE_HEADER_SIZE  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	SIGNATURE_HEADER_SIZE  =  header.readUnsignedByte();	  NID    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  SIGNATURE_HEADER_SIZE	19	None	replace
276	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  1);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  1);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	6	12	replace
277	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  1);  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  1);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  1);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	6	12	replace
278	[BUG]  [BUGGY]  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  6);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  6);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	6	12	replace
279	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  6);  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  6);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  6);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	6	12	replace
280	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  7ZSignature);  [CE]  ')'  expected  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  7ZSignature);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  7ZSignature);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  ')'  expected	6	None	replace
281	[BUG]  [BUGGY]  [FE]  IOException  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  2);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  2);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	6	12	replace
282	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  2);  [FE]  IOException  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  2);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  2);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	6	12	replace
283	[BUG]  [BUGGY]  [FE]  IOException  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  4);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  4);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	6	12	replace
284	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  4);  [FE]  IOException  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  4);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  4);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	6	12	replace
285	[BUG]  [BUGGY]  [FE]  IOException  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  3);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  3);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	6	12	replace
286	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  3);  [FE]  IOException  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  3);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  3);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	6	12	replace
287	[BUG]  [BUGGY]  Nid  nid  =  NID.readUnsignedInt();  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Nid  nid  =  NID.readUnsignedInt();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Nid  nid  =  NID.readUnsignedInt();	  Nid    nid    =    header.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
288	[BUG]  [BUGGY]  Nid  nid  =  this.header.readUnsignedInt();  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Nid  nid  =  this.header.readUnsignedInt();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Nid  nid  =  this.header.readUnsignedInt();	  Nid    nid    =    header.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
289	[BUG]  [BUGGY]  Ned  nid  =  header.readUnsignedInt();  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Ned  nid  =  header.readUnsignedInt();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Ned  nid  =  header.readUnsignedInt();	  Nid    nid    =    header.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
290	[BUG]  [BUGGY]  Nid  nid  =  header.getUnsignedInt();  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Nid  nid  =  header.getUnsignedInt();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Nid  nid  =  header.getUnsignedInt();	  Nid    nid    =    header.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
291	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    Integer    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	71	None	replace
292	[BUG]  [BUGGY]  Enum.getInteger(nid)  >=  0;  Integer  nid  =  header.readUnsignedByte();  [CE]  not  a  statement  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Enum.getInteger(nid)  >=  0;  Integer  nid  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Enum.getInteger(nid)  >=  0;  Integer  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    Integer    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  not  a  statement	71	None	replace
293	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  fileName,  nid);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  fileName,  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(inputStreamStack,  fileName,  nid);	  nid    =    header.readUnsignedByte(fileName,    nid);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	54	None	replace
294	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(fileName,  archive.folders);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(fileName,  archive.folders);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(fileName,  archive.folders);	  nid    =    header.readUnsignedByte(fileName,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	54	None	replace
295	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(fileName,  archive);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(fileName,  archive);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(fileName,  archive);	  nid    =    header.readUnsignedByte(fileName,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	54	None	replace
296	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(fileName,  NID.kUnpackInfo);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(fileName,  NID.kUnpackInfo);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(fileName,  NID.kUnpackInfo);	  nid    =    header.readUnsignedByte(fileName,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	54	None	replace
297	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(data,  fileName,  nid);  [CE]  cannot  find  symbol  data  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(data,  fileName,  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(data,  fileName,  nid);	  nid    =    header.readUnsignedByte(fileName,    nid);    	non-compiled	[CE]  cannot  find  symbol  data	54	None	replace
298	[BUG]  [BUGGY]  nid  =  inputStreamStack.readUnsignedSize(header,  nid);  [CE]  cannot  find  symbol  inputStreamStack  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  inputStreamStack.readUnsignedSize(header,  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  inputStreamStack.readUnsignedSize(header,  nid);	  nid    =    header.readUnsignedSize(nid);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	52	None	replace
299	[BUG]  [BUGGY]  nid  =  header.readUnsignedSize(NID.kPackInfo);  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedSize(NID.kPackInfo);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedSize(NID.kPackInfo);	  nid    =    header.readUnsignedSize(nid);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
300	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo));  nid  =  header.readUnsignedByte();  [CE]  not  a  statement  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo));  nid  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Integer  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo));  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo));    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  not  a  statement	22	None	replace
301	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo));  [CE]  not  a  statement  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo));  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo));	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo));    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  not  a  statement	22	None	replace
302	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(header);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte(header);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedByte(header);	          int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	1	None	replace
303	[BUG]  [BUGGY]  nid  =  file.readUnsignedSize(nid);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedSize(nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  file.readUnsignedSize(nid);	  nid    =    file.readUnsignedSize();    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
304	[BUG]  [BUGGY]  nid  =  file.readUnsignedSize()  +  1;  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedSize()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  file.readUnsignedSize()  +  1;	  nid    =    file.readUnsignedSize();    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
305	[BUG]  [BUGGY]  nid  =  file.getUnsignedSize();  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.getUnsignedSize();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  file.getUnsignedSize();	  nid    =    file.readUnsignedSize();    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
306	[BUG]  [BUGGY]  nid  =  source.readUnsignedSize();  [CE]  cannot  find  symbol  source  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  source.readUnsignedSize();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  source.readUnsignedSize();	  nid    =    file.readUnsignedSize();    	non-compiled	[CE]  cannot  find  symbol  source	40	None	replace
307	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  InputStream  nid  =  header.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte();  InputStream  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedByte();  InputStream  nid  =  header.readUnsignedByte()  +  1;	  nid    =    header.readUnsignedByte()    +    1;    InputStream    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	57	None	replace
308	[BUG]  [BUGGY]  Integer  nid  =  inputStreamStack.peek();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Integer  nid  =  inputStreamStack.peek();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Integer  nid  =  inputStreamStack.peek();	          if(nid    ==    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    i++)    {    readUnpackInfo(header,    archive);    }    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	43	None	replace
309	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnpackInfo(header);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnpackInfo(header);  nid  =  file.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid    =    file.readUnsignedByte();    ((  RandomAccessFile)file).readUnpackInfo(header);  nid  =  file.readUnsignedByte();	  	non-compiled	[CE]  cannot  find  symbol	63	None	add
310	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte();  InputStream  file  =  inputStreamStack.peek();  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  inputStreamStack  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte();  InputStream  file  =  inputStreamStack.peek();  nid  =  file.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid    =    file.readUnsignedByte();    InputStream  file  =  inputStreamStack.peek();  nid  =  file.readUnsignedByte();	  	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	63	None	add
311	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(fileName);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  inputStreamStack  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(fileName);  nid  =  file.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid    =    file.readUnsignedByte();    InputStream  file  =  inputStreamStack.get(fileName);  nid  =  file.readUnsignedByte();	  	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	63	None	add
312	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  NID  =  header.readUnsignedByte()  +  1;  [CE]  cannot  find  symbol  NID  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  NID  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  NID  =  header.readUnsignedByte()  +  1;	  nid    =    header.readUnsignedByte()    +    1;    NID    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol  NID	59	None	replace
313	[BUG]  [BUGGY]  NID  nid  =  header.readEndByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  NID  nid  =  header.readEndByte()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	NID  nid  =  header.readEndByte()  +  1;	  nid    =    header.readEndByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	31	None	replace
314	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(header,  fileName);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(header,  fileName);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(header,  fileName);	  nid    =    header.readUnsignedByte(nid,    fileName);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	11	None	replace
315	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolder,  fileName);  [CE]  cannot  find  symbol  currentFolder  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolder,  fileName);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(currentFolder,  fileName);	  nid    =    header.readUnsignedByte(nid,    fileName);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	11	None	replace
316	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(fileName,  null);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(fileName,  null);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(fileName,  null);	  nid    =    header.readUnsignedByte(nid,    fileName);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	11	None	replace
317	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  nid,  fileName);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  nid,  fileName);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(inputStreamStack,  nid,  fileName);	  nid    =    header.readUnsignedByte(nid,    fileName);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	11	None	replace
318	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  fileName);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  fileName);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(inputStreamStack,  fileName);	  nid    =    header.readUnsignedByte(nid,    fileName);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	11	None	replace
319	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte(header,  archive);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte(header,  archive);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  NID.readUnsignedByte(header,  archive);	  nid    =    header.readUnsignedByte(nid,    NID.kUnpackInfo);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
320	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(header,  NID.kUnpackInfo);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(header,  NID.kUnpackInfo);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(header,  NID.kUnpackInfo);	  nid    =    header.readUnsignedByte(nid,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	12	None	replace
321	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  NID.kUnpackInfo);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  NID.kUnpackInfo);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(inputStreamStack,  NID.kUnpackInfo);	  nid    =    header.readUnsignedByte(nid,    NID.kUnpackInfo);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	12	None	replace
322	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName    ==    null    ||    fileName.length()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
323	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName    ==    null    ||    fileName.length()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
324	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolder,  nid);  [CE]  cannot  find  symbol  currentFolder  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolder,  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(currentFolder,  nid);	  nid    =    header.readUnsignedByte(inputStreamStack,    nid);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	15	None	replace
325	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(header,  nid);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(header,  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(header,  nid);	  nid    =    header.readUnsignedByte(inputStreamStack,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	15	None	replace
326	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(fileName,  currentFolderIndex);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(fileName,  currentFolderIndex);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(fileName,  currentFolderIndex);	  nid    =    header.readUnsignedByte(currentFolderIndex);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	48	None	replace
327	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  fileName);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  fileName);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(currentFolderIndex,  fileName);	  nid    =    header.readUnsignedByte(currentFolderIndex);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	48	None	replace
328	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  currentFolderIndex);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  currentFolderIndex);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(inputStreamStack,  currentFolderIndex);	  nid    =    header.readUnsignedByte(currentFolderIndex);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	48	None	replace
329	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  NID.kPackInfo);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  NID.kPackInfo);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(currentFolderIndex,  NID.kPackInfo);	  nid    =    header.readUnsignedByte(currentFolderIndex);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	48	None	replace
330	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithCapacity(nid);  [CE]  cannot  find  symbol  Lists  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithCapacity(nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithCapacity(nid);	          ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  Lists	2	None	replace
331	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(inputStreamStack);  [CE]  cannot  find  symbol  inputStreamStack  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(inputStreamStack);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(inputStreamStack);	          ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	2	None	replace
332	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    Integer    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	71	None	replace
333	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(0,  nid);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(0,  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(0,  nid);	  nid    =    header.readUnsignedByte(3);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	17	None	replace
334	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolder,  fileName,  nid);  [CE]  cannot  find  symbol  currentFolder  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolder,  fileName,  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(currentFolder,  fileName,  nid);	  nid    =    header.readUnsignedByte(fileName,    nid);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	54	None	replace
335	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(fileName,  archive,  nid);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(fileName,  archive,  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(fileName,  archive,  nid);	  nid    =    header.readUnsignedByte(fileName,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	54	None	replace
336	[BUG]  [BUGGY]  NID  nid  =  header.readUnsignedSize()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  NID  nid  =  header.readUnsignedSize()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	NID  nid  =  header.readUnsignedSize()  +  1;	  nid    =    header.readUnsignedSize()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	53	None	replace
337	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  fileName  =  header.readUnsignedByte();  if(fileName  ==  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  fileName  =  header.readUnsignedByte();  if(fileName  ==  null)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  fileName  =  header.readUnsignedByte();  if(fileName  ==  null)  {  return;  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
338	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  fileName  =  header.readUnsignedByte();  if(fileName  ==  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  fileName  =  header.readUnsignedByte();  if(fileName  ==  null)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  fileName  =  header.readUnsignedByte();  if(fileName  ==  null)  {  return;  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
339	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null)  {  return;  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
340	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null)  {  return;  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
341	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  if(nid  <  SIGNATURE_HEADER_SIZE)  {  fileName  =  header.readUnsignedByte();  if(fileName  ==  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  if(nid  <  SIGNATURE_HEADER_SIZE)  {  fileName  =  header.readUnsignedByte();  if(fileName  ==  null)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  if(nid  <  SIGNATURE_HEADER_SIZE)  {  fileName  =  header.readUnsignedByte();  if(fileName  ==  null)  {  return;  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
342	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  if(nid!=  SIGNATURE_HEADER_SIZE)  {  fileName  =  header.readUnsignedByte();  if(fileName  ==  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  if(nid!=  SIGNATURE_HEADER_SIZE)  {  fileName  =  header.readUnsignedByte();  if(fileName  ==  null)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  if(nid!=  SIGNATURE_HEADER_SIZE)  {  fileName  =  header.readUnsignedByte();  if(fileName  ==  null)  {  return;  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
343	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  int  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  int  nid  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  int  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    int    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	23	None	replace
344	[BUG]  [BUGGY]  NID  nid  =  header.readUnsignedByte();  int  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  NID  nid  =  header.readUnsignedByte();  int  nid  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	NID  nid  =  header.readUnsignedByte();  int  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    int    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	23	None	replace
345	[BUG]  [BUGGY]  nid  =  header.readEndByte(header,  archive);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readEndByte(header,  archive);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readEndByte(header,  archive);	  nid    =    header.readEndByte(nid);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
346	[BUG]  [BUGGY]  nid  =  header.readEndByte(currentFolderIndex);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readEndByte(currentFolderIndex);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readEndByte(currentFolderIndex);	  nid    =    header.readEndByte(nid);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
347	[BUG]  [BUGGY]  nid  =  header.readEndByte(nid  +  1);  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readEndByte(nid  +  1);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readEndByte(nid  +  1);	  nid    =    header.readEndByte(nid);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
348	[BUG]  [BUGGY]  nid  =  NID.readUnsignedSize(currentFolderIndex);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedSize(currentFolderIndex);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  NID.readUnsignedSize(currentFolderIndex);	  nid    =    NID.readUnsignedSize();    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
349	[BUG]  [BUGGY]  nid  =  NID.readUnsignedSize(header);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedSize(header);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  NID.readUnsignedSize(header);	  nid    =    NID.readUnsignedSize();    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
350	[BUG]  [BUGGY]  NID  nid  =  NID.readUnsignedSize();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  NID  nid  =  NID.readUnsignedSize();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	NID  nid  =  NID.readUnsignedSize();	  nid    =    NID.readUnsignedSize();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	39	None	replace
351	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  header);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  header);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid,  header);	  nid    =    header.readUnsignedByte(length,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	56	None	replace
352	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  source);  [CE]  cannot  find  symbol  source  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  source);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid,  source);	  nid    =    header.readUnsignedByte(length,    nid);    	non-compiled	[CE]  cannot  find  symbol  source	56	None	replace
353	[BUG]  [BUGGY]  NID  nid  =  header.readUnsignedByte(nid);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  NID  nid  =  header.readUnsignedByte(nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	NID  nid  =  header.readUnsignedByte(nid);	  NID    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	19	None	replace
354	[BUG]  [BUGGY]  nid  =  receiver.readUnsignedByte();  [CE]  cannot  find  symbol  receiver  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  receiver.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  receiver.readUnsignedByte();	  nid    =    head.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  receiver	32	None	replace
355	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(header);  [CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte(header);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  file.readUnsignedByte(header);	  nid    =    file.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;	64	None	replace
356	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(0);  [CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte(0);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  file.readUnsignedByte(0);	  nid    =    file.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;	64	None	replace
357	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(header,  archive);  [CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte(header,  archive);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  file.readUnsignedByte(header,  archive);	  nid    =    file.readUnsignedByte();    	non-compiled	[CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;	64	None	replace
358	[BUG]  [BUGGY]  Nid  nid  =  inputStreamStack.readUnsignedInt();  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Nid  nid  =  inputStreamStack.readUnsignedInt();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Nid  nid  =  inputStreamStack.readUnsignedInt();	  Nid    nid    =    header.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
359	[BUG]  [BUGGY]  Nid  nid  =  header.readUnsignedInt()  +  1;  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Nid  nid  =  header.readUnsignedInt()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Nid  nid  =  header.readUnsignedInt()  +  1;	  Nid    nid    =    header.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
360	[BUG]  [BUGGY]  Nid  nid  =  UID.readUnsignedInt();  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Nid  nid  =  UID.readUnsignedInt();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Nid  nid  =  UID.readUnsignedInt();	  Nid    nid    =    header.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
361	[BUG]  [BUGGY]  Nid  nid  =  file.readUnsignedInt();  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Nid  nid  =  file.readUnsignedInt();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Nid  nid  =  file.readUnsignedInt();	  Nid    nid    =    header.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
362	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(fileName,  header);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(fileName,  header);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(fileName,  header);	  nid    =    header.readUnsignedByte(header);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	49	None	replace
363	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(data,  header);  [CE]  cannot  find  symbol  data  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(data,  header);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(data,  header);	  nid    =    header.readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol  data	49	None	replace
364	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(length,  archive);  [CE]  cannot  find  symbol  length  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(length,  archive);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(length,  archive);	  nid    =    header.readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol  length	49	None	replace
365	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  fileName);  [CE]  not  a  statement  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  fileName);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  fileName);	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    fileName);    	non-compiled	[CE]  not  a  statement	25	None	replace
366	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  name);  [CE]  not  a  statement  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  name);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  name);	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    fileName);    	non-compiled	[CE]  not  a  statement	25	None	replace
367	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  System.arraycopy(deferredBlockStreams,  0,  deferredBlockStreams,  0,  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    System.arraycopy(deferredBlockStreams,  0,  deferredBlockStreams,  0,  nid);	  	compilable	  [FE]  ArrayStoreException  	3	12	add
368	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  System.arraycopy(deferredBlockStreams,  0,  deferredBlockStreams,  0,  nid);  [FE]  ArrayStoreException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  System.arraycopy(deferredBlockStreams,  0,  deferredBlockStreams,  0,  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    System.arraycopy(deferredBlockStreams,  0,  deferredBlockStreams,  0,  nid);	  	compilable	  [FE]  ArrayStoreException  	3	12	add
369	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  System.arraycopy(deferredBlockStreams,  0,  deferredBlockStreams,  1,  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    System.arraycopy(deferredBlockStreams,  0,  deferredBlockStreams,  1,  nid);	  	compilable	  [FE]  ArrayStoreException  	3	12	add
370	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  System.arraycopy(deferredBlockStreams,  0,  deferredBlockStreams,  1,  nid);  [FE]  ArrayStoreException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  System.arraycopy(deferredBlockStreams,  0,  deferredBlockStreams,  1,  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    System.arraycopy(deferredBlockStreams,  0,  deferredBlockStreams,  1,  nid);	  	compilable	  [FE]  ArrayStoreException  	3	12	add
371	[BUG]  [BUGGY]  Nid  nid  =  inputStreamStack.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Nid  nid  =  inputStreamStack.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Nid  nid  =  inputStreamStack.readUnsignedByte();	  Nid    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
372	[BUG]  [BUGGY]  Nid  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Nid  nid  =  file.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Nid  nid  =  file.readUnsignedByte();	  Nid    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
373	[BUG]  [BUGGY]  Nid  nid  =  UID.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Nid  nid  =  UID.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Nid  nid  =  UID.readUnsignedByte();	  Nid    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
374	[BUG]  [BUGGY]  Nid  nid  =  header.readUnsignedByte()  +  1;  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Nid  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Nid  nid  =  header.readUnsignedByte()  +  1;	  Nid    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
375	[BUG]  [BUGGY]  NID  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  null;  [CE]  not  a  statement  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  NID  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  null;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	NID  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  null;	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    null;    	non-compiled	[CE]  not  a  statement	24	None	replace
376	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  null;  [CE]  not  a  statement  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  null;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  null;	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    null;    	non-compiled	[CE]  not  a  statement	24	None	replace
377	[BUG]  [BUGGY]  NID  nid  =  header.readUnsignedByte();  fileName  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  NID  nid  =  header.readUnsignedByte();  fileName  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	NID  nid  =  header.readUnsignedByte();  fileName  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    fileName    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	60	None	replace
378	[BUG]  [BUGGY]  nid  =  header.readStartByte(nid);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readStartByte(nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readStartByte(nid);	  nid    =    header.readStartByte();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
379	[BUG]  [BUGGY]  nid  =  header.readStartByte()  +  6;  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readStartByte()  +  6;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readStartByte()  +  6;	  nid    =    header.readStartByte();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
380	[BUG]  [BUGGY]  nid  =  header.readStartByte(header);  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readStartByte(header);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readStartByte(header);	  nid    =    header.readStartByte();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
381	[BUG]  [BUGGY]  nid  =  header.readEndByte(archive);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readEndByte(archive);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readEndByte(archive);	  nid    =    header.readEndByte(header);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
382	[BUG]  [BUGGY]  nid  =  header.readEndByte(length);  [CE]  cannot  find  symbol  length  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readEndByte(length);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readEndByte(length);	  nid    =    header.readEndByte(header);    	non-compiled	[CE]  cannot  find  symbol  length	51	None	replace
383	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(header,  NID.kPackInfo);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(header,  NID.kPackInfo);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(header,  NID.kPackInfo);	  nid    =    header.readUnsignedByte(nid,    NID.kPackInfo);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	13	None	replace
384	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  name);  [CE]  cannot  find  symbol  name  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  name);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  name);	  nid    =    header.readUnsignedByte(nid,    NID.kPackInfo);    	non-compiled	[CE]  cannot  find  symbol  name	13	None	replace
385	[BUG]  [BUGGY]  Integer  nid  =  inputStreamStack.get(fileName);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Integer  nid  =  inputStreamStack.get(fileName);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Integer  nid  =  inputStreamStack.get(fileName);	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    ++i)    {    readStreamsInfo(header,    archive.folders[i]);    }    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	70	None	replace
386	[BUG]  [BUGGY]  nid  =  UID.readUnsignedInt();  [CE]  cannot  find  symbol  UID  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  UID.readUnsignedInt();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  UID.readUnsignedInt();	  nid    =    NID.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol  UID	36	None	replace
387	[BUG]  [BUGGY]  NID  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  nid);  [CE]  not  a  statement  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  NID  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	NID  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  nid);	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    nid);    	non-compiled	[CE]  not  a  statement	28	None	replace
388	[BUG]  [BUGGY]  nid  =  file.readStartByte();  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readStartByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  file.readStartByte();	  nid    =    file.readEndByte();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
389	[BUG]  [BUGGY]  nid  =  file.readEndByte(header);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readEndByte(header);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  file.readEndByte(header);	  nid    =    file.readEndByte();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
390	[BUG]  [BUGGY]  nid  =  file.readEndByte()  +  1;  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readEndByte()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  file.readEndByte()  +  1;	  nid    =    file.readEndByte();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
391	[BUG]  [BUGGY]  nid  =  file.readEndByte(nid);  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readEndByte(nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  file.readEndByte(nid);	  nid    =    file.readEndByte();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
392	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  name;  [CE]  not  a  statement  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  name;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  name;	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    fileName;    	non-compiled	[CE]  not  a  statement	27	None	replace
393	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  sourceName;  [CE]  not  a  statement  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  sourceName;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  sourceName;	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    fileName;    	non-compiled	[CE]  not  a  statement	27	None	replace
394	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deserredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    ArrayList  <  String>  deserredBlockStreams  =  new  ArrayList  <  String>(nid);	  	compilable	  [FE]  NoClassDefFoundError  	5	12	add
395	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deserredBlockStreams  =  new  ArrayList  <  String>(nid);  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deserredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    ArrayList  <  String>  deserredBlockStreams  =  new  ArrayList  <  String>(nid);	  	compilable	  [FE]  NoClassDefFoundError  	5	12	add
396	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid;  [CE]  ')'  expected  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid;	  	non-compiled	[CE]  ')'  expected	5	None	add
397	[BUG]  [BUGGY]  nid  =  files.readUnsignedInt();  [CE]  cannot  find  symbol  files  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  files.readUnsignedInt();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  files.readUnsignedInt();	  nid    =    file.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol  files	67	None	replace
398	[BUG]  [BUGGY]  nid  =  file.getUnsignedInt();  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.getUnsignedInt();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  file.getUnsignedInt();	  nid    =    file.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
399	[BUG]  [BUGGY]  SIGNATURE_HEADER_SIZE  =  NID.readUnsignedByte();  [CE]  cannot  assign  a  value  to  final  variable  SIGNATURE_HEADER_SIZE  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  SIGNATURE_HEADER_SIZE  =  NID.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	SIGNATURE_HEADER_SIZE  =  NID.readUnsignedByte();	  NID    nid    =    NID.readUnsignedByte();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  SIGNATURE_HEADER_SIZE	62	None	replace
400	[BUG]  [BUGGY]  NID  nid  =  NID.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  NID  nid  =  NID.readUnsignedByte()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	NID  nid  =  NID.readUnsignedByte()  +  1;	  NID    nid    =    NID.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	62	None	replace
401	[BUG]  [BUGGY]  int  nid  =  fileName.readUnsignedSize();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  fileName.readUnsignedSize();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  fileName.readUnsignedSize();	  int    nid    =    header.readUnsignedSize();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	37	None	replace
402	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(data,  header,  archive);  [CE]  cannot  find  symbol  data  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(data,  header,  archive);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(data,  header,  archive);	  nid    =    header.readUnsignedByte(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  data	14	None	replace
403	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(file,  header,  archive);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(file,  header,  archive);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(file,  header,  archive);	  nid    =    header.readUnsignedByte(header,    archive);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	14	None	replace
404	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  if(nid!=  SIGNATURE_HEADER_SIZE)  {  fileName  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  if(nid!=  SIGNATURE_HEADER_SIZE)  {  fileName  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  if(nid!=  SIGNATURE_HEADER_SIZE)  {  fileName  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
405	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  if(nid!=  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte();  if(nid!=  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedByte();  if(nid!=  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
406	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  if(nid!=  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  if(nid!=  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  if(nid!=  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
407	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  fileName  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  fileName  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  fileName  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
408	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  if(nid!=  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  if(nid!=  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Integer  nid  =  header.readUnsignedByte();  if(nid!=  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
409	[BUG]  [BUGGY]  NID  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  NID  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  NID  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	NID  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol  NID	21	None	replace
410	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  nid,  NID.kPackInfo);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  nid,  NID.kPackInfo);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(currentFolderIndex,  nid,  NID.kPackInfo);	  nid    =    header.readUnsignedByte(currentFolderIndex,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	55	None	replace
411	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  nid,  archive);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  nid,  archive);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(inputStreamStack,  nid,  archive);	  nid    =    header.readUnsignedByte(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	10	None	replace
412	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolder,  nid,  archive);  [CE]  cannot  find  symbol  currentFolder  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolder,  nid,  archive);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(currentFolder,  nid,  archive);	  nid    =    header.readUnsignedByte(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	10	None	replace
413	[BUG]  [BUGGY]  int  nid  =  fileName.readUnsignedInt();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  fileName.readUnsignedInt();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  fileName.readUnsignedInt();	  int    nid    =    header.readUnsignedInt();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	34	None	replace
414	[BUG]  [BUGGY]  nid  =  nextFolderInputStream.readUnsignedSize();  [CE]  cannot  find  symbol  nextFolderInputStream  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  nextFolderInputStream.readUnsignedSize();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  nextFolderInputStream.readUnsignedSize();	  nid    =    inputStreamStack.readUnsignedSize();    	non-compiled	[CE]  cannot  find  symbol  nextFolderInputStream	38	None	replace
415	[BUG]  [BUGGY]  int  nid  =  NID.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  NID.readUnsignedByte()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  NID.readUnsignedByte()  +  1;	  int    nid    =    NID.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	18	None	replace
416	[BUG]  [BUGGY]  int  nid  =  NID.readUnsignedByte(header);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  NID.readUnsignedByte(header);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  NID.readUnsignedByte(header);	  int    nid    =    NID.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	18	None	replace
417	[BUG]  [BUGGY]  byte  nid  =  NID.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  byte  nid  =  NID.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	byte  nid  =  NID.readUnsignedByte();	  int    nid    =    NID.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	18	None	replace
418	[BUG]  [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  Integer  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  Integer  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid        =        header.readUnsignedByte()        +        1;        nid    =    header.readUnsignedByte()    +    1;    Integer  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	20	None	add
419	[BUG]  [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  nid  =  head.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [CE]  cannot  find  symbol  head  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  nid  =  head.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid        =        header.readUnsignedByte()        +        1;        nid    =    header.readUnsignedByte()    +    1;    nid  =  head.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;	  	non-compiled	[CE]  cannot  find  symbol  head	20	None	add
420	[BUG]  [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  NID  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [CE]  cannot  find  symbol  NID  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  NID  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid        =        header.readUnsignedByte()        +        1;        nid    =    header.readUnsignedByte()    +    1;    NID  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;	  	non-compiled	[CE]  cannot  find  symbol  NID	20	None	add
421	[BUG]  [BUGGY]  nid  =  inputStreamStack.size();  [CE]  cannot  find  symbol  inputStreamStack  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  inputStreamStack.size();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  inputStreamStack.size();	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    if(!inputStreamStack.isEmpty())    {    return;    }    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	47	None	replace
422	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(!inputStreamStack.isEmpty()  ||  header.readUnsignedByte()!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(!inputStreamStack.isEmpty()  ||  header.readUnsignedByte()!=  null)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(!inputStreamStack.isEmpty()  ||  header.readUnsignedByte()!=  null)  {  return;  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    if(!inputStreamStack.isEmpty())    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
423	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(!inputStreamStack.isEmpty()  ||  header.readUnsignedByte()  ==  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(!inputStreamStack.isEmpty()  ||  header.readUnsignedByte()  ==  null)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(!inputStreamStack.isEmpty()  ||  header.readUnsignedByte()  ==  null)  {  return;  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    if(!inputStreamStack.isEmpty())    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
424	[BUG]  [BUGGY]  nid  =  fileName.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  fileName.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  fileName.readUnsignedByte();	  nid    =    UID.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
425	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	4	12	replace
426	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	compilable	  [FE]  IOException  	4	12	replace
427	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  null);  [CE]  not  a  statement  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  null);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  null);	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    null);    	non-compiled	[CE]  not  a  statement	26	None	replace
428	[BUG]  [BUGGY]  Nid  nid  =  header.readEndByte();  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Nid  nid  =  header.readEndByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Nid  nid  =  header.readEndByte();	  nid    =    header.readEndByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
429	[BUG]  [BUGGY]  readStreamsInfo(header,  archive.folders[0]);  [CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  readStreamsInfo(header,  archive.folders[0]);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	readStreamsInfo(header,  archive.folders[0]);	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    for(int    i    =    0;    i    <    nid;    i++)    {    readStreamsInfo(header,    archive.folders[i]);    }    	non-compiled	[CE]  method  readStreamsInfo  in  class  SevenZFile  cannot  be  applied  to  given  types;	46	None	replace
430	[BUG]  [BUGGY]  byte  nid  =  header.readEndByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  byte  nid  =  header.readEndByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	byte  nid  =  header.readEndByte();	  int    nid    =    header.readEndByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	29	None	replace
431	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  NID  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  NID  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Integer  nid  =  header.readUnsignedByte();  NID  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    NID    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	59	None	replace
432	[BUG]  [BUGGY]  nid  =  nid.readUnsignedInt();  [CE]  int  cannot  be  dereferenced  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  nid.readUnsignedInt();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  nid.readUnsignedInt();	  nid    =    inputStreamStack.readUnsignedInt();    	non-compiled	[CE]  int  cannot  be  dereferenced	66	None	replace
433	[BUG]  [BUGGY]  nid  =  nextFolderInputStream.readUnsignedInt();  [CE]  cannot  find  symbol  nextFolderInputStream  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  nextFolderInputStream.readUnsignedInt();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  nextFolderInputStream.readUnsignedInt();	  nid    =    inputStreamStack.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol  nextFolderInputStream	66	None	replace
434	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  2)  ==  NID.kUnpackInfo));  nid  =  header.readUnsignedByte();  [CE]  not  a  statement  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  2)  ==  NID.kUnpackInfo));  nid  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  2)  ==  NID.kUnpackInfo));  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo));    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  not  a  statement	22	None	replace
435	[BUG]  [BUGGY]  nid  =  inputStreamStack.readStartByte();  [CE]  cannot  find  symbol  inputStreamStack  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  inputStreamStack.readStartByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  inputStreamStack.readStartByte();	  nid    =    header.readStartByte();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	30	None	replace
436	[BUG]  [BUGGY]  Nid  nid  =  archive.readUnsignedInt();  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Nid  nid  =  archive.readUnsignedInt();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Nid  nid  =  archive.readUnsignedInt();	  Nid    nid    =    header.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
437	[BUG]  [BUGGY]  Integer  nid  =  NID.readUnsignedInt();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Integer  nid  =  NID.readUnsignedInt();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Integer  nid  =  NID.readUnsignedInt();	  nid    =    NID.readUnsignedInt();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	36	None	replace
438	[BUG]  [BUGGY]  nid  =  inputStreamStack.readUnsignedByte(header,  fileName);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  inputStreamStack.readUnsignedByte(header,  fileName);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  inputStreamStack.readUnsignedByte(header,  fileName);	  nid    =    header.readUnsignedByte(nid,    fileName);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	11	None	replace
439	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  header.length);  [CE]  cannot  find  symbol  length  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  header.length);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  header.length);	  nid    =    header.readUnsignedByte(nid,    NID.kPackInfo);    	non-compiled	[CE]  cannot  find  symbol  length	13	None	replace
440	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  header);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  header);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  header);	  nid    =    header.readUnsignedByte(nid,    NID.kPackInfo);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	13	None	replace
441	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  nid,  NID.kPackInfo);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  nid,  NID.kPackInfo);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(inputStreamStack,  nid,  NID.kPackInfo);	  nid    =    header.readUnsignedByte(nid,    NID.kPackInfo);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	13	None	replace
442	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  *  SIGNATURE_HEADER_SIZE);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  *  SIGNATURE_HEADER_SIZE);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	6	12	replace
443	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  *  SIGNATURE_HEADER_SIZE);  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  *  SIGNATURE_HEADER_SIZE);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  *  SIGNATURE_HEADER_SIZE);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	compilable	  [FE]  IOException  	6	12	replace
444	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.bytes);  [CE]  cannot  find  symbol  bytes  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.bytes);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.bytes);	          ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  cannot  find  symbol  bytes	6	None	replace
445	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName    ==    null    ||    fileName.length()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
446	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Integer  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName    ==    null    ||    fileName.length()    ==    0)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
447	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	nid  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName    ==    null    ||    fileName.length()    ==    0)    {    return;    }    	compilable	  [FE]  NoClassDefFoundError  	69	12	replace
448	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }  [FE]  NoClassDefFoundError  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName    ==    null    ||    fileName.length()    ==    0)    {    return;    }    	compilable	  [FE]  NoClassDefFoundError  	69	12	replace
449	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte()  +  1;  InputStream  nid  =  header.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte()  +  1;  InputStream  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedByte()  +  1;  InputStream  nid  =  header.readUnsignedByte()  +  1;	  nid    =    header.readUnsignedByte()    +    1;    InputStream    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	57	None	replace
450	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  SIGNATURE_HEADER_SIZE);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  SIGNATURE_HEADER_SIZE);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(currentFolderIndex,  SIGNATURE_HEADER_SIZE);	  nid    =    header.readUnsignedByte(currentFolderIndex);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	48	None	replace
451	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  NID);  [CE]  cannot  find  symbol  NID  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  NID);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(currentFolderIndex,  NID);	  nid    =    header.readUnsignedByte(currentFolderIndex);    	non-compiled	[CE]  cannot  find  symbol  NID	48	None	replace
452	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  nextHeaderSizeInt);  [CE]  cannot  find  symbol  nextHeaderSizeInt  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  nextHeaderSizeInt);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(currentFolderIndex,  nextHeaderSizeInt);	  nid    =    header.readUnsignedByte(currentFolderIndex);    	non-compiled	[CE]  cannot  find  symbol  nextHeaderSizeInt	48	None	replace
453	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedSize()  +  SIGNATURE_HEADER_SIZE;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedSize()  +  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedSize()  +  SIGNATURE_HEADER_SIZE;	  int    nid    =    header.readUnsignedSize();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	37	None	replace
454	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  List  <  String>(nid);  [CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  List  <  String>(nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    ArrayList  <  String>  deferredBlockStreams  =  new  List  <  String>(nid);	  	non-compiled	[CE]  variable  deferredBlockStreams  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	5	None	add
455	[BUG]  [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  }  [CE]  illegal  start  of  type  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]          ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	                ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  }	  	non-compiled	[CE]  illegal  start  of  type	5	None	add
456	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readInt();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	nid  =  file.readInt();	  nid    =    file.readUnsignedByte();    	compilable	  [FE]  EOFException  	64	12	replace
457	[BUG]  [BUGGY]  nid  =  file.readInt();  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readInt();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  file.readInt();	  nid    =    file.readUnsignedByte();    	compilable	  [FE]  EOFException  	64	12	replace
458	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kUnpackInfo,  header.length);  [CE]  cannot  find  symbol  length  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kUnpackInfo,  header.length);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid,  NID.kUnpackInfo,  header.length);	  nid    =    header.readUnsignedByte(nid,    NID.kUnpackInfo);    	non-compiled	[CE]  cannot  find  symbol  length	12	None	replace
459	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  nid,  NID.kUnpackInfo);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  nid,  NID.kUnpackInfo);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(inputStreamStack,  nid,  NID.kUnpackInfo);	  nid    =    header.readUnsignedByte(nid,    NID.kUnpackInfo);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	12	None	replace
460	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kUnpackInfo,  header);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kUnpackInfo,  header);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid,  NID.kUnpackInfo,  header);	  nid    =    header.readUnsignedByte(nid,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	12	None	replace
461	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  fileName;  [CE]  not  a  statement  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  fileName;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  fileName;	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    fileName;    	non-compiled	[CE]  not  a  statement	27	None	replace
462	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  nid;  [CE]  not  a  statement  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  nid;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  nid;	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    fileName;    	non-compiled	[CE]  not  a  statement	27	None	replace
463	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  fileName;  [CE]  not  a  statement  [FE]                        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  fileName;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Integer  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  fileName;	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    fileName;    	non-compiled	[CE]  not  a  statement	27	None	replace
464	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  ((  NID  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  null;  [CE]  not  a  statement  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  ((  NID  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  null;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  ((  NID  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  null;	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    null;    	non-compiled	[CE]  not  a  statement	24	None	replace
465	[BUG]  [BUGGY]  Nid  nid  =  header.readUnsignedByte();  fileName  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Nid  nid  =  header.readUnsignedByte();  fileName  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Nid  nid  =  header.readUnsignedByte();  fileName  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    fileName    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
466	[BUG]  [BUGGY]  nid  =  inputStreamStack.readUnsignedByte(currentFolderIndex,  nid);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  inputStreamStack.readUnsignedByte(currentFolderIndex,  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  inputStreamStack.readUnsignedByte(currentFolderIndex,  nid);	  nid    =    header.readUnsignedByte(currentFolderIndex,    nid);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	55	None	replace
467	[BUG]  [BUGGY]  byte  nid  =  header.readUnsignedByte(1);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  byte  nid  =  header.readUnsignedByte(1);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	byte  nid  =  header.readUnsignedByte(1);	  int    nid    =    header.readUnsignedByte(1);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	76	None	replace
468	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	nid    =    file.readUnsignedByte();    ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();	  	compilable	  [FE]  EOFException  	63	12	add
469	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid    =    file.readUnsignedByte();    ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();	  	compilable	  [FE]  EOFException  	63	12	add
470	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte();  file  =  inputStreamStack.peek();  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  inputStreamStack  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte();  file  =  inputStreamStack.peek();  nid  =  file.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid    =    file.readUnsignedByte();    file  =  inputStreamStack.peek();  nid  =  file.readUnsignedByte();	  	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	63	None	add
471	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte();  InputStream  nid  =  file.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte();  InputStream  nid  =  file.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid    =    file.readUnsignedByte();    InputStream  nid  =  file.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	63	None	add
472	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(archive,  header);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(archive,  header);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(archive,  header);	  nid    =    header.readUnsignedByte(header,    archive);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	14	None	replace
473	[BUG]  [BUGGY]  nid  =  file.readUnsignedSize()  +  SIGNATURE_HEADER_SIZE;  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedSize()  +  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  file.readUnsignedSize()  +  SIGNATURE_HEADER_SIZE;	  nid    =    file.readUnsignedSize();    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
474	[BUG]  [BUGGY]  nid  =  inputStreamStack.readUnsignedSize(nid);  [CE]  cannot  find  symbol  inputStreamStack  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  inputStreamStack.readUnsignedSize(nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  inputStreamStack.readUnsignedSize(nid);	  nid    =    header.readUnsignedSize(nid);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	52	None	replace
475	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedSize(nid);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedSize(nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedSize(nid);	  nid    =    header.readUnsignedSize(nid);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	52	None	replace
476	[BUG]  [BUGGY]  nid  =  header.readEndByte(inputStreamStack,  nid);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readEndByte(inputStreamStack,  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readEndByte(inputStreamStack,  nid);	  nid    =    header.readEndByte(nid);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	50	None	replace
477	[BUG]  [BUGGY]  nid  =  inputStreamStack.readEndByte(header);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  inputStreamStack.readEndByte(header);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  inputStreamStack.readEndByte(header);	  nid    =    header.readEndByte(nid);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	50	None	replace
478	[BUG]  [BUGGY]  int  nid  =  reader.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  reader.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  reader.readUnsignedByte();	  int    nid    =    NID.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	18	None	replace
479	[BUG]  [BUGGY]  nid  =  inputStreamStack.readUnsignedByte(header,  nid);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  inputStreamStack.readUnsignedByte(header,  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  inputStreamStack.readUnsignedByte(header,  nid);	  nid    =    header.readUnsignedByte(length,    nid);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	56	None	replace
480	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    	compilable	  [FE]  IOException  	72	12	replace
481	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte();  [FE]  IOException  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    	compilable	  [FE]  IOException  	72	12	replace
482	[BUG]  [BUGGY]  nid  =  source.readUnsignedByte()  +  1;  nid  =  source.readUnsignedByte()  +  1;  [CE]  cannot  find  symbol  source  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  source.readUnsignedByte()  +  1;  nid  =  source.readUnsignedByte()  +  1;  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  source.readUnsignedByte()  +  1;  nid  =  source.readUnsignedByte()  +  1;	  nid    =    header.readUnsignedByte()    +    1;    nid    =    head.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol  source	58	None	replace
483	[BUG]  [BUGGY]  int  nid  =  file.readUnsignedInt();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  file.readUnsignedInt();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  file.readUnsignedInt();	  nid    =    file.readUnsignedInt();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	67	None	replace
484	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  if(nid!=  SIGNATURE_HEADER_SIZE)  {  return;  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  if(nid!=  SIGNATURE_HEADER_SIZE)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Integer  nid  =  header.readUnsignedByte();  if(nid!=  SIGNATURE_HEADER_SIZE)  {  return;  }	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName!=    null)    {    return;    }    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	68	None	replace
485	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	nid  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName!=    null)    {    return;    }    	compilable	  [FE]  NullPointerException  	68	12	replace
486	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }  [FE]  NullPointerException  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName!=    null)    {    return;    }    	compilable	  [FE]  NullPointerException  	68	12	replace
487	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  return;  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Integer  nid  =  header.readUnsignedByte();  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  return;  }	  if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName!=    null)    {    return;    }    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	68	None	replace
488	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  nid);  [CE]  not  a  statement  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  nid);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedByte();  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  nid);	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    nid);    	non-compiled	[CE]  not  a  statement	28	None	replace
489	[BUG]  [BUGGY]  nid  =  header.readEndByte(inputStreamStack,  header);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readEndByte(inputStreamStack,  header);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readEndByte(inputStreamStack,  header);	  nid    =    header.readEndByte(header);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	51	None	replace
490	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  nid,  archive);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  nid,  archive);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(currentFolderIndex,  nid,  archive);	  nid    =    header.readUnsignedByte(nid,    archive);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	10	None	replace
491	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.bytes);  [CE]  cannot  find  symbol  bytes  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.bytes);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid,  NID.bytes);	  nid    =    header.readUnsignedByte(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  bytes	10	None	replace
492	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  if(nid  <  SIGNATURE_HEADER_SIZE)  {  return;  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  if(nid  <  SIGNATURE_HEADER_SIZE)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Integer  nid  =  header.readUnsignedByte();  if(nid  <  SIGNATURE_HEADER_SIZE)  {  return;  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    String    fileName    =    header.readUnsignedByte();    if(fileName    ==    null)    {    return;    }    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	75	None	replace
493	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(!inputStreamStack.isEmpty()  ||  header.readUnsignedByte()!=  0)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(!inputStreamStack.isEmpty()  ||  header.readUnsignedByte()!=  0)  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(!inputStreamStack.isEmpty()  ||  header.readUnsignedByte()!=  0)  {  return;  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    if(!inputStreamStack.isEmpty())    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
494	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||!inputStreamStack.isEmpty())  {  return;  }  [CE]  cannot  find  symbol  inputStreamStack  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||!inputStreamStack.isEmpty())  {  return;  }  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||!inputStreamStack.isEmpty())  {  return;  }	          if(nid    <    SIGNATURE_HEADER_SIZE)    {    if(!inputStreamStack.isEmpty())    {    return;    }    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	47	None	replace
495	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  ((  NID  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  null);  [CE]  not  a  statement  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  ((  NID  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  null);  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte();  ((  NID  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  null);	  nid    =    header.readUnsignedByte()    +    1;    ((    SIGNATURE_HEADER_SIZE    +    1)    ==    NID.kUnpackInfo)?    header.readUnsignedByte()    +    1    :    null);    	non-compiled	[CE]  not  a  statement	26	None	replace
496	[BUG]  [BUGGY]  Nid  nid  =  UUID.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Nid  nid  =  UUID.readUnsignedByte();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Nid  nid  =  UUID.readUnsignedByte();	  Nid    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
497	[BUG]  [BUGGY]  Nid  nid  =  header.readUnsignedSize();  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);      [BUGGY]  Nid  nid  =  header.readUnsignedSize();  [BUGGY]      }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Nid  nid  =  header.readUnsignedSize();	  nid    =    header.readUnsignedSize()    +    1;    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
