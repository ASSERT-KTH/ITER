bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]      int  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]      int  nid  =  header.readUnsignedByte();  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	        int  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	7	None	add
2	[BUG]  [BUGGY]      ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  cannot  find  symbol  Lists  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]      ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	        ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList();	  	non-compiled	[CE]  cannot  find  symbol  Lists	7	None	add
3	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]      ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	        ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	compilable	  [FE]  NoClassDefFoundError  	7	12	add
4	[BUG]  [BUGGY]      ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [FE]  NoClassDefFoundError  [FE]        IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]      ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	        ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  	compilable	  [FE]  NoClassDefFoundError  	7	12	add
5	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]          IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]      ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	        ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	compilable	  [FE]  NoClassDefFoundError  	7	12	add
6	[BUG]  [BUGGY]      ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [FE]  NoClassDefFoundError  [FE]          IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]      ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	        ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  	compilable	  [FE]  NoClassDefFoundError  	7	12	add
7	[BUG]  [BUGGY]      if(nid  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  ++i)  {  readUnpackInfo(header,  archive);  }  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]      if(nid  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  ++i)  {  readUnpackInfo(header,  archive);  }  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	        if(nid  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  ++i)  {  readUnpackInfo(header,  archive);  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
8	[BUG]  [BUGGY]      if(nid  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  i++)  {  readUnpackInfo(header,  archive);  }  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]      if(nid  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  i++)  {  readUnpackInfo(header,  archive);  }  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	        if(nid  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  i++)  {  readUnpackInfo(header,  archive);  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
9	[BUG]  [BUGGY]      if(nid  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  ++i)  {  readStreamsInfo(header,  archive);  }  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]      if(nid  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  ++i)  {  readStreamsInfo(header,  archive);  }  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	        if(nid  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  ++i)  {  readStreamsInfo(header,  archive);  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
10	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  archive);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedByte(nid,  archive);  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid,  archive);	  nid    =    header.readUnsignedByte(nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	4	None	replace
11	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  fileName);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedByte(nid,  fileName);  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid,  fileName);	  nid    =    header.readUnsignedByte(nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	4	None	replace
12	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kUnpackInfo);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kUnpackInfo);  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid,  NID.kUnpackInfo);	  nid    =    header.readUnsignedByte(nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	4	None	replace
13	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kPackInfo);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kPackInfo);  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(nid,  NID.kPackInfo);	  nid    =    header.readUnsignedByte(nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	4	None	replace
14	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(header,  archive);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedByte(header,  archive);  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(header,  archive);	  nid    =    header.readUnsignedByte(nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	4	None	replace
15	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  nid);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                      NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  nid);  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(inputStreamStack,  nid);	  nid    =    header.readUnsignedByte(nid);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	4	None	replace
16	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(2);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedByte(2);  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(2);	  nid    =    header.readUnsignedByte(1);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	10	None	replace
17	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(3);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedByte(3);  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(3);	  nid    =    header.readUnsignedByte(1);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	10	None	replace
18	[BUG]  [BUGGY]  int  nid  =  NID.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  int  nid  =  NID.readUnsignedByte();  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  NID.readUnsignedByte();	  nid    =    NID.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	1	None	replace
19	[BUG]  [BUGGY]  NID  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  NID  nid  =  header.readUnsignedByte();  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	NID  nid  =  header.readUnsignedByte();	  nid    =    NID.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	1	None	replace
20	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;	  	compilable	  [FE]  IOException  	2	12	add
21	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [FE]  IOException  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;	  	compilable	  [FE]  IOException  	2	12	add
22	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo));  nid  =  header.readUnsignedByte()  +  1;  [CE]  not  a  statement  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo));  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid    =    header.readUnsignedByte()    +    1;    ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo));  nid  =  header.readUnsignedByte()  +  1;	  	non-compiled	[CE]  not  a  statement	2	None	add
23	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  int  nid  =  header.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  int  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid    =    header.readUnsignedByte()    +    1;    int  nid  =  header.readUnsignedByte()  +  1;	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	2	None	add
24	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  null;  [CE]  not  a  statement  [FE]          IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  null;  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid    =    header.readUnsignedByte()    +    1;    ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  null;	  	non-compiled	[CE]  not  a  statement	2	None	add
25	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  fileName);  [CE]  not  a  statement  [FE]            IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  fileName);  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid    =    header.readUnsignedByte()    +    1;    ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  fileName);	  	non-compiled	[CE]  not  a  statement	2	None	add
26	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  null);  [CE]  not  a  statement  [FE]              IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  null);  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid    =    header.readUnsignedByte()    +    1;    ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  null);	  	non-compiled	[CE]  not  a  statement	2	None	add
27	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  fileName;  [CE]  not  a  statement  [FE]                IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  fileName;  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid    =    header.readUnsignedByte()    +    1;    ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  fileName;	  	non-compiled	[CE]  not  a  statement	2	None	add
28	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  nid);  [CE]  not  a  statement  [FE]                  IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  nid);  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid    =    header.readUnsignedByte()    +    1;    ((  SIGNATURE_HEADER_SIZE  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  +  1  :  nid);	  	non-compiled	[CE]  not  a  statement	2	None	add
29	[BUG]  [BUGGY]  int  nid  =  header.readEndByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  int  nid  =  header.readEndByte();  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readEndByte();	  nid    =    header.readEndByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	6	None	replace
30	[BUG]  [BUGGY]  nid  =  header.readStartByte();  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readStartByte();  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readStartByte();	  nid    =    header.readEndByte();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
31	[BUG]  [BUGGY]  nid  =  header.readEndByte()  +  1;  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readEndByte()  +  1;  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readEndByte()  +  1;	  nid    =    header.readEndByte();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
32	[BUG]  [BUGGY]  nid  =  head.readUnsignedByte();  [CE]  cannot  find  symbol  head  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  head.readUnsignedByte();  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  head.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol  head	3	None	replace
33	[BUG]  [BUGGY]  Nid  nid  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  Nid  nid  =  header.readUnsignedByte();  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Nid  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
34	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedInt();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  int  nid  =  header.readUnsignedInt();  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedInt();	  nid    =    header.readUnsignedInt();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	5	None	replace
35	[BUG]  [BUGGY]  NID  nid  =  header.readUnsignedInt();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  NID  nid  =  header.readUnsignedInt();  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	NID  nid  =  header.readUnsignedInt();	  nid    =    header.readUnsignedInt();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	5	None	replace
36	[BUG]  [BUGGY]  nid  =  NID.readUnsignedInt();  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  NID.readUnsignedInt();  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  NID.readUnsignedInt();	  nid    =    header.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
37	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedSize();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  int  nid  =  header.readUnsignedSize();  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedSize();	  nid    =    header.readUnsignedSize();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	11	None	replace
38	[BUG]  [BUGGY]  nid  =  inputStreamStack.readUnsignedSize();  [CE]  cannot  find  symbol  inputStreamStack  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  inputStreamStack.readUnsignedSize();  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  inputStreamStack.readUnsignedSize();	  nid    =    header.readUnsignedSize();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	11	None	replace
39	[BUG]  [BUGGY]  nid  =  NID.readUnsignedSize();  [CE]  cannot  find  symbol  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  NID.readUnsignedSize();  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  NID.readUnsignedSize();	  nid    =    header.readUnsignedSize();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
40	[BUG]  [BUGGY]  nid  =  file.readUnsignedSize();  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  file.readUnsignedSize();  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  file.readUnsignedSize();	  nid    =    header.readUnsignedSize();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
41	[BUG]  [BUGGY]  nid  =  header.readUnsignedInt()  +  1;  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedInt()  +  1;  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedInt()  +  1;	  nid    =    header.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
42	[BUG]  [BUGGY]      if(nid  ==  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  i++)  {  readStreamsInfo(header,  archive);  }  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]      if(nid  ==  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  i++)  {  readStreamsInfo(header,  archive);  }  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	        if(nid  ==  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  i++)  {  readStreamsInfo(header,  archive);  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
43	[BUG]  [BUGGY]      if(nid  ==  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  i++)  {  readUnpackInfo(header,  archive);  }  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]      if(nid  ==  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  i++)  {  readUnpackInfo(header,  archive);  }  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	        if(nid  ==  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  i++)  {  readUnpackInfo(header,  archive);  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
44	[BUG]  [BUGGY]      if(nid  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  i++)  {  readStreamsInfo(header,  archive);  }  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]      if(nid  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  i++)  {  readStreamsInfo(header,  archive);  }  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	        if(nid  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  i++)  {  readStreamsInfo(header,  archive);  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
45	[BUG]  [BUGGY]      if(nid  ==  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  i++)  {  readStreamsInfo(header,  archive.folders[i]);  }  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]      if(nid  ==  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  i++)  {  readStreamsInfo(header,  archive.folders[i]);  }  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	        if(nid  ==  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  i++)  {  readStreamsInfo(header,  archive.folders[i]);  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
46	[BUG]  [BUGGY]      if(nid  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  i++)  {  readStreamsInfo(header,  archive.folders[i]);  }  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]      if(nid  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  i++)  {  readStreamsInfo(header,  archive.folders[i]);  }  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	        if(nid  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  i++)  {  readStreamsInfo(header,  archive.folders[i]);  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
47	[BUG]  [BUGGY]      if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(!inputStreamStack.isEmpty())  {  return;  }  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]      if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(!inputStreamStack.isEmpty())  {  return;  }  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	        if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(!inputStreamStack.isEmpty())  {  return;  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
48	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex);  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(currentFolderIndex);	  nid    =    header.readUnsignedByte(0);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	9	None	replace
49	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(header);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedByte(header);  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(header);	  nid    =    header.readUnsignedByte(0);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	9	None	replace
50	[BUG]  [BUGGY]  nid  =  header.readEndByte(nid);  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readEndByte(nid);  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readEndByte(nid);	  nid    =    header.readEndByte();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
51	[BUG]  [BUGGY]  nid  =  header.readEndByte(header);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readEndByte(header);  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readEndByte(header);	  nid    =    header.readEndByte();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
52	[BUG]  [BUGGY]  nid  =  header.readUnsignedSize(nid);  [CE]  cannot  find  symbol  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedSize(nid);  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedSize(nid);	  nid    =    header.readUnsignedSize();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
53	[BUG]  [BUGGY]  nid  =  header.readUnsignedSize()  +  1;  [CE]  cannot  find  symbol  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedSize()  +  1;  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedSize()  +  1;	  nid    =    header.readUnsignedSize();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
54	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(fileName,  nid);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedByte(fileName,  nid);  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(fileName,  nid);	  nid    =    header.readUnsignedByte(nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	4	None	replace
55	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  nid);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  nid);  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(currentFolderIndex,  nid);	  nid    =    header.readUnsignedByte(nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	4	None	replace
56	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(length,  nid);  [CE]  cannot  find  symbol  length  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedByte(length,  nid);  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(length,  nid);	  nid    =    header.readUnsignedByte(nid);    	non-compiled	[CE]  cannot  find  symbol  length	4	None	replace
57	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  InputStream  nid  =  header.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  InputStream  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid    =    header.readUnsignedByte()    +    1;    InputStream  nid  =  header.readUnsignedByte()  +  1;	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	2	None	add
58	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  nid  =  head.readUnsignedByte()  +  1;  [CE]  cannot  find  symbol  head  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  nid  =  head.readUnsignedByte()  +  1;  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid    =    header.readUnsignedByte()    +    1;    nid  =  head.readUnsignedByte()  +  1;	  	non-compiled	[CE]  cannot  find  symbol  head	2	None	add
59	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  NID  =  header.readUnsignedByte()  +  1;  [CE]  cannot  find  symbol  NID  [FE]        IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  NID  =  header.readUnsignedByte()  +  1;  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid    =    header.readUnsignedByte()    +    1;    NID  =  header.readUnsignedByte()  +  1;	  	non-compiled	[CE]  cannot  find  symbol  NID	2	None	add
60	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  fileName  =  header.readUnsignedByte()  +  1;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]          IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  fileName  =  header.readUnsignedByte()  +  1;  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid    =    header.readUnsignedByte()    +    1;    fileName  =  header.readUnsignedByte()  +  1;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	2	None	add
61	[BUG]  [BUGGY]  nid  =  UID.readUnsignedByte();  [CE]  cannot  find  symbol  UID  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  UID.readUnsignedByte();  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  UID.readUnsignedByte();	  nid    =    NID.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  UID	1	None	replace
62	[BUG]  [BUGGY]  NID  nid  =  NID.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  NID  nid  =  NID.readUnsignedByte();  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	NID  nid  =  NID.readUnsignedByte();	  nid    =    NID.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	1	None	replace
63	[BUG]  [BUGGY]  [FE]  EOFException  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  file.readUnsignedByte();  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	add	nid  =  file.readUnsignedByte();	  nid    =    NID.readUnsignedByte();    	compilable	  [FE]  EOFException  	1	12	replace
64	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte();  [FE]  EOFException  [FE]            NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  file.readUnsignedByte();  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  file.readUnsignedByte();	  nid    =    NID.readUnsignedByte();    	compilable	  [FE]  EOFException  	1	12	replace
65	[BUG]  [BUGGY]  Nid  nid  =  header.readUnsignedInt();  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  Nid  nid  =  header.readUnsignedInt();  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	Nid  nid  =  header.readUnsignedInt();	  nid    =    header.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
66	[BUG]  [BUGGY]  nid  =  inputStreamStack.readUnsignedInt();  [CE]  cannot  find  symbol  inputStreamStack  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  inputStreamStack.readUnsignedInt();  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  inputStreamStack.readUnsignedInt();	  nid    =    header.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	5	None	replace
67	[BUG]  [BUGGY]  nid  =  file.readUnsignedInt();  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  file.readUnsignedInt();  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  file.readUnsignedInt();	  nid    =    header.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
68	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName!=  null)  {  return;  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
69	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null  ||  fileName.length()  ==  0)  {  return;  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
70	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  ++i)  {  readStreamsInfo(header,  archive.folders[i]);  }  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  ++i)  {  readStreamsInfo(header,  archive.folders[i]);  }  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE)  {  for(int  i  =  0;  i  <  nid;  ++i)  {  readStreamsInfo(header,  archive.folders[i]);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
71	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  Integer  nid  =  header.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  Integer  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid    =    header.readUnsignedByte()    +    1;    Integer  nid  =  header.readUnsignedByte()  +  1;	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	2	None	add
72	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  [CE]  illegal  start  of  type  [FE]      IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  }	  	non-compiled	[CE]  illegal  start  of  type	2	None	add
73	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(1)  +  1;  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]          NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  header.readUnsignedByte(1)  +  1;  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  header.readUnsignedByte(1)  +  1;	  nid    =    header.readUnsignedByte(1);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	10	None	replace
74	[BUG]  [BUGGY]  nid  =  file.readEndByte();  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  file.readEndByte();  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  file.readEndByte();	  nid    =    header.readEndByte();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
75	[BUG]  [BUGGY]      if(nid  <  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]      if(nid  <  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null)  {  return;  }  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	        if(nid  <  SIGNATURE_HEADER_SIZE)  {  String  fileName  =  header.readUnsignedByte();  if(fileName  ==  null)  {  return;  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
76	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(1);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  int  nid  =  header.readUnsignedByte(1);  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	int  nid  =  header.readUnsignedByte(1);	  nid    =    header.readUnsignedByte(0);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	9	None	replace
77	[BUG]  [BUGGY]  nid  =  nid.readUnsignedSize();  [CE]  int  cannot  be  dereferenced  [FE]        NoClassDefFoundError    [CONTEXT]    private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);    [BUGGY]  nid  =  nid.readUnsignedSize();  [BUGGY]    }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	324	324	12	replace	nid  =  nid.readUnsignedSize();	  nid    =    header.readUnsignedSize();    	non-compiled	[CE]  int  cannot  be  dereferenced	11	None	replace
