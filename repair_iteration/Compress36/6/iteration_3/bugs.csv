bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  2)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  2)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  NoClassDefFoundError  	83	12	replace
2	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  2)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  2)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  2)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  NoClassDefFoundError  	83	12	replace
3	[BUG]  [BUGGY]  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  IOException  	83	12	replace
4	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  IOException  	83	12	replace
5	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  1)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  NoClassDefFoundError  	83	12	replace
6	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  1)  {  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  1)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  NoClassDefFoundError  	83	12	replace
7	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  NoClassDefFoundError  	83	12	replace
8	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  NoClassDefFoundError  	83	12	replace
9	[BUG]  [BUGGY]  [FE]  IOException  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  IOException  	83	12	replace
10	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [FE]  IOException  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  IOException  	83	12	replace
11	[BUG]  [BUGGY]  If  (nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  If  (nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	If  (nid  <  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    If    (nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  ';'  expected	85	None	replace
12	[BUG]  [BUGGY]  If  (nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  If  (nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	If  (nid  ==  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    If    (nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  ';'  expected	85	None	replace
13	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	79	12	replace
14	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [FE]  NoClassDefFoundError  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	79	12	replace
15	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	79	12	replace
16	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [FE]  NoClassDefFoundError  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	79	12	replace
17	[BUG]  [BUGGY]  [FE]  IOException  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kUnpackInfo)    {    	compilable	  [FE]  IOException  	79	12	replace
18	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [FE]  IOException  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kUnpackInfo)    {    	compilable	  [FE]  IOException  	79	12	replace
19	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
20	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
21	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
22	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
23	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  ';'  expected	93	None	add
24	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
25	[BUG]  [BUGGY]  int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    int    nid    =    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    	non-compiled	[CE]  ';'  expected	107	None	replace
26	[BUG]  [BUGGY]  Integer  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  Integer  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	Integer  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    int    nid    =    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    	non-compiled	[CE]  ';'  expected	107	None	replace
27	[BUG]  [BUGGY]  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    int    nid    =    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    	non-compiled	[CE]  ';'  expected	107	None	replace
28	[BUG]  [BUGGY]  int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    int    nid    =    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    	non-compiled	[CE]  ';'  expected	107	None	replace
29	[BUG]  [BUGGY]  int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    int    nid    =    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    	non-compiled	[CE]  ';'  expected	107	None	replace
30	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  currentFolderInputStream.toArray(new  byte[inputStreamStack.size()  ]);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  currentFolderInputStream.toArray(new  byte[inputStreamStack.size()  ]);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  currentFolderInputStream.toArray(new  byte[inputStreamStack.size()  ]);	  InputStream    inputStreamStack    =    inputStreamStack.toArray(new    byte[inputStreamStack.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
31	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  this.inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  this.inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  this.inputStreamStack.toArray(new  byte[inputStreamStack.size()  ]);	  InputStream    inputStreamStack    =    inputStreamStack.toArray(new    byte[inputStreamStack.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
32	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  archive.toArray(new  byte[inputStreamStack.size()  ]);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  archive.toArray(new  byte[inputStreamStack.size()  ]);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  archive.toArray(new  byte[inputStreamStack.size()  ]);	  InputStream    inputStreamStack    =    inputStreamStack.toArray(new    byte[inputStreamStack.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
33	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  header.toArray(new  byte[inputStreamStack.size()  ]);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  header.toArray(new  byte[inputStreamStack.size()  ]);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  header.toArray(new  byte[inputStreamStack.size()  ]);	  InputStream    inputStreamStack    =    inputStreamStack.toArray(new    byte[inputStreamStack.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
34	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  byte[fileName.size()  ]);  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  byte[fileName.size()  ]);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  inputStreamStack.toArray(new  byte[fileName.size()  ]);	  InputStream    inputStreamStack    =    inputStreamStack.toArray(new    byte[inputStreamStack.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
35	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  -  1]);  [CE]  illegal  start  of  type  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  -  1]);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  inputStreamStack.toArray(new  byte[inputStreamStack.size()  -  1]);	  InputStream    inputStreamStack    =    inputStreamStack.toArray(new    byte[inputStreamStack.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
36	[BUG]  [BUGGY]  if  (nid  ==  NID.kPackInfo  ||  nid  ==  NID.folders)  {  [CE]  cannot  find  symbol  folders  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.kPackInfo  ||  nid  ==  NID.folders)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  NID.kPackInfo  ||  nid  ==  NID.folders)  {	  if    (nid    ==    NID.folders    ||    nid    ==    NID.kPackInfo)    {    	non-compiled	[CE]  cannot  find  symbol  folders	129	None	replace
37	[BUG]  [BUGGY]  if  (nid  ==  NID.zPackInfo  ||  nid  ==  NID.kPackInfo)  {  [CE]  cannot  find  symbol  zPackInfo  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.zPackInfo  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  NID.zPackInfo  ||  nid  ==  NID.kPackInfo)  {	  if    (nid    ==    NID.folders    ||    nid    ==    NID.kPackInfo)    {    	non-compiled	[CE]  cannot  find  symbol  zPackInfo	129	None	replace
38	[BUG]  [BUGGY]  if  (nid  ==  NID.fileName  ||  nid  ==  NID.kPackInfo)  {  [CE]  cannot  find  symbol  fileName  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.fileName  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  NID.fileName  ||  nid  ==  NID.kPackInfo)  {	  if    (nid    ==    NID.folders    ||    nid    ==    NID.kPackInfo)    {    	non-compiled	[CE]  cannot  find  symbol  fileName	129	None	replace
39	[BUG]  [BUGGY]  if  (nid  ==  NID.zSize  ||  nid  ==  NID.kPackInfo)  {  [CE]  cannot  find  symbol  zSize  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.zSize  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  NID.zSize  ||  nid  ==  NID.kPackInfo)  {	  if    (nid    ==    NID.folders    ||    nid    ==    NID.kPackInfo)    {    	non-compiled	[CE]  cannot  find  symbol  zSize	129	None	replace
40	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    	compilable	  [FE]  IOException  	18	12	replace
41	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    	compilable	  [FE]  IOException  	18	12	replace
42	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
43	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
44	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
45	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
46	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	80	None	add
47	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
48	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
49	[BUG]  [BUGGY]  if  (nid  ==  NID.kSubStreamsInfo)  {  if  (nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.kSubStreamsInfo)  {  if  (nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if    (nid    ==    NID.kSubStreamsInfo)    {    if  (nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
50	[BUG]  [BUGGY]  if  (nid  ==  NID.kSubStreamsInfo)  {  if  (nid!=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.kSubStreamsInfo)  {  if  (nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if    (nid    ==    NID.kSubStreamsInfo)    {    if  (nid!=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
51	[BUG]  [BUGGY]  if  (nid  ==  NID.kSubStreamsInfo)  {  If  (nid  ==  NID.kSubStreamsInfo)  {  [CE]  ';'  expected  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.kSubStreamsInfo)  {  If  (nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if    (nid    ==    NID.kSubStreamsInfo)    {    If  (nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  ';'  expected	27	None	add
52	[BUG]  [BUGGY]  if  (nid  ==  NID.kSubStreamsInfo)  {  if  (nid  >=  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.kSubStreamsInfo)  {  if  (nid  >=  NID.kSubStreamsInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if    (nid    ==    NID.kSubStreamsInfo)    {    if  (nid  >=  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
53	[BUG]  [BUGGY]  if  (nid  ==  NID.kSubStreamsInfo)  {  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.kSubStreamsInfo)  {  if  (nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if    (nid    ==    NID.kSubStreamsInfo)    {    if  (nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
54	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	102	12	replace
55	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	102	12	replace
56	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  >  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	102	12	replace
57	[BUG]  [BUGGY]  if(nid  >  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  >  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	102	12	replace
58	[BUG]  [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  else  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  'else'  without  'if'  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  else  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    else  if(nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  'else'  without  'if'	95	None	add
59	[BUG]  [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  'else'  without  'if'  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    else  if(nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  'else'  without  'if'	95	None	add
60	[BUG]  [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  else  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  'else'  without  'if'  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  else  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    else  if(nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  'else'  without  'if'	95	None	add
61	[BUG]  [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  else  if(nid  >>  SIGNATURE_HEADER_SIZE)  {  [CE]  'else'  without  'if'  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  else  if(nid  >>  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    else  if(nid  >>  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  'else'  without  'if'	95	None	add
62	[BUG]  [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  other  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  not  a  statement  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  other  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    other  if(nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  not  a  statement	95	None	add
63	[BUG]  [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  another  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  not  a  statement  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  another  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    another  if(nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  not  a  statement	95	None	add
64	[BUG]  [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  other  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  not  a  statement  [FE]                IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  other  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    other  if(nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  not  a  statement	95	None	add
65	[BUG]  [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  int  nid  =  header.readUnsignedByte();  [CE]  illegal  start  of  expression  [FE]                  IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  int  nid  =  header.readUnsignedByte();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    int  nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
66	[BUG]  [BUGGY]  if  (nid  ==  NID.zSize)  {  [CE]  cannot  find  symbol  zSize  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.zSize)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  NID.zSize)  {	  if    (nid    ==    NID.fileName)    {    	non-compiled	[CE]  cannot  find  symbol  zSize	29	None	replace
67	[BUG]  [BUGGY]  if  (nid  ==  NID.length)  {  [CE]  cannot  find  symbol  length  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.length)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  NID.length)  {	  if    (nid    ==    NID.fileName)    {    	non-compiled	[CE]  cannot  find  symbol  length	29	None	replace
68	[BUG]  [BUGGY]  if  (nid  ==  NID.kFolderInfo)  {  [CE]  cannot  find  symbol  kFolderInfo  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.kFolderInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  NID.kFolderInfo)  {	  if    (nid    ==    NID.fileName)    {    	non-compiled	[CE]  cannot  find  symbol  kFolderInfo	29	None	replace
69	[BUG]  [BUGGY]  byte  nid  =  NID.kPackInfo.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  byte  nid  =  NID.kPackInfo.readUnsignedByte();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	byte  nid  =  NID.kPackInfo.readUnsignedByte();	  int    nid    =    NID.kPackInfo.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
70	[BUG]  [BUGGY]  Integer  nid  =  NID.kPackInfo.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  Integer  nid  =  NID.kPackInfo.readUnsignedByte();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	Integer  nid  =  NID.kPackInfo.readUnsignedByte();	  int    nid    =    NID.kPackInfo.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
71	[BUG]  [BUGGY]  int  nid  =  NID.kPackInfo.readUnsignedByte(header);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  =  NID.kPackInfo.readUnsignedByte(header);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  =  NID.kPackInfo.readUnsignedByte(header);	  int    nid    =    NID.kPackInfo.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
72	[BUG]  [BUGGY]  [FE]  IOException  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    {    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	105	12	replace
73	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    {    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	105	12	replace
74	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	116	None	add
75	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	116	None	add
76	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	116	None	add
77	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	116	None	add
78	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEader_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEader_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEader_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	116	None	add
79	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	116	None	add
80	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	116	None	add
81	[BUG]  [BUGGY]  if(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    NID.kUnpackInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	114	None	add
82	[BUG]  [BUGGY]  if(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    NID.kUnpackInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	114	None	add
83	[BUG]  [BUGGY]  if(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    NID.kUnpackInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	114	None	add
84	[BUG]  [BUGGY]  if(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >>  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >>  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    NID.kUnpackInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  >>  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	114	None	add
85	[BUG]  [BUGGY]  if(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kUnpackInfo  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kUnpackInfo  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    NID.kUnpackInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid!=  NID.kUnpackInfo  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	114	None	add
86	[BUG]  [BUGGY]  if(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    NID.kUnpackInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	114	None	add
87	[BUG]  [BUGGY]  if(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]                IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    NID.kUnpackInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    If(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	114	None	add
88	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  1);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  1);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  1);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
89	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  6);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  6);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  6);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
90	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  2);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  2);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  2);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
91	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  7ZSignature);  [CE]  ')'  expected  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  7ZSignature);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  7ZSignature);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  ')'  expected	54	None	replace
92	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length);  [CE]  illegal  start  of  type  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid.length);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
93	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  3);  [CE]  illegal  start  of  type  [FE]                                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  3);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  3);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
94	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    	compilable	  [FE]  IOException  	65	12	replace
95	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    	compilable	  [FE]  IOException  	65	12	replace
96	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
97	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
98	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
99	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
100	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  If(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  If(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    If(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  ';'  expected	39	None	add
101	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
102	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  currentFolderInputStream.getInputStream(nid);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  currentFolderInputStream.getInputStream(nid);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  currentFolderInputStream.getInputStream(nid);	  InputStream    inputStreamStack    =    inputStreamStack.getInputStream(nid);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
103	[BUG]  [BUGGY]  InputStream  nid  =  inputStreamStack.getInputStream(nid);  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  nid  =  inputStreamStack.getInputStream(nid);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  nid  =  inputStreamStack.getInputStream(nid);	  InputStream    inputStreamStack    =    inputStreamStack.getInputStream(nid);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
104	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  this.currentFolderInputStream.getInputStream(nid);  [CE]  illegal  start  of  type  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  this.currentFolderInputStream.getInputStream(nid);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  this.currentFolderInputStream.getInputStream(nid);	  InputStream    inputStreamStack    =    inputStreamStack.getInputStream(nid);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
105	[BUG]  [BUGGY]  InputStream  inStreamStack  =  currentFolderInputStream.getInputStream(nid);  [CE]  illegal  start  of  type  [FE]                                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inStreamStack  =  currentFolderInputStream.getInputStream(nid);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inStreamStack  =  currentFolderInputStream.getInputStream(nid);	  InputStream    inputStreamStack    =    inputStreamStack.getInputStream(nid);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
106	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  header.getInputStream(nid);  [CE]  illegal  start  of  type  [FE]                                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  header.getInputStream(nid);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  header.getInputStream(nid);	  InputStream    inputStreamStack    =    inputStreamStack.getInputStream(nid);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
107	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  this.inputStreamStack.getInputStream(nid);  [CE]  illegal  start  of  type  [FE]                                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  this.inputStreamStack.getInputStream(nid);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  this.inputStreamStack.getInputStream(nid);	  InputStream    inputStreamStack    =    inputStreamStack.getInputStream(nid);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
108	[BUG]  [BUGGY]  InputStream  nid  =  header.getInputStream(nid);  [CE]  illegal  start  of  type  [FE]                                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  nid  =  header.getInputStream(nid);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  nid  =  header.getInputStream(nid);	  InputStream    inputStreamStack    =    inputStreamStack.getInputStream(nid);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
109	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  +  1);  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  +  1);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  +  1);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
110	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length);  [CE]  illegal  start  of  type  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
111	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  +  7ZSignature);  [CE]  ')'  expected  [FE]                                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  +  7ZSignature);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  +  7ZSignature);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  ')'  expected	57	None	replace
112	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);  [CE]  illegal  start  of  type  [FE]                                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
113	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
114	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
115	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
116	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
117	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
118	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
119	[BUG]  [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.folders)  {  [CE]  cannot  find  symbol  folders  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.folders)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.folders)  {	  if    (nid    ==    NID.folders    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  folders	127	None	replace
120	[BUG]  [BUGGY]  if  (nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.folders)  {  [CE]  cannot  find  symbol  folders  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.folders)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.folders)  {	  if    (nid    ==    NID.folders    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  folders	127	None	replace
121	[BUG]  [BUGGY]  if  (nid  ==  NID.fileName  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  fileName  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.fileName  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  NID.fileName  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.folders    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  fileName	127	None	replace
122	[BUG]  [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.folderSize)  {  [CE]  cannot  find  symbol  folderSize  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.folderSize)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.folderSize)  {	  if    (nid    ==    NID.folders    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  folderSize	127	None	replace
123	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
124	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	58	None	add
125	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEader_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEader_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEader_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
126	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEaDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEaDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
127	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
128	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
129	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
130	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
131	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
132	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
133	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
134	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
135	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
136	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                  NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
137	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
138	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
139	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
140	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
141	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  ';'  expected	118	None	add
142	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
143	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  header.peek();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  header.peek();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  header.peek();	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
144	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  currentFolderInputStream.peek();  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  currentFolderInputStream.peek();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  currentFolderInputStream.peek();	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
145	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  this.inputStreamStack.peek();  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  this.inputStreamStack.peek();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  this.inputStreamStack.peek();	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
146	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  this.currentFolderInputStream.peek();  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  this.currentFolderInputStream.peek();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  this.currentFolderInputStream.peek();	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
147	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  nid.peek();  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  nid.peek();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  nid.peek();	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
148	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  new  RandomAccessFileInputStream(currentFolderInputStream,  nid);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  new  RandomAccessFileInputStream(currentFolderInputStream,  nid);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  new  RandomAccessFileInputStream(currentFolderInputStream,  nid);	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
149	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  new  RandomAccessFileInputStream(currentFolderInputStream,  header.readUnsignedByte());  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  new  RandomAccessFileInputStream(currentFolderInputStream,  header.readUnsignedByte());  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  new  RandomAccessFileInputStream(currentFolderInputStream,  header.readUnsignedByte());	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
150	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    	compilable	  [FE]  IOException  	24	12	replace
151	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    	compilable	  [FE]  IOException  	24	12	replace
152	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    	compilable	  [FE]  IOException  	24	12	replace
153	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    	compilable	  [FE]  IOException  	24	12	replace
154	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	24	12	replace
155	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [FE]  NoClassDefFoundError  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	24	12	replace
156	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
157	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
158	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
159	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
160	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
161	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
162	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEaDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEaDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
163	[BUG]  [BUGGY]  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    If(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    	non-compiled	[CE]  ';'  expected	70	None	replace
164	[BUG]  [BUGGY]  ||  nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ||  nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	||  nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    If(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
165	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(nid  -  1);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(nid  -  1);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(nid  -  1);	  InputStream    inputStreamStack    =    getInputStreamStack(nid);    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
166	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(nid  +  1);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(nid  +  1);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(nid  +  1);	  InputStream    inputStreamStack    =    getInputStreamStack(nid);    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
167	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(nid,  fileName);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(nid,  fileName);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(nid,  fileName);	  InputStream    inputStreamStack    =    getInputStreamStack(nid);    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
168	[BUG]  [BUGGY]  InputStream  nid  =  getInputStreamStack(currentFolderInputStream);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  nid  =  getInputStreamStack(currentFolderInputStream);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  nid  =  getInputStreamStack(currentFolderInputStream);	  InputStream    inputStreamStack    =    getInputStreamStack(nid);    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
169	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(nid,  header);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(nid,  header);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(nid,  header);	  InputStream    inputStreamStack    =    getInputStreamStack(nid);    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
170	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(nid,  currentFolderIndex);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(nid,  currentFolderIndex);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(nid,  currentFolderIndex);	  InputStream    inputStreamStack    =    getInputStreamStack(nid);    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
171	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
172	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  >>  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  >>  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  >>  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
173	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
174	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
175	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  If(nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  If(nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE)    {    If(nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
176	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  [Delete]  SIGNATURE_HEADER_SIZE)  {  [CE]  ')'  expected  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  [Delete]  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  [Delete]  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ')'  expected	9	None	add
177	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  [BUGGY]  SIGNATURE_HEADER_SIZE)  {  [CE]  ')'  expected  [FE]                IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  [BUGGY]  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  [BUGGY]  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ')'  expected	9	None	add
178	[BUG]  [BUGGY]  If(nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  If(nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	If(nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE)    {    If(nid    >=    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  ';'  expected	38	None	replace
179	[BUG]  [BUGGY]  Integer  nid  =  nid.intValue();  [CE]  illegal  start  of  type  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  Integer  nid  =  nid.intValue();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	Integer  nid  =  nid.intValue();	  if(nid!=    SIGNATURE_HEADER_SIZE)    {    If(nid    >=    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
180	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	101	None	add
181	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	101	None	add
182	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	101	None	add
183	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	101	None	add
184	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	101	None	add
185	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	101	None	add
186	[BUG]  [BUGGY]  if  (nid  ==  NID.files  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  files  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.files  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  NID.files  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.files)    {    	non-compiled	[CE]  cannot  find  symbol  files	31	None	replace
187	[BUG]  [BUGGY]  if  (nid  ==  NID.files  ||  nid  ==  NID.files)  {  [CE]  cannot  find  symbol  files  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.files  ||  nid  ==  NID.files)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  NID.files  ||  nid  ==  NID.files)  {	  if    (nid    ==    NID.files)    {    	non-compiled	[CE]  cannot  find  symbol  files	31	None	replace
188	[BUG]  [BUGGY]  if  (nid  ==  NID.files  ||  nid  ==  NID.folders)  {  [CE]  cannot  find  symbol  files  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.files  ||  nid  ==  NID.folders)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  NID.files  ||  nid  ==  NID.folders)  {	  if    (nid    ==    NID.files)    {    	non-compiled	[CE]  cannot  find  symbol  files	31	None	replace
189	[BUG]  [BUGGY]  if(nid  >>  SIGNATURE_HEADER_SIZE)  {  [CE]  incompatible  types  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >>  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  >>  SIGNATURE_HEADER_SIZE)  {	  if(nid    >    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  incompatible  types	98	None	replace
190	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
191	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
192	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
193	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
194	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
195	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  ';'  expected	23	None	add
196	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	50	12	replace
197	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	50	12	replace
198	[BUG]  [BUGGY]  Integer  nid  =  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  Integer  nid  =  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	Integer  nid  =  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    Integer    nid    =    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    	non-compiled	[CE]  ';'  expected	90	None	replace
199	[BUG]  [BUGGY]  Integer  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  Integer  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	Integer  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    Integer    nid    =    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    	non-compiled	[CE]  ';'  expected	90	None	replace
200	[BUG]  [BUGGY]  Integer  nid  =  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  Integer  nid  =  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	Integer  nid  =  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    Integer    nid    =    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    	non-compiled	[CE]  ';'  expected	90	None	replace
201	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	46	12	replace
202	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kPackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	46	12	replace
203	[BUG]  [BUGGY]  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kUnpackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    	compilable	  [FE]  IOException  	46	12	replace
204	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kUnpackInfo)  {  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kUnpackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    	compilable	  [FE]  IOException  	46	12	replace
205	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
206	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
207	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  ';'  expected  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  ';'  expected	91	None	add
208	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
209	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
210	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
211	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
212	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
213	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
214	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
215	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
216	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	47	None	add
217	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEader_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEader_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEader_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
218	[BUG]  [BUGGY]  ||(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE))  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ||(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE))  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	||(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE))  {	  if(nid    ==    SIGNATURE_HEADER_SIZE)    {    If(nid    ==    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
219	[BUG]  [BUGGY]  ||(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  SIGNATURE_HEADER_SIZE))  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ||(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  SIGNATURE_HEADER_SIZE))  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	||(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  SIGNATURE_HEADER_SIZE))  {	  if(nid    ==    SIGNATURE_HEADER_SIZE)    {    If(nid    ==    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
220	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  ==  SIGNATURE_HEAFDER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid    ==    SIGNATURE_HEAFDER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE	16	None	replace
221	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid    ==    SIGNATURE_HEAFDER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE	16	None	replace
222	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFTER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFTER_SIZE  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFTER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFTER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid    ==    SIGNATURE_HEAFDER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFTER_SIZE	16	None	replace
223	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
224	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  If(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  If(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    If(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  ';'  expected	41	None	add
225	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
226	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
227	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
228	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >>  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >>  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >>  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
229	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	8	12	replace
230	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >=  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	8	12	replace
231	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
232	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
233	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
234	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
235	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	60	None	add
236	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [Delete]  SIGNATURE_HEADER_SIZE)  {  [CE]  ')'  expected  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [Delete]  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [Delete]  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ')'  expected	60	None	add
237	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEader_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEader_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEader_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
238	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    	compilable	  [FE]  IOException  	119	12	replace
239	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    	compilable	  [FE]  IOException  	119	12	replace
240	[BUG]  [BUGGY]  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    	compilable	  [FE]  IOException  	119	12	replace
241	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    	compilable	  [FE]  IOException  	119	12	replace
242	[BUG]  [BUGGY]  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    If(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    	non-compiled	[CE]  ';'  expected	78	None	replace
243	[BUG]  [BUGGY]  (nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  not  a  statement  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  (nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	(nid  <  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    (nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  not  a  statement	88	None	replace
244	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  (nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  not  a  statement  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  (nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE)  {  (nid  >  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    (nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  not  a  statement	88	None	replace
245	[BUG]  [BUGGY]  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  not  a  statement  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    (nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  not  a  statement	88	None	replace
246	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  (nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  not  a  statement  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  (nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE)  {  (nid  >=  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    (nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  not  a  statement	88	None	replace
247	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
248	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
249	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
250	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
251	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    If(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
252	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
253	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
254	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
255	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
256	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kSubStreamsInfo);  [CE]  illegal  start  of  type  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kSubStreamsInfo);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kSubStreamsInfo);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
257	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStream(nid);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  getInputStream(nid);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  getInputStream(nid);	  InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
258	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamSize();  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamSize();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  getInputStreamSize();	  InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
259	[BUG]  [BUGGY]  InputStream  currentFolderInputStream  =  getInputStreamStack();  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  currentFolderInputStream  =  getInputStreamStack();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  currentFolderInputStream  =  getInputStreamStack();	  InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
260	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack()  -  1;  [CE]  illegal  start  of  type  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack()  -  1;  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  getInputStreamStack()  -  1;	  InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
261	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreams();  [CE]  illegal  start  of  type  [FE]                                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  getInputStreams();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  getInputStreams();	  InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
262	[BUG]  [BUGGY]  ||(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  SIGNATURE_HEADER_SIZE))  {  [CE]  illegal  start  of  expression  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ||(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  SIGNATURE_HEADER_SIZE))  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	||(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  SIGNATURE_HEADER_SIZE))  {	  if(nid!=    SIGNATURE_HEADER_SIZE)    {    If(nid!=    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
263	[BUG]  [BUGGY]  ||(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE))  {  [CE]  illegal  start  of  expression  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ||(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE))  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	||(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE))  {	  if(nid!=    SIGNATURE_HEADER_SIZE)    {    If(nid!=    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
264	[BUG]  [BUGGY]  If(nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  If(nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	If(nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE)    {    If(nid!=    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  ';'  expected	37	None	replace
265	[BUG]  [BUGGY]  byte  nid  =  header.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  byte  nid  =  header.readUnsignedByte();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	byte  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
266	[BUG]  [BUGGY]  int  nid  =  NID.kSubStreamsInfo.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  =  NID.kSubStreamsInfo.readUnsignedByte();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  =  NID.kSubStreamsInfo.readUnsignedByte();	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
267	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte()  +  1;  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  =  header.readUnsignedByte()  +  1;	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
268	[BUG]  [BUGGY]  int  nid  =  NID.kPackInfo;  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  =  NID.kPackInfo;  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  =  NID.kPackInfo;	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
269	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
270	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
271	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
272	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	62	None	add
273	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
274	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEader_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEader_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEader_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
275	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
276	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kUnpackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	44	12	replace
277	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kUnpackInfo)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kUnpackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	44	12	replace
278	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	44	12	replace
279	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	44	12	replace
280	[BUG]  [BUGGY]  if  (nid  ==  NID.zFolders)  {  [CE]  cannot  find  symbol  zFolders  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.zFolders)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  NID.zFolders)  {	  if    (nid    ==    NID.kFolders)    {    	non-compiled	[CE]  cannot  find  symbol  zFolders	30	None	replace
281	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	94	12	replace
282	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	94	12	replace
283	[BUG]  [BUGGY]  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	94	12	replace
284	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	94	12	replace
285	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    NID.kUnpackInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
286	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    NID.kUnpackInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    If(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	25	None	add
287	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kUnpackInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kUnpackInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    NID.kUnpackInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  NID.kUnpackInfo  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
288	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kUnpackInfo  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kUnpackInfo  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    NID.kUnpackInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  NID.kUnpackInfo  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
289	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    NID.kUnpackInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
290	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    NID.kUnpackInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
291	[BUG]  [BUGGY]  [FE]  IOException  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if  (nid  ==  NID.kPackInfo)  {	  if    (nid    ==    NID.z)    {    	compilable	  [FE]  IOException  	32	12	replace
292	[BUG]  [BUGGY]  if  (nid  ==  NID.kPackInfo)  {  [FE]  IOException  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  NID.kPackInfo)  {	  if    (nid    ==    NID.z)    {    	compilable	  [FE]  IOException  	32	12	replace
293	[BUG]  [BUGGY]  if  (nid  ==  NID.sIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  sIGNATURE_HEADER_SIZE  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.sIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  NID.sIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.z)    {    	non-compiled	[CE]  cannot  find  symbol  sIGNATURE_HEADER_SIZE	32	None	replace
294	[BUG]  [BUGGY]  if  (nid  ==  NID.kSubStreamInfo)  {  [CE]  cannot  find  symbol  kSubStreamInfo  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.kSubStreamInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  NID.kSubStreamInfo)  {	  if    (nid    ==    NID.z)    {    	non-compiled	[CE]  cannot  find  symbol  kSubStreamInfo	32	None	replace
295	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kUnpackInfo)    {    	compilable	  [FE]  IOException  	73	12	replace
296	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [FE]  IOException  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kUnpackInfo)    {    	compilable	  [FE]  IOException  	73	12	replace
297	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	117	12	replace
298	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  <  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	117	12	replace
299	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
300	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
301	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
302	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
303	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
304	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
305	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
306	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEAFDER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  SIGNATURE_HEAFDER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    if    (nid    <    SIGNATURE_HEAFDER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE	87	None	replace
307	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
308	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	97	None	add
309	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
310	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  int  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  int  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE)    {    int  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	97	None	add
311	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEaDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >  SIGNATURE_HEaDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
312	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEAder_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEAder_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >  SIGNATURE_HEAder_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
313	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if    (nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	28	12	replace
314	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if    (nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  IOException  	28	12	replace
315	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if    (nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	28	12	replace
316	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [FE]  NoClassDefFoundError  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if    (nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	28	12	replace
317	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {	  if    (nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	28	12	replace
318	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [FE]  NoClassDefFoundError  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSubStreamsInfo)  {	  if    (nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	28	12	replace
319	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.zBlockInfo)  {  [CE]  cannot  find  symbol  zBlockInfo  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.zBlockInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.zBlockInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kBlockInfo)    {    	non-compiled	[CE]  cannot  find  symbol  zBlockInfo	106	None	replace
320	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kFolderInfo)  {  [CE]  cannot  find  symbol  kFolderInfo  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kFolderInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kFolderInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kBlockInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kFolderInfo	106	None	replace
321	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.length)  {  [CE]  cannot  find  symbol  length  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.length)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.length)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kBlockInfo)    {    	non-compiled	[CE]  cannot  find  symbol  length	106	None	replace
322	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.bytesInfo)  {  [CE]  cannot  find  symbol  bytesInfo  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.bytesInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.bytesInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kBlockInfo)    {    	non-compiled	[CE]  cannot  find  symbol  bytesInfo	106	None	replace
323	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPathInfo)  {  [CE]  cannot  find  symbol  kPathInfo  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPathInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPathInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kBlockInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kPathInfo	106	None	replace
324	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kPackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  ==  NID.kPackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	20	12	replace
325	[BUG]  [BUGGY]  if(nid  ==  NID.kPackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kPackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  ==  NID.kPackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	20	12	replace
326	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    	compilable	  [FE]  IOException  	42	12	replace
327	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    	compilable	  [FE]  IOException  	42	12	replace
328	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
329	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  List  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	List  <  String>  deferredBlockStreams  =  Lists.newArrayList();	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
330	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(0);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(0);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(0);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
331	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(1);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(1);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(1);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
332	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid);  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  List  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	List  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
333	[BUG]  [BUGGY]  nid  =  NID.kPackInfo;  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  nid  =  NID.kPackInfo;  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	nid  =  NID.kPackInfo;	  nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
334	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	nid  =  header.readUnsignedByte()  +  1;	  nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
335	[BUG]  [BUGGY]  nid  =  NID.kPackInfo.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  nid  =  NID.kPackInfo.readUnsignedByte();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	nid  =  NID.kPackInfo.readUnsignedByte();	  nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
336	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  nid  =  header.readUnsignedByte(nid);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	nid  =  header.readUnsignedByte(nid);	  nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
337	[BUG]  [BUGGY]  nid  =  inputStreamStack.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  nid  =  inputStreamStack.readUnsignedByte();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	nid  =  inputStreamStack.readUnsignedByte();	  nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
338	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
339	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
340	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    if(nid  >>  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
341	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
342	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
343	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  If(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  If(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    If(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  ';'  expected	66	None	add
344	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kUnpackInfo)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
345	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kUnpackInfo)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
346	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kUnpackInfo)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
347	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kUnpackInfo)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
348	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kUnpackInfo)    {    If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  ';'  expected	43	None	add
349	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [Delete]  NID.kUnpackInfo)  {  [CE]  ')'  expected  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [Delete]  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kUnpackInfo)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [Delete]  NID.kUnpackInfo)  {	  	non-compiled	[CE]  ')'  expected	43	None	add
350	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	104	12	replace
351	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	104	12	replace
352	[BUG]  [BUGGY]  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	104	12	replace
353	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	104	12	replace
354	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	104	12	replace
355	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	104	12	replace
356	[BUG]  [BUGGY]  int  nid  =  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  =  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  =  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    int    nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  ';'  expected	99	None	replace
357	[BUG]  [BUGGY]  int  nid  =  SIGNATURE_HEADER_SIZE;  [CE]  illegal  start  of  type  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  =  SIGNATURE_HEADER_SIZE;	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    int    nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
358	[BUG]  [BUGGY]  int  nid  =  reader.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  =  reader.readUnsignedByte();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  =  reader.readUnsignedByte();	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    int    nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
359	[BUG]  [BUGGY]  int  nid  =  SIGNATURE_HEADER_SIZE);  [CE]  ';'  expected  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  =  SIGNATURE_HEADER_SIZE);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  =  SIGNATURE_HEADER_SIZE);	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    int    nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  ';'  expected	99	None	replace
360	[BUG]  [BUGGY]  Integer  nid  =  SIGNATURE_HEADER_SIZE;  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  Integer  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	Integer  nid  =  SIGNATURE_HEADER_SIZE;	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    int    nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
361	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	72	12	replace
362	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [FE]  NoClassDefFoundError  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	72	12	replace
363	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
364	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
365	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
366	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
367	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	103	None	add
368	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
369	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
370	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
371	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
372	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	120	None	add
373	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
374	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
375	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEader_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEader_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEader_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
376	[BUG]  [BUGGY]  nid  =  SIGNATURE_HEADER_SIZE;  [CE]  illegal  start  of  type  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	nid  =  SIGNATURE_HEADER_SIZE;	  if(nid    ==    SIGNATURE_HEADER_SIZE)    {    int    nid    =    SIGNATURE_HEADER_SIZE;    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
377	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
378	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  ';'  expected	21	None	add
379	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
380	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
381	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
382	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
383	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  header.values().iterator().next();  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  header.values().iterator().next();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  header.values().iterator().next();	  InputStream    inputStreamStack    =    inputStreamStack.values().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
384	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  currentFolderInputStream.values().iterator().next();  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  currentFolderInputStream.values().iterator().next();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  currentFolderInputStream.values().iterator().next();	  InputStream    inputStreamStack    =    inputStreamStack.values().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
385	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  this.inputStreamStack.values().iterator().next();  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  this.inputStreamStack.values().iterator().next();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  this.inputStreamStack.values().iterator().next();	  InputStream    inputStreamStack    =    inputStreamStack.values().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
386	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  nid.values().iterator().next();  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  nid.values().iterator().next();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  nid.values().iterator().next();	  InputStream    inputStreamStack    =    inputStreamStack.values().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
387	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  outputStreamStack.values().iterator().next();  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  outputStreamStack.values().iterator().next();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  outputStreamStack.values().iterator().next();	  InputStream    inputStreamStack    =    inputStreamStack.values().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
388	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  sourceFile.values().iterator().next();  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  sourceFile.values().iterator().next();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  sourceFile.values().iterator().next();	  InputStream    inputStreamStack    =    inputStreamStack.values().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
389	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	2	12	replace
390	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	2	12	replace
391	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	else  if(nid  ==  SIGNATURE_HEADER_SIZE)  {	  else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	96	12	replace
392	[BUG]  [BUGGY]  else  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	else  if(nid  ==  SIGNATURE_HEADER_SIZE)  {	  else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	96	12	replace
393	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	else  if(nid  >=  SIGNATURE_HEADER_SIZE)  {	  else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	96	12	replace
394	[BUG]  [BUGGY]  else  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	else  if(nid  >=  SIGNATURE_HEADER_SIZE)  {	  else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	96	12	replace
395	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	else  if(nid  <  SIGNATURE_HEADER_SIZE)  {	  else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	96	12	replace
396	[BUG]  [BUGGY]  else  if(nid  <  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	else  if(nid  <  SIGNATURE_HEADER_SIZE)  {	  else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	96	12	replace
397	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	else  if(nid  >  SIGNATURE_HEADER_SIZE)  {	  else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	96	12	replace
398	[BUG]  [BUGGY]  else  if(nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	else  if(nid  >  SIGNATURE_HEADER_SIZE)  {	  else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	96	12	replace
399	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	else  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	96	12	replace
400	[BUG]  [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	else  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	96	12	replace
401	[BUG]  [BUGGY]  [FE]  IOException  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	else  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	96	12	replace
402	[BUG]  [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	else  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	96	12	replace
403	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
404	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
405	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
406	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    if(nid  >>  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
407	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  If(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  If(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    If(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  ';'  expected	64	None	add
408	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
409	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
410	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {	  	non-compiled	[CE]  ';'  expected	45	None	add
411	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
412	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
413	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  int  nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  int  nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    int  nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {	  	non-compiled	[CE]  ';'  expected	45	None	add
414	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	48	12	replace
415	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	48	12	replace
416	[BUG]  [BUGGY]  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	48	12	replace
417	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	48	12	replace
418	[BUG]  [BUGGY]  int  nid  =  NID.kPackInfo.length  -  1;  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  =  NID.kPackInfo.length  -  1;  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  =  NID.kPackInfo.length  -  1;	  int    nid    =    NID.kPackInfo.length;    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
419	[BUG]  [BUGGY]  int  nid  =  NID.kPackInfo.length  +  1;  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  =  NID.kPackInfo.length  +  1;  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  =  NID.kPackInfo.length  +  1;	  int    nid    =    NID.kPackInfo.length;    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
420	[BUG]  [BUGGY]  int  nid  =  NID.kPackInfo.length  -  2;  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  =  NID.kPackInfo.length  -  2;  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  =  NID.kPackInfo.length  -  2;	  int    nid    =    NID.kPackInfo.length;    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
421	[BUG]  [BUGGY]  int  nid  =  NID.kPackInfo.length  -  4;  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  =  NID.kPackInfo.length  -  4;  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  =  NID.kPackInfo.length  -  4;	  int    nid    =    NID.kPackInfo.length;    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
422	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	59	12	replace
423	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  <  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	59	12	replace
424	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
425	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	59	12	replace
426	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	59	12	replace
427	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	63	12	replace
428	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	63	12	replace
429	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
430	[BUG]  [BUGGY]  [FE]  IOException  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	63	12	replace
431	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	63	12	replace
432	[BUG]  [BUGGY]  int  nid  =  currentFolderInputStream.size();  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  =  currentFolderInputStream.size();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  =  currentFolderInputStream.size();	  int    nid    =    inputStreamStack.size();    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
433	[BUG]  [BUGGY]  int  nid  =  inputStreamStack.size()  -  1;  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  =  inputStreamStack.size()  -  1;  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  =  inputStreamStack.size()  -  1;	  int    nid    =    inputStreamStack.size();    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
434	[BUG]  [BUGGY]  int  nid  =  header.size();  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  =  header.size();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  =  header.size();	  int    nid    =    inputStreamStack.size();    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
435	[BUG]  [BUGGY]  int  nid  =  this.inputStreamStack.size();  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  =  this.inputStreamStack.size();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  =  this.inputStreamStack.size();	  int    nid    =    inputStreamStack.size();    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
436	[BUG]  [BUGGY]  int  nid  =  inputStreamStack.size()  -  2;  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  =  inputStreamStack.size()  -  2;  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  =  inputStreamStack.size()  -  2;	  int    nid    =    inputStreamStack.size();    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
437	[BUG]  [BUGGY]  int  nid  =  inputStreamStack.size()  +  1;  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  =  inputStreamStack.size()  +  1;  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  =  inputStreamStack.size()  +  1;	  int    nid    =    inputStreamStack.size();    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
438	[BUG]  [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.folders  ||  nid  ==  NID.length)  {  [CE]  cannot  find  symbol  folders  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.folders  ||  nid  ==  NID.length)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.folders  ||  nid  ==  NID.length)  {	  if    (nid    ==    NID.folders    ||    nid    ==    NID.length)    {    	non-compiled	[CE]  cannot  find  symbol  folders	128	None	replace
439	[BUG]  [BUGGY]  if  (nid  ==  NID.length  ||  nid  ==  NID.folders)  {  [CE]  cannot  find  symbol  length  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.length  ||  nid  ==  NID.folders)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  NID.length  ||  nid  ==  NID.folders)  {	  if    (nid    ==    NID.folders    ||    nid    ==    NID.length)    {    	non-compiled	[CE]  cannot  find  symbol  length	128	None	replace
440	[BUG]  [BUGGY]  if  (nid  ==  NID.fileName  ||  nid  ==  NID.length)  {  [CE]  cannot  find  symbol  fileName  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.fileName  ||  nid  ==  NID.length)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  NID.fileName  ||  nid  ==  NID.length)  {	  if    (nid    ==    NID.folders    ||    nid    ==    NID.length)    {    	non-compiled	[CE]  cannot  find  symbol  fileName	128	None	replace
441	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
442	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
443	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
444	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
445	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
446	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
447	[BUG]  [BUGGY]  Integer  nid  =  Integer.parseInt(inputStreamStack[0]);  [CE]  illegal  start  of  type  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  Integer  nid  =  Integer.parseInt(inputStreamStack[0]);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	Integer  nid  =  Integer.parseInt(inputStreamStack[0]);	  if(nid    ==    SIGNATURE_HEADER_SIZE)    {    int    nid    ==    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
448	[BUG]  [BUGGY]  Integer  nid  =  intSIGNATURE_HEADER_SIZE;  [CE]  illegal  start  of  type  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  Integer  nid  =  intSIGNATURE_HEADER_SIZE;  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	Integer  nid  =  intSIGNATURE_HEADER_SIZE;	  if(nid    ==    SIGNATURE_HEADER_SIZE)    {    int    nid    ==    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
449	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
450	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
451	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
452	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
453	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
454	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
455	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEaDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEaDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
456	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	92	12	replace
457	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kPackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	92	12	replace
458	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	92	12	replace
459	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kPackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	92	12	replace
460	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	92	12	replace
461	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kPackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	92	12	replace
462	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.zPackInfo)  {  [CE]  cannot  find  symbol  zPackInfo  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.zPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.zPackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	non-compiled	[CE]  cannot  find  symbol  zPackInfo	92	None	replace
463	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	61	12	replace
464	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	61	12	replace
465	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
466	[BUG]  [BUGGY]  [FE]  IOException  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	61	12	replace
467	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	61	12	replace
468	[BUG]  [BUGGY]  [FE]  IOException  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	61	12	replace
469	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	61	12	replace
470	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEAFDER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=  SIGNATURE_HEAFDER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid!=    SIGNATURE_HEAFDER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE	112	None	replace
471	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEAFDER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  >=  SIGNATURE_HEAFDER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid!=    SIGNATURE_HEAFDER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE	112	None	replace
472	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	121	12	replace
473	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	121	12	replace
474	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
475	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [CE]  ';'  expected  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  	non-compiled	[CE]  ';'  expected	82	None	add
476	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE  +  1)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE  +  1)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE  +  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
477	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
478	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE  +  1)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE  +  1)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE  +  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
479	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE  +  1)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE  +  1)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE  +  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
480	[BUG]  [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.fileName)  {  [CE]  cannot  find  symbol  fileName  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.fileName)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.fileName)  {	  if    (nid    ==    NID.fileName)    {    	non-compiled	[CE]  cannot  find  symbol  fileName	29	None	replace
481	[BUG]  [BUGGY]  if  (nid  ==  NID.bytes)  {  [CE]  cannot  find  symbol  bytes  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.bytes)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  NID.bytes)  {	  if    (nid    ==    NID.fileName)    {    	non-compiled	[CE]  cannot  find  symbol  bytes	29	None	replace
482	[BUG]  [BUGGY]  if  (nid  ==  NID.folders  ||  nid!=  NID.length)  {  [CE]  cannot  find  symbol  folders  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.folders  ||  nid!=  NID.length)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  NID.folders  ||  nid!=  NID.length)  {	  if    (nid    ==    NID.folders    ||    nid    ==    NID.length)    {    	non-compiled	[CE]  cannot  find  symbol  folders	128	None	replace
483	[BUG]  [BUGGY]  int  nid  =  SIGNATURE_HEADER_SIZE  +  SIGNATURE_HEADER_SIZE;  [CE]  illegal  start  of  type  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  =  SIGNATURE_HEADER_SIZE  +  SIGNATURE_HEADER_SIZE;  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  =  SIGNATURE_HEADER_SIZE  +  SIGNATURE_HEADER_SIZE;	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    int    nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
484	[BUG]  [BUGGY]  int  nid  =  SIGNATURE_HEADER_SIZE  +  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  =  SIGNATURE_HEADER_SIZE  +  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  =  SIGNATURE_HEADER_SIZE  +  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    int    nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  ';'  expected	99	None	replace
485	[BUG]  [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.folders  ||  nid  ==  NID.kPackInfo)  {  [CE]  cannot  find  symbol  folders  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.folders  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.folders  ||  nid  ==  NID.kPackInfo)  {	  if    (nid    ==    NID.folders    ||    nid    ==    NID.kPackInfo)    {    	non-compiled	[CE]  cannot  find  symbol  folders	129	None	replace
486	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
487	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  nid  =  NID.readUnsignedByte();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	nid  =  NID.readUnsignedByte();	  nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
488	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(0);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  nid  =  header.readUnsignedByte(0);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	nid  =  header.readUnsignedByte(0);	  nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
489	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  nid  =  file.readUnsignedByte();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	nid  =  file.readUnsignedByte();	  nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
490	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
491	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  int  nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  int  nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    int  nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  ';'  expected	21	None	add
492	[BUG]  [BUGGY]  if  (nid  ==  NID.folders  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  folders  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.folders  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  NID.folders  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.folders    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  folders	127	None	replace
493	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.length)  {  [CE]  cannot  find  symbol  length  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.length)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.length)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    	non-compiled	[CE]  cannot  find  symbol  length	46	None	replace
494	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.z)  {  [CE]  cannot  find  symbol  z  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.z)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.z)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    	non-compiled	[CE]  cannot  find  symbol  z	46	None	replace
495	[BUG]  [BUGGY]  int  nid  =  NID.kPackInfo.readUnsignedByte()  +  1;  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  =  NID.kPackInfo.readUnsignedByte()  +  1;  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  =  NID.kPackInfo.readUnsignedByte()  +  1;	  int    nid    =    NID.kPackInfo.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
496	[BUG]  [BUGGY]  int  nid  =  NID.kPackInfo.readUnsignedByte(0);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  =  NID.kPackInfo.readUnsignedByte(0);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  =  NID.kPackInfo.readUnsignedByte(0);	  int    nid    =    NID.kPackInfo.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
497	[BUG]  [BUGGY]  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE)    {    If(nid    ==    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
498	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
499	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  int  nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  ';'  expected  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  int  nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    int  nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
500	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
501	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEaDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEaDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
502	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
503	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
504	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
505	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	49	None	add
506	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  int  nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  int  nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    int  nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  ';'  expected	23	None	add
507	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
508	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
509	[BUG]  [BUGGY]  else  if(nid  >>  SIGNATURE_HEADER_SIZE)  {  [CE]  incompatible  types  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid  >>  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	else  if(nid  >>  SIGNATURE_HEADER_SIZE)  {	  else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  incompatible  types	96	None	replace
510	[BUG]  [BUGGY]  else  if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	else  if(nid  <  =  SIGNATURE_HEADER_SIZE)  {	  else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
511	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.bytes)  {  [CE]  cannot  find  symbol  bytes  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.bytes)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.bytes)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kBlockInfo)    {    	non-compiled	[CE]  cannot  find  symbol  bytes	106	None	replace
512	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.KBLOCK)  {  [CE]  cannot  find  symbol  KBLOCK  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.KBLOCK)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.KBLOCK)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kBlockInfo)    {    	non-compiled	[CE]  cannot  find  symbol  KBLOCK	106	None	replace
513	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithCapacity(nid);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithCapacity(nid);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithCapacity(nid);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
514	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(inputStreamStack);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(inputStreamStack);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(inputStreamStack);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
515	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithDelimiter(nid);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithDelimiter(nid);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithDelimiter(nid);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
516	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	50	12	replace
517	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  >=  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	50	12	replace
518	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  Integer  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  Integer  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE)    {    Integer  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	97	None	add
519	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  not  a  statement  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE)    {    nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  not  a  statement	97	None	add
520	[BUG]  [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kFolders)  {  [CE]  cannot  find  symbol  kFolders  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kFolders)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kFolders)  {	  if    (nid    ==    NID.kFolders)    {    	non-compiled	[CE]  cannot  find  symbol  kFolders	30	None	replace
521	[BUG]  [BUGGY]  if  (nid  ==  NID.kFolders  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  kFolders  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.kFolders  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  NID.kFolders  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.kFolders)    {    	non-compiled	[CE]  cannot  find  symbol  kFolders	30	None	replace
522	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	116	None	add
523	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEaDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEaDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	116	None	add
524	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderInputStream);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderInputStream);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(currentFolderInputStream);	  InputStream    inputStreamStack    =    getInputStreamStack(nid);    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
525	[BUG]  [BUGGY]  InputStream  currentFolderInputStream  =  getInputStreamStack(nid);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  currentFolderInputStream  =  getInputStreamStack(nid);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  currentFolderInputStream  =  getInputStreamStack(nid);	  InputStream    inputStreamStack    =    getInputStreamStack(nid);    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
526	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(header);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(header);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(header);	  InputStream    inputStreamStack    =    getInputStreamStack(nid);    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
527	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderIndex);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(currentFolderIndex);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(currentFolderIndex);	  InputStream    inputStreamStack    =    getInputStreamStack(nid);    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
528	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	Integer  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
529	[BUG]  [BUGGY]  int  nid  =  NID.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  =  NID.readUnsignedByte();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  =  NID.readUnsignedByte();	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
530	[BUG]  [BUGGY]  Integer  nid  =  inputStreamStack.get(SIGNATURE_HEADER_SIZE);  [CE]  illegal  start  of  type  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  Integer  nid  =  inputStreamStack.get(SIGNATURE_HEADER_SIZE);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	Integer  nid  =  inputStreamStack.get(SIGNATURE_HEADER_SIZE);	  if(nid    ==    SIGNATURE_HEADER_SIZE)    {    int    nid    ==    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
531	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEAFDER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEAFDER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >  SIGNATURE_HEAFDER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	101	None	add
532	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HeADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HeADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >  SIGNATURE_HeADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	101	None	add
533	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	44	12	replace
534	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	44	12	replace
535	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  1  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  >  1  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	98	12	replace
536	[BUG]  [BUGGY]  if(nid  >  1  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  1  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  >  1  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	98	12	replace
537	[BUG]  [BUGGY]  Int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  Int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	Int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    int    nid    =    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    	non-compiled	[CE]  ';'  expected	107	None	replace
538	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE)  {  (nid  +  SIGNATURE_HEADER_SIZE)  {  [CE]  not  a  statement  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE)  {  (nid  +  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  <  SIGNATURE_HEADER_SIZE)  {  (nid  +  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    (nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  not  a  statement	88	None	replace
539	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
540	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  int  nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  ';'  expected  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  int  nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    int  nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  ';'  expected	91	None	add
541	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kUnpackInfo)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
542	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  0  ||  nid  >  0)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  >  0  ||  nid  >  0)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	102	12	replace
543	[BUG]  [BUGGY]  if(nid  >  0  ||  nid  >  0)  {  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  0  ||  nid  >  0)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  >  0  ||  nid  >  0)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	102	12	replace
544	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
545	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  4);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  4);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  4);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
546	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  int  nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  int  nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    int  nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  ';'  expected	41	None	add
547	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  nextFolderInputStream.getInputStream(nid);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  nextFolderInputStream.getInputStream(nid);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  nextFolderInputStream.getInputStream(nid);	  InputStream    inputStreamStack    =    inputStreamStack.getInputStream(nid);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
548	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  this.inputStreams.getInputStream(nid);  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  this.inputStreams.getInputStream(nid);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  this.inputStreams.getInputStream(nid);	  InputStream    inputStreamStack    =    inputStreamStack.getInputStream(nid);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
549	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  byte[0]);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  byte[0]);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  inputStreamStack.toArray(new  byte[0]);	  InputStream    inputStreamStack    =    inputStreamStack.toArray(new    byte[inputStreamStack.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
550	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  byte[readStreams.size()  ]);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  byte[readStreams.size()  ]);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  inputStreamStack.toArray(new  byte[readStreams.size()  ]);	  InputStream    inputStreamStack    =    inputStreamStack.toArray(new    byte[inputStreamStack.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
551	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  byte[archive.size()  ]);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  byte[archive.size()  ]);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  inputStreamStack.toArray(new  byte[archive.size()  ]);	  InputStream    inputStreamStack    =    inputStreamStack.toArray(new    byte[inputStreamStack.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
552	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  byte[file.size()  ]);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  byte[file.size()  ]);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  inputStreamStack.toArray(new  byte[file.size()  ]);	  InputStream    inputStreamStack    =    inputStreamStack.toArray(new    byte[inputStreamStack.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
553	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  byte[nid.size()  ]);  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  byte[nid.size()  ]);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  inputStreamStack.toArray(new  byte[nid.size()  ]);	  InputStream    inputStreamStack    =    inputStreamStack.toArray(new    byte[inputStreamStack.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
554	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  NoClassDefFoundError  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [CE]  >  expected  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  NoClassDefFoundError  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    NoClassDefFoundError  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {	  	non-compiled	[CE]  >  expected	45	None	add
555	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  Integer  nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  Integer  nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    Integer  nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {	  	non-compiled	[CE]  ';'  expected	45	None	add
556	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {	  	non-compiled	[CE]  ';'  expected	45	None	add
557	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  nextFolderInputStream.peek();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  nextFolderInputStream.peek();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  nextFolderInputStream.peek();	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
558	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  file.peek();  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  file.peek();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  file.peek();	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
559	[BUG]  [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
560	[BUG]  [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  ((  SIGNATURE_HEADER_SIZE  <  <  1)||(nid  >=  SIGNATURE_HEADER_SIZE))  {  [CE]  illegal  start  of  type  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  ((  SIGNATURE_HEADER_SIZE  <  <  1)||(nid  >=  SIGNATURE_HEADER_SIZE))  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    ((  SIGNATURE_HEADER_SIZE  <  <  1)||(nid  >=  SIGNATURE_HEADER_SIZE))  {	  	non-compiled	[CE]  illegal  start  of  type	95	None	add
561	[BUG]  [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  ((  SIGNATURE_HEADER_SIZE  +  nid)  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  not  a  statement  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  ((  SIGNATURE_HEADER_SIZE  +  nid)  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    ((  SIGNATURE_HEADER_SIZE  +  nid)  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  not  a  statement	95	None	add
562	[BUG]  [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte();  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    nid  =  header.readUnsignedByte();	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
563	[BUG]  [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  ((  SIGNATURE_HEADER_SIZE  +  nid)  >>  SIGNATURE_HEADER_SIZE)  {  [CE]  not  a  statement  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  ((  SIGNATURE_HEADER_SIZE  +  nid)  >>  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    ((  SIGNATURE_HEADER_SIZE  +  nid)  >>  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  not  a  statement	95	None	add
564	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  0  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  <  0  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	59	12	replace
565	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  0  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  0  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	59	12	replace
566	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
567	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    NID.kUnpackInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
568	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    NID.kUnpackInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
569	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length-1);  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length-1);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length-1);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
570	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  +|  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  +|  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  +|  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
571	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.getValues().iterator().next();  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.getValues().iterator().next();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  inputStreamStack.getValues().iterator().next();	  InputStream    inputStreamStack    =    inputStreamStack.values().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
572	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.values().iterator();  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.values().iterator();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  inputStreamStack.values().iterator();	  InputStream    inputStreamStack    =    inputStreamStack.values().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
573	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  ';'  expected  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    int  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  ';'  expected	93	None	add
574	[BUG]  [BUGGY]  if  (nid  ==  NID.zip)  {  [CE]  cannot  find  symbol  zip  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.zip)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  NID.zip)  {	  if    (nid    ==    NID.z)    {    	non-compiled	[CE]  cannot  find  symbol  zip	32	None	replace
575	[BUG]  [BUGGY]  if  (nid  ==  NID.files  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  files  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.files  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  NID.files  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.files)    {    	non-compiled	[CE]  cannot  find  symbol  files	31	None	replace
576	[BUG]  [BUGGY]  if  (nid  ==  NID.files  ||(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.folders))  {  [CE]  cannot  find  symbol  files  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.files  ||(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.folders))  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  NID.files  ||(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.folders))  {	  if    (nid    ==    NID.files)    {    	non-compiled	[CE]  cannot  find  symbol  files	31	None	replace
577	[BUG]  [BUGGY]  if(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    NID.kUnpackInfo    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid!=  NID.kUnpackInfo  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	114	None	add
578	[BUG]  [BUGGY]  int  nid  =  NID.kPackInfo.length  +  2;  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  =  NID.kPackInfo.length  +  2;  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  =  NID.kPackInfo.length  +  2;	  int    nid    =    NID.kPackInfo.length;    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
579	[BUG]  [BUGGY]  if  (nid  ==  NID.kSubStreamsInfo)  {  int  nid  =  NID.kSubStreamsInfo;  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.kSubStreamsInfo)  {  int  nid  =  NID.kSubStreamsInfo;  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if    (nid    ==    NID.kSubStreamsInfo)    {    int  nid  =  NID.kSubStreamsInfo;	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
580	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
581	[BUG]  [BUGGY]  Int  nid  =  SIGNATURE_HEADER_SIZE;  [CE]  illegal  start  of  type  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  Int  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	Int  nid  =  SIGNATURE_HEADER_SIZE;	  if(nid    ==    SIGNATURE_HEADER_SIZE)    {    int    nid    =    SIGNATURE_HEADER_SIZE;    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
582	[BUG]  [BUGGY]  int  nid  =  SIGNATURE_HEAFDER_SIZE;  [CE]  illegal  start  of  type  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  =  SIGNATURE_HEAFDER_SIZE;  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  =  SIGNATURE_HEAFDER_SIZE;	  if(nid    ==    SIGNATURE_HEADER_SIZE)    {    int    nid    =    SIGNATURE_HEADER_SIZE;    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
583	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEAFTER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFTER_SIZE  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEAFTER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  ==  SIGNATURE_HEAFTER_SIZE)  {	  if(nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid!=    SIGNATURE_HEAFDER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFTER_SIZE	112	None	replace
584	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kPackInfo);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kPackInfo);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kPackInfo);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
585	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
586	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  if(Nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  if(Nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE)    {    if(Nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
587	[BUG]  [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  else  if(nid!=  SIGNATURE_HEAFDER_SIZE)  {  [CE]  'else'  without  'if'  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  else  if(nid!=  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    else  if(nid!=  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  'else'  without  'if'	95	None	add
588	[BUG]  [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  another  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  not  a  statement  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid!=  SIGNATURE_HEADER_SIZE)  {  another  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    another  if(nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  not  a  statement	95	None	add
589	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(Nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(Nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(Nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	101	None	add
590	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  *  SIGNATURE_HEADER_SIZE);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  *  SIGNATURE_HEADER_SIZE);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  *  SIGNATURE_HEADER_SIZE);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
591	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
592	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kBlockInfo)  {  [CE]  cannot  find  symbol  kBlockInfo  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kBlockInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kBlockInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kBlockInfo	46	None	replace
593	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kFolderInfo)  {  [CE]  cannot  find  symbol  kFolderInfo  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kFolderInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kFolderInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kFolderInfo	46	None	replace
594	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if    (nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	28	12	replace
595	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if    (nid    ==    NID.kSubStreamsInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	28	12	replace
596	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSubStreamsInfo)  {	  if    (nid    ==    NID.kSubStreamsInfo)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
597	[BUG]  [BUGGY]  InputStream  nid  =  getInputStreamStack(nid);  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  nid  =  getInputStreamStack(nid);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  nid  =  getInputStreamStack(nid);	  InputStream    inputStreamStack    =    getInputStreamStack(nid);    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
598	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
599	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  1  ||  nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  >  1  ||  nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	98	12	replace
600	[BUG]  [BUGGY]  if(nid  >  1  ||  nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  1  ||  nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  >  1  ||  nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	98	12	replace
601	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid!=  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kUnpackInfo)    {    if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid!=  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
602	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	116	None	add
603	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
604	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  byte[nid  +  1]);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  byte[nid  +  1]);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  inputStreamStack.toArray(new  byte[nid  +  1]);	  InputStream    inputStreamStack    =    inputStreamStack.toArray(new    byte[inputStreamStack.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
605	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  byte[4]);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  byte[4]);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  inputStreamStack.toArray(new  byte[4]);	  InputStream    inputStreamStack    =    inputStreamStack.toArray(new    byte[inputStreamStack.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
606	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
607	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid!=  SIGNATURE_HEAFDER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid!=  SIGNATURE_HEAFDER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    if(nid!=  SIGNATURE_HEAFDER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
608	[BUG]  [BUGGY]  if  (nid  ==  NID.filename)  {  [CE]  cannot  find  symbol  filename  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.filename)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  NID.filename)  {	  if    (nid    ==    NID.z)    {    	non-compiled	[CE]  cannot  find  symbol  filename	32	None	replace
609	[BUG]  [BUGGY]  Integer  nid  =  nid.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  Integer  nid  =  nid.readUnsignedByte();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	Integer  nid  =  nid.readUnsignedByte();	  if(nid    ==    SIGNATURE_HEADER_SIZE)    {    If(nid    ==    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
610	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	103	None	add
611	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
612	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  *  SIGNATURE_HEADER_SIZE);  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  *  SIGNATURE_HEADER_SIZE);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(length  *  SIGNATURE_HEADER_SIZE);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(length);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
613	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack()  &  SIGNATURE_HEADER_SIZE;  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack()  &  SIGNATURE_HEADER_SIZE;  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  getInputStreamStack()  &  SIGNATURE_HEADER_SIZE;	  InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
614	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(0);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(0);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(0);	  InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
615	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(fileName);  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  getInputStreamStack(fileName);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  getInputStreamStack(fileName);	  InputStream    inputStreamStack    =    getInputStreamStack();    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
616	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HeADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HeADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HeADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
617	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
618	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
619	[BUG]  [BUGGY]  if  (nid  ==  NID.kSubStreamsInfo)  {  else  if  (nid  ==  NID.kSubStreamsInfo)  {  [CE]  'else'  without  'if'  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.kSubStreamsInfo)  {  else  if  (nid  ==  NID.kSubStreamsInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if    (nid    ==    NID.kSubStreamsInfo)    {    else  if  (nid  ==  NID.kSubStreamsInfo)  {	  	non-compiled	[CE]  'else'  without  'if'	27	None	add
620	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  +  1  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  +  1  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  NoClassDefFoundError  	83	12	replace
621	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  +  1  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  +  1  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  +  1  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  NoClassDefFoundError  	83	12	replace
622	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	92	12	replace
623	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	compilable	  [FE]  IOException  	92	12	replace
624	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.z)  {  [CE]  cannot  find  symbol  z  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.z)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.z)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    	non-compiled	[CE]  cannot  find  symbol  z	92	None	replace
625	[BUG]  [BUGGY]  int  nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  <  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    int    nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  ';'  expected	99	None	replace
626	[BUG]  [BUGGY]  Integer  nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  Integer  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	Integer  nid  <  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    int    nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  ';'  expected	99	None	replace
627	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kBlockInfo)  {  [CE]  cannot  find  symbol  kBlockInfo  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kBlockInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kBlockInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kBlockInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kBlockInfo	106	None	replace
628	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kBlockInfo)  {  [CE]  cannot  find  symbol  kBlockInfo  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kBlockInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kBlockInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kBlockInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kBlockInfo	106	None	replace
629	[BUG]  [BUGGY]  if(nid  ==  NID.kBlockInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  kBlockInfo  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  NID.kBlockInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  ==  NID.kBlockInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kBlockInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kBlockInfo	106	None	replace
630	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kBaseInfo)  {  [CE]  cannot  find  symbol  kBaseInfo  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kBaseInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kBaseInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kBlockInfo)    {    	non-compiled	[CE]  cannot  find  symbol  kBaseInfo	106	None	replace
631	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  +  nid  >  NID.kUnpackInfo)  {  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  +  nid  >  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  +  nid  >  NID.kUnpackInfo)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kUnpackInfo)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	44	None	replace
632	[BUG]  [BUGGY]  (nid  <  SIGNATURE_HEADER_SIZE)||(nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  not  a  statement  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  (nid  <  SIGNATURE_HEADER_SIZE)||(nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	(nid  <  SIGNATURE_HEADER_SIZE)||(nid  <  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    (nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  not  a  statement	88	None	replace
633	[BUG]  [BUGGY]  if  (nid!=  NID.folders  ||  nid  ==  NID.kPackInfo)  {  [CE]  cannot  find  symbol  folders  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid!=  NID.folders  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid!=  NID.folders  ||  nid  ==  NID.kPackInfo)  {	  if    (nid    ==    NID.folders    ||    nid    ==    NID.kPackInfo)    {    	non-compiled	[CE]  cannot  find  symbol  folders	129	None	replace
634	[BUG]  [BUGGY]  if  (nid  ==  NID.z  ||  nid  ==  NID.kPackInfo)  {  [CE]  cannot  find  symbol  z  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.z  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  NID.z  ||  nid  ==  NID.kPackInfo)  {	  if    (nid    ==    NID.folders    ||    nid    ==    NID.kPackInfo)    {    	non-compiled	[CE]  cannot  find  symbol  z	129	None	replace
635	[BUG]  [BUGGY]  if  (nid  ==  NID.folders  ||  nid!=  NID.kPackInfo)  {  [CE]  cannot  find  symbol  folders  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.folders  ||  nid!=  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  NID.folders  ||  nid!=  NID.kPackInfo)  {	  if    (nid    ==    NID.folders    ||    nid    ==    NID.kPackInfo)    {    	non-compiled	[CE]  cannot  find  symbol  folders	129	None	replace
636	[BUG]  [BUGGY]  nid  =  nid.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  nid  =  nid.readUnsignedByte();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	nid  =  nid.readUnsignedByte();	  nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
637	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    if(nid  ==  SIGNATURE_HEAFDER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
638	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  |&  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  |&  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  |&  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
639	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  file.getInputStream(nid);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  file.getInputStream(nid);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  file.getInputStream(nid);	  InputStream    inputStreamStack    =    inputStreamStack.getInputStream(nid);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
640	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  stream.getInputStream(nid);  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  stream.getInputStream(nid);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  stream.getInputStream(nid);	  InputStream    inputStreamStack    =    inputStreamStack.getInputStream(nid);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
641	[BUG]  [BUGGY]  Integer  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kUnpackInfo)  {  [CE]  ';'  expected  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  Integer  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	Integer  nid  =  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kUnpackInfo)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    Integer    nid    =    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    	non-compiled	[CE]  ';'  expected	90	None	replace
642	[BUG]  [BUGGY]  if  (nid  ==  NID.folders  ||  nid  ==  NID.kFolders)  {  [CE]  cannot  find  symbol  folders  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.folders  ||  nid  ==  NID.kFolders)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  NID.folders  ||  nid  ==  NID.kFolders)  {	  if    (nid    ==    NID.kFolders)    {    	non-compiled	[CE]  cannot  find  symbol  folders	30	None	replace
643	[BUG]  [BUGGY]  if  (nid  ==  NID.kFolders  ||  nid  ==  NID.kPackInfo)  {  [CE]  cannot  find  symbol  kFolders  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.kFolders  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  NID.kFolders  ||  nid  ==  NID.kPackInfo)  {	  if    (nid    ==    NID.kFolders)    {    	non-compiled	[CE]  cannot  find  symbol  kFolders	30	None	replace
644	[BUG]  [BUGGY]  int  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE)    {    int    nid    ==    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
645	[BUG]  [BUGGY]  int  nid  {  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  {  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  {  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE)    {    int    nid    ==    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
646	[BUG]  [BUGGY]  int  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE)    {    int    nid    ==    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
647	[BUG]  [BUGGY]  int  nid  >>  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  int  nid  >>  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	int  nid  >>  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE)    {    int    nid    ==    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  ';'  expected	108	None	replace
648	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE  +  1)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE  +  1)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE  +  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
649	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  this.inputStreams.peek();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  this.inputStreams.peek();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  this.inputStreams.peek();	  InputStream    inputStreamStack    =    inputStreamStack.peek();    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
650	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kPackInfo)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kPackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kPackInfo)    {    if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kPackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
651	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.folders)  {  [CE]  cannot  find  symbol  folders  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.folders)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.folders)  {	  if    (nid    ==    NID.folders    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  folders	127	None	replace
652	[BUG]  [BUGGY]  if  (nid!=  NID.folders  ||  nid  ==  NID.length)  {  [CE]  cannot  find  symbol  folders  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid!=  NID.folders  ||  nid  ==  NID.length)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid!=  NID.folders  ||  nid  ==  NID.length)  {	  if    (nid    ==    NID.folders    ||    nid    ==    NID.length)    {    	non-compiled	[CE]  cannot  find  symbol  folders	128	None	replace
653	[BUG]  [BUGGY]  if  (nid  ==  NID.files  ||  nid  ==  NID.length)  {  [CE]  cannot  find  symbol  files  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if  (nid  ==  NID.files  ||  nid  ==  NID.length)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if  (nid  ==  NID.files  ||  nid  ==  NID.length)  {	  if    (nid    ==    NID.folders    ||    nid    ==    NID.length)    {    	non-compiled	[CE]  cannot  find  symbol  files	128	None	replace
654	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithSize(nid);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithSize(nid);  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithSize(nid);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
655	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  file.values().iterator().next();  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  file.values().iterator().next();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  file.values().iterator().next();	  InputStream    inputStreamStack    =    inputStreamStack.values().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
656	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.get(nid).values().iterator().next();  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.get(nid).values().iterator().next();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	InputStream  inputStreamStack  =  inputStreamStack.get(nid).values().iterator().next();	  InputStream    inputStreamStack    =    inputStreamStack.values().iterator().next();    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
657	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kUnpackInfo)    {    if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
658	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	else  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	96	12	replace
659	[BUG]  [BUGGY]  else  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	else  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	96	12	replace
660	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid!=  1  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	else  if(nid!=  1  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	96	12	replace
661	[BUG]  [BUGGY]  else  if(nid!=  1  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  else  if(nid!=  1  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	else  if(nid!=  1  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  else    if(nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	96	12	replace
662	[BUG]  [BUGGY]  Int  nid  =  header.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  Int  nid  =  header.readUnsignedByte();  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	Int  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
663	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	79	12	replace
664	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [FE]  NoClassDefFoundError  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kUnpackInfo)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kUnpackInfo)    {    if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kUnpackInfo)    {    	compilable	  [FE]  NoClassDefFoundError  	79	12	replace
665	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  |&  nid  ==  NID.kUnpackInfo)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kUnpackInfo)  {  if(nid  <  SIGNATURE_HEADER_SIZE  |&  nid  ==  NID.kUnpackInfo)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kUnpackInfo)    {    if(nid  <  SIGNATURE_HEADER_SIZE  |&  nid  ==  NID.kUnpackInfo)  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
666	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  1  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	add	if(nid  <  1  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	59	12	replace
667	[BUG]  [BUGGY]  if(nid  <  1  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }      [BUGGY]  if(nid  <  1  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      readUnpackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	327	327	12	replace	if(nid  <  1  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	59	12	replace
