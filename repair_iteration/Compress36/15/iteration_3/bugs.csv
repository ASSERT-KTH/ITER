bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
2	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
3	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
4	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
5	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
6	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  ';'  expected  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  	non-compiled	[CE]  ';'  expected	149	None	add
7	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HOUR_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HOUR_SIZE  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HOUR_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HOUR_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HeADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HOUR_SIZE	153	None	replace
8	[BUG]  [BUGGY]  [FE]  IOException  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HeADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	153	12	replace
9	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HeADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	153	12	replace
10	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_SIZE  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HeADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_SIZE	153	None	replace
11	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  numPackStreams  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  numPackStreams  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HeADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	153	12	replace
12	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  numPackStreams  >  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  numPackStreams  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  numPackStreams  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HeADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	153	12	replace
13	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSize)    {    	compilable	  [FE]  IOException  	121	12	replace
14	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kSize)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSize)    {    	compilable	  [FE]  IOException  	121	12	replace
15	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	121	12	replace
16	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	121	12	replace
17	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
18	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  List  <  String>  deferredBlockStreams  =  Lists.newArrayList();  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	List  <  String>  deferredBlockStreams  =  Lists.newArrayList();	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
19	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(numPackStreams);  [CE]  illegal  start  of  type  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(numPackStreams);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(numPackStreams);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
20	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(0);  [CE]  illegal  start  of  type  [FE]                                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(0);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(0);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
21	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid);  [CE]  illegal  start  of  type  [FE]                                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  List  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	List  <  String>  deferredBlockStreams  =  Lists.newArrayList(nid);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
22	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(1);  [CE]  illegal  start  of  type  [FE]                                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(1);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayList(1);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
23	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>();	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
24	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(1);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
25	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(0);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
26	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(numPackStreams);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(numPackStreams);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(numPackStreams);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
27	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(2);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
28	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.KCRC)  {  [CE]  cannot  find  symbol  KCRC  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.KCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.KCRC)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kRSC)    {    	non-compiled	[CE]  cannot  find  symbol  KCRC	141	None	replace
29	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.zCRC)  {  [CE]  cannot  find  symbol  zCRC  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.zCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.zCRC)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kRSC)    {    	non-compiled	[CE]  cannot  find  symbol  zCRC	141	None	replace
30	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.hCRC)  {  [CE]  cannot  find  symbol  hCRC  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.hCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.hCRC)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kRSC)    {    	non-compiled	[CE]  cannot  find  symbol  hCRC	141	None	replace
31	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.bytes)  {  [CE]  cannot  find  symbol  bytes  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.bytes)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.bytes)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kRSC)    {    	non-compiled	[CE]  cannot  find  symbol  bytes	141	None	replace
32	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.cCRC)  {  [CE]  cannot  find  symbol  cCRC  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.cCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.cCRC)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kRSC)    {    	non-compiled	[CE]  cannot  find  symbol  cCRC	141	None	replace
33	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(numPackStreams    <    =    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	129	12	replace
34	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(numPackStreams    <    =    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	129	12	replace
35	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(numPackStreams    <    =    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	129	12	replace
36	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(numPackStreams    <    =    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	129	12	replace
37	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(numPackStreams    <    =    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	129	12	replace
38	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(numPackStreams    <    =    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	129	12	replace
39	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kSize)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    if    (nid    <    SIGNATURE_HEAFDER_SIZE    ||    nid    ==    NID.kSize)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE	151	None	replace
40	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEAFTER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFTER_SIZE  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEAFTER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEAFTER_SIZE  ||  nid  >  NID.kSize)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    if    (nid    <    SIGNATURE_HEAFDER_SIZE    ||    nid    ==    NID.kSize)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFTER_SIZE	151	None	replace
41	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kCRC)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
42	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  [CE]  ';'  expected  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kCRC)    {    If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {	  	non-compiled	[CE]  ';'  expected	25	None	add
43	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kCRC)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
44	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kCRC)    {    if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
45	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kCRC)    {    if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
46	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.cCRC)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.cCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kCRC)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.cCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
47	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  if  (nid  >=  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  if  (nid  >=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  if  (nid  >=  NID.kCRC)  {	  if    (nid    ==    NID.kCRC)    {    if    (nid    >=    NID.kCRC)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
48	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]              IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid!=  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.kCRC)    {    if    (nid    >=    NID.kCRC)    {    	compilable	  [FE]  NoClassDefFoundError  	67	12	replace
49	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]              IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.kCRC)    {    if    (nid    >=    NID.kCRC)    {    	compilable	  [FE]  NoClassDefFoundError  	67	12	replace
50	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  2)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  2)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  NoClassDefFoundError  	86	12	replace
51	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  2)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  2)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  2)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  NoClassDefFoundError  	86	12	replace
52	[BUG]  [BUGGY]  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  IOException  	86	12	replace
53	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  IOException  	86	12	replace
54	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  1)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  NoClassDefFoundError  	86	12	replace
55	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  1)  {  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  1)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  NoClassDefFoundError  	86	12	replace
56	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  NoClassDefFoundError  	86	12	replace
57	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  NoClassDefFoundError  	86	12	replace
58	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
59	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	24	12	replace
60	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	24	12	replace
61	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
62	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	24	12	replace
63	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	24	12	replace
64	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	24	12	replace
65	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	24	12	replace
66	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  if  (nid!=  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  if  (nid!=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  if  (nid!=  NID.kCRC)  {	  if    (nid    ==    NID.kCRC)    {    if    (nid    >>    NID.kCRC)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
67	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  if  (nid  ==  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  if  (nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  if  (nid  ==  NID.kCRC)  {	  if    (nid    ==    NID.kCRC)    {    if    (nid    >>    NID.kCRC)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
68	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {	  if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  IOException  	64	12	replace
69	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {	  if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  IOException  	64	12	replace
70	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {	  if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  IOException  	64	12	replace
71	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {	  if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  IOException  	64	12	replace
72	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kSize)  {	  if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  IOException  	64	12	replace
73	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kSize)  {  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kSize)  {	  if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  IOException  	64	12	replace
74	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {	  if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  IOException  	64	12	replace
75	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {	  if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  IOException  	64	12	replace
76	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]            IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {	  if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	64	12	replace
77	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  [FE]  NoClassDefFoundError  [FE]            IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {	  if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	64	12	replace
78	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    	compilable	  [FE]  IOException  	128	12	replace
79	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    	compilable	  [FE]  IOException  	128	12	replace
80	[BUG]  [BUGGY]  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    	compilable	  [FE]  IOException  	128	12	replace
81	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    	compilable	  [FE]  IOException  	128	12	replace
82	[BUG]  [BUGGY]  [FE]  IOException  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kSize)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    	compilable	  [FE]  IOException  	128	12	replace
83	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kSize)  {  [FE]  IOException  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kSize)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    	compilable	  [FE]  IOException  	128	12	replace
84	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  <  =  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  <  =  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  <  =  NID.kSize)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
85	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    	compilable	  [FE]  IOException  	144	12	replace
86	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    	compilable	  [FE]  IOException  	144	12	replace
87	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    	compilable	  [FE]  NoClassDefFoundError  	144	12	replace
88	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    	compilable	  [FE]  NoClassDefFoundError  	144	12	replace
89	[BUG]  [BUGGY]  [FE]  IOException  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	95	12	replace
90	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	95	12	replace
91	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	95	12	replace
92	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	95	12	replace
93	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
94	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
95	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
96	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
97	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    If(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
98	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
99	[BUG]  [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	145	None	add
100	[BUG]  [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	145	None	add
101	[BUG]  [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	145	None	add
102	[BUG]  [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	145	None	add
103	[BUG]  [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	145	None	add
104	[BUG]  [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	145	None	add
105	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	130	None	add
106	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	130	None	add
107	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	130	None	add
108	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  ';'  expected  [FE]          IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  	non-compiled	[CE]  ';'  expected	130	None	add
109	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	130	None	add
110	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	130	None	add
111	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	132	None	add
112	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	132	None	add
113	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	132	None	add
114	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]          IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	132	None	add
115	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	132	None	add
116	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	132	None	add
117	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  IOException  	131	12	replace
118	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  IOException  	131	12	replace
119	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kSize)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  IOException  	131	12	replace
120	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kSize)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kSize)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  IOException  	131	12	replace
121	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	131	12	replace
122	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  [FE]  NoClassDefFoundError  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	131	12	replace
123	[BUG]  [BUGGY]  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  IOException  	131	12	replace
124	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  [FE]  IOException  [FE]          IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  IOException  	131	12	replace
125	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	127	None	add
126	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	127	None	add
127	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	127	None	add
128	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  If(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  ';'  expected  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  If(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    If(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  	non-compiled	[CE]  ';'  expected	127	None	add
129	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	127	None	add
130	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid  >  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid  >  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    if(nid  >  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	127	None	add
131	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
132	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
133	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
134	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
135	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  If(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  If(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    If(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  	non-compiled	[CE]  ';'  expected	63	None	add
136	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  [Delete]  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  ')'  expected  [FE]              IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  [Delete]  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid  [Delete]  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  	non-compiled	[CE]  ')'  expected	63	None	add
137	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  [BUGGY]  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  ')'  expected  [FE]                IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  [BUGGY]  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid  [BUGGY]  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  	non-compiled	[CE]  ')'  expected	63	None	add
138	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
139	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	97	None	add
140	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEader_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEader_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEader_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
141	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEaDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEaDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
142	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
143	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
144	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	115	None	add
145	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	115	None	add
146	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	115	None	add
147	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEaDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >  SIGNATURE_HEaDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	115	None	add
148	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEASTDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEASTDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >  SIGNATURE_HEASTDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	115	None	add
149	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEAder_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEAder_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >  SIGNATURE_HEAder_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	115	None	add
150	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.KRC)  {  [CE]  cannot  find  symbol  KRC  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.KRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.KRC)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kRC)    {    	non-compiled	[CE]  cannot  find  symbol  KRC	148	None	replace
151	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.packPos)  {  [CE]  cannot  find  symbol  packPos  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.packPos)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.packPos)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kRC)    {    	non-compiled	[CE]  cannot  find  symbol  packPos	148	None	replace
152	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.CC)  {  [CE]  cannot  find  symbol  CC  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.CC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.CC)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kRC)    {    	non-compiled	[CE]  cannot  find  symbol  CC	148	None	replace
153	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.hashCode)  {  [CE]  cannot  find  symbol  hashCode  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.hashCode)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.hashCode)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kRC)    {    	non-compiled	[CE]  cannot  find  symbol  hashCode	148	None	replace
154	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kCRC)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    	compilable	  [FE]  IOException  	8	12	replace
155	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kCRC)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kCRC)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    	compilable	  [FE]  IOException  	8	12	replace
156	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  NID.kCRC  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  ==  NID.kCRC  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    	compilable	  [FE]  IOException  	8	12	replace
157	[BUG]  [BUGGY]  if(nid  ==  NID.kCRC  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  NID.kCRC  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  NID.kCRC  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    	compilable	  [FE]  IOException  	8	12	replace
158	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HEader_SIZE  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEader_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEader_SIZE	93	None	replace
159	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEader_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
160	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {	  if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    	compilable	  [FE]  IOException  	119	12	replace
161	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {	  if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    	compilable	  [FE]  IOException  	119	12	replace
162	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kCRC)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kCRC)    {    	compilable	  [FE]  IOException  	16	12	replace
163	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kCRC)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kCRC)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kCRC)    {    	compilable	  [FE]  IOException  	16	12	replace
164	[BUG]  [BUGGY]  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kCRC)    {    	compilable	  [FE]  IOException  	16	12	replace
165	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kCRC)    {    	compilable	  [FE]  IOException  	16	12	replace
166	[BUG]  [BUGGY]  nid  =  readUint64(header,  nid);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  nid  =  readUint64(header,  nid);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	nid  =  readUint64(header,  nid);	  nid    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
167	[BUG]  [BUGGY]  nid  =  readUint64(header,  numPackStreams);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  nid  =  readUint64(header,  numPackStreams);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	nid  =  readUint64(header,  numPackStreams);	  nid    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
168	[BUG]  [BUGGY]  nid  =  readUint64(header,  archive.packPos);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  nid  =  readUint64(header,  archive.packPos);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	nid  =  readUint64(header,  archive.packPos);	  nid    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
169	[BUG]  [BUGGY]  nid  =  readUint64(header,  0);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  nid  =  readUint64(header,  0);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	nid  =  readUint64(header,  0);	  nid    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
170	[BUG]  [BUGGY]  nid  =  readUint64(header.length);  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  nid  =  readUint64(header.length);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	nid  =  readUint64(header.length);	  nid    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
171	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSize)    {    if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
172	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSize)    {    if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
173	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSize)    {    if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
174	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  [CE]  ';'  expected  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSize)    {    If  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
175	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  if  (nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  if  (nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSize)    {    if  (nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
176	[BUG]  [BUGGY]  if(nid  <  =  NID.0  ||  nid  ==  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  NID.0  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  NID.0  ||  nid  ==  NID.kCRC)  {	  if(nid    ==    NID.0    ||    nid    ==    NID.kCRC)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
177	[BUG]  [BUGGY]  if(nid  <  NID.0  ||  nid  ==  NID.kCRC)  {  [CE]  ')'  expected  [FE]            IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.0  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  NID.0  ||  nid  ==  NID.kCRC)  {	  if(nid    ==    NID.0    ||    nid    ==    NID.kCRC)    {    	non-compiled	[CE]  ')'  expected	50	None	replace
178	[BUG]  [BUGGY]  if(nid  >=  NID.0  ||  nid  ==  NID.kCRC)  {  [CE]  ')'  expected  [FE]              IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  NID.0  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >=  NID.0  ||  nid  ==  NID.kCRC)  {	  if(nid    ==    NID.0    ||    nid    ==    NID.kCRC)    {    	non-compiled	[CE]  ')'  expected	50	None	replace
179	[BUG]  [BUGGY]  if(nid!=  NID.0  ||  nid  ==  NID.kCRC)  {  [CE]  ')'  expected  [FE]                IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  NID.0  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid!=  NID.0  ||  nid  ==  NID.kCRC)  {	  if(nid    ==    NID.0    ||    nid    ==    NID.kCRC)    {    	non-compiled	[CE]  ')'  expected	50	None	replace
180	[BUG]  [BUGGY]  if(nid  ==  NID.0  ||  nid!=  NID.kCRC)  {  [CE]  ')'  expected  [FE]                  IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  NID.0  ||  nid!=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  NID.0  ||  nid!=  NID.kCRC)  {	  if(nid    ==    NID.0    ||    nid    ==    NID.kCRC)    {    	non-compiled	[CE]  ')'  expected	50	None	replace
181	[BUG]  [BUGGY]  Integer  nid  =  readAllOrBits(header,  (Integer)numPackStreams);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  Integer  nid  =  readAllOrBits(header,  (Integer)numPackStreams);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	Integer  nid  =  readAllOrBits(header,  (Integer)numPackStreams);	  Integer    nid    =    readAllOrBits(header,    (int)numPackStreams);    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
182	[BUG]  [BUGGY]  Integer  nid  =  readAllOrBits(header,  numPackStreams);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  Integer  nid  =  readAllOrBits(header,  numPackStreams);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	Integer  nid  =  readAllOrBits(header,  numPackStreams);	  Integer    nid    =    readAllOrBits(header,    (int)numPackStreams);    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
183	[BUG]  [BUGGY]  Integer  nid  =  readAllOrBits(header,  (int)numPackStreams  +  1);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  Integer  nid  =  readAllOrBits(header,  (int)numPackStreams  +  1);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	Integer  nid  =  readAllOrBits(header,  (int)numPackStreams  +  1);	  Integer    nid    =    readAllOrBits(header,    (int)numPackStreams);    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
184	[BUG]  [BUGGY]  Integer  nid  =  readAllOrBits(header,  fileName,  (int)numPackStreams);  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  Integer  nid  =  readAllOrBits(header,  fileName,  (int)numPackStreams);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	Integer  nid  =  readAllOrBits(header,  fileName,  (int)numPackStreams);	  Integer    nid    =    readAllOrBits(header,    (int)numPackStreams);    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
185	[BUG]  [BUGGY]  Integer  nid  =  readAllOrBits(header,  (int)numPackStreams.length);  [CE]  illegal  start  of  type  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  Integer  nid  =  readAllOrBits(header,  (int)numPackStreams.length);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	Integer  nid  =  readAllOrBits(header,  (int)numPackStreams.length);	  Integer    nid    =    readAllOrBits(header,    (int)numPackStreams);    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
186	[BUG]  [BUGGY]  if(nid  <  =  NID.kSize  ||  nid  >  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  NID.kSize  ||  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  NID.kSize  ||  nid  >  NID.kCRC)  {	  if(nid    <    NID.kSize    ||    nid    >    NID.kCRC)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
187	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  NID.kSize  ||  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(numPackStreams  <  NID.kSize  ||  nid  >  NID.kCRC)  {	  if(nid    <    NID.kSize    ||    nid    >    NID.kCRC)    {    	compilable	  [FE]  NoClassDefFoundError  	42	12	replace
188	[BUG]  [BUGGY]  if(numPackStreams  <  NID.kSize  ||  nid  >  NID.kCRC)  {  [FE]  NoClassDefFoundError  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  NID.kSize  ||  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  <  NID.kSize  ||  nid  >  NID.kCRC)  {	  if(nid    <    NID.kSize    ||    nid    >    NID.kCRC)    {    	compilable	  [FE]  NoClassDefFoundError  	42	12	replace
189	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  >=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  NID.kSize  ||  nid  >=  NID.kCRC)  {	  if(nid    <    NID.kSize    ||    nid    >    NID.kCRC)    {    	compilable	  [FE]  IOException  	42	12	replace
190	[BUG]  [BUGGY]  if(nid  <  NID.kSize  ||  nid  >=  NID.kCRC)  {  [FE]  IOException  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  >=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  NID.kSize  ||  nid  >=  NID.kCRC)  {	  if(nid    <    NID.kSize    ||    nid    >    NID.kCRC)    {    	compilable	  [FE]  IOException  	42	12	replace
191	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	133	12	replace
192	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	133	12	replace
193	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(numPackStreams  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	133	12	replace
194	[BUG]  [BUGGY]  if(numPackStreams  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	133	12	replace
195	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  >  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	133	12	replace
196	[BUG]  [BUGGY]  if(nid  >  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	133	12	replace
197	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.KSC)  {  [CE]  cannot  find  symbol  KSC  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.KSC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.KSC)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSC)    {    	non-compiled	[CE]  cannot  find  symbol  KSC	111	None	replace
198	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.KB)  {  [CE]  cannot  find  symbol  KB  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.KB)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.KB)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSC)    {    	non-compiled	[CE]  cannot  find  symbol  KB	111	None	replace
199	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.MB)  {  [CE]  cannot  find  symbol  MB  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.MB)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.MB)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSC)    {    	non-compiled	[CE]  cannot  find  symbol  MB	111	None	replace
200	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kCRC)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kCRC)    {    	compilable	  [FE]  IOException  	26	12	replace
201	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kCRC)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kCRC)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kCRC)    {    	compilable	  [FE]  IOException  	26	12	replace
202	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kCRC)    {    	compilable	  [FE]  NoClassDefFoundError  	26	12	replace
203	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kCRC)    {    	compilable	  [FE]  NoClassDefFoundError  	26	12	replace
204	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kCRC)    {    	compilable	  [FE]  NoClassDefFoundError  	26	12	replace
205	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kCRC)    {    	compilable	  [FE]  NoClassDefFoundError  	26	12	replace
206	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE)  {  if(numPackStreams  <  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE)  {  if(numPackStreams  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams    <    SIGNATURE_HEADER_SIZE)    {    if(numPackStreams  <  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
207	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE)  {  If(numPackStreams  <  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE)  {  If(numPackStreams  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams    <    SIGNATURE_HEADER_SIZE)    {    If(numPackStreams  <  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	87	None	add
208	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE)  {  int  numPackStreams  =  readUint64(header);  if(numPackStreams  <  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE)  {  int  numPackStreams  =  readUint64(header);  if(numPackStreams  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams    <    SIGNATURE_HEADER_SIZE)    {    int  numPackStreams  =  readUint64(header);  if(numPackStreams  <  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
209	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE)  {  if(numPackStreams  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE)  {  if(numPackStreams  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams    <    SIGNATURE_HEADER_SIZE)    {    if(numPackStreams  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
210	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE)  {  if(numPackStreams  <  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE)  {  if(numPackStreams  <  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams    <    SIGNATURE_HEADER_SIZE)    {    if(numPackStreams  <  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
211	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE)  {  if(numPackStreams  <  SIGNATURE_HEAder_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE)  {  if(numPackStreams  <  SIGNATURE_HEAder_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams    <    SIGNATURE_HEADER_SIZE)    {    if(numPackStreams  <  SIGNATURE_HEAder_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
212	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kSize)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
213	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kSize)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
214	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kSize)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
215	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kSize)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
216	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kSize)    {    If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {	  	non-compiled	[CE]  ';'  expected	29	None	add
217	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [Delete]  NID.kSize)  {  [CE]  ')'  expected  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [Delete]  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kSize)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [Delete]  NID.kSize)  {	  	non-compiled	[CE]  ')'  expected	29	None	add
218	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [BUGGY]  NID.kSize)  {  [CE]  ')'  expected  [FE]                NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [BUGGY]  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kSize)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [BUGGY]  NID.kSize)  {	  	non-compiled	[CE]  ')'  expected	29	None	add
219	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    If(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
220	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    If(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  ';'  expected	53	None	replace
221	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCrc)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  ';'  expected  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCrc)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCrc)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    If(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  ';'  expected	53	None	replace
222	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  ';'  expected  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    If(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  ';'  expected	53	None	replace
223	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  ';'  expected  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    If(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  ';'  expected	53	None	replace
224	[BUG]  [BUGGY]  Integer  numPackStreams  =  readUint64(header,  nid);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  Integer  numPackStreams  =  readUint64(header,  nid);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	Integer  numPackStreams  =  readUint64(header,  nid);	  Integer    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
225	[BUG]  [BUGGY]  Integer  numPackStreams  =  readUint64(nid);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  Integer  numPackStreams  =  readUint64(nid);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	Integer  numPackStreams  =  readUint64(nid);	  Integer    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
226	[BUG]  [BUGGY]  int  numPackStreams  =  readUint64(header);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  numPackStreams  =  readUint64(header);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	int  numPackStreams  =  readUint64(header);	  Integer    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
227	[BUG]  [BUGGY]  final  Integer  numPackStreams  =  readUint64(header);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  final  Integer  numPackStreams  =  readUint64(header);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	final  Integer  numPackStreams  =  readUint64(header);	  Integer    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
228	[BUG]  [BUGGY]  Integer  numPackStreams  =  readUint64(header.length);  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  Integer  numPackStreams  =  readUint64(header.length);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	Integer  numPackStreams  =  readUint64(header.length);	  Integer    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
229	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  ';'  expected	92	None	replace
230	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
231	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  ';'  expected	92	None	replace
232	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_S  [CE]  illegal  start  of  expression  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_S  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_S	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
233	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HE  [CE]  illegal  start  of  expression  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HE  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HE	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
234	[BUG]  [BUGGY]  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  ';'  expected	92	None	replace
235	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  1);  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  1);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  1);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
236	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  2);  [CE]  illegal  start  of  type  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  2);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  2);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
237	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  6);  [CE]  illegal  start  of  type  [FE]                                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  6);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  6);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
238	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [CE]  illegal  start  of  type  [FE]                                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	List  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
239	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kCRC);  [CE]  illegal  start  of  type  [FE]                                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kCRC);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(NID.kCRC);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
240	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(numPackStreams  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(numPackStreams    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	77	12	replace
241	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(numPackStreams    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	77	12	replace
242	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  numPackStreams  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  numPackStreams  >  SIGNATURE_HEADER_SIZE)  {	  if(numPackStreams    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	77	12	replace
243	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  numPackStreams  >  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  numPackStreams  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  numPackStreams  >  SIGNATURE_HEADER_SIZE)  {	  if(numPackStreams    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	77	12	replace
244	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.kCRC)  {	  if    (nid    ==    NID.kCRC)    {    if    (nid!=    NID.kCRC)    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
245	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.0)  {  [CE]  ')'  expected  [FE]            IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.0)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  NID.0)  {	  if    (nid    ==    NID.kCRC)    {    if    (nid!=    NID.kCRC)    {    	non-compiled	[CE]  ')'  expected	66	None	replace
246	[BUG]  [BUGGY]  if(nid  <  NID.kSize)  {  if(nid  <  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize)  {  if(nid  <  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize)    {    if(nid  <  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
247	[BUG]  [BUGGY]  if(nid  <  NID.kSize)  {  if(nid  <  NID.kSize)  {  this.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize)  {  if(nid  <  NID.kSize)  {  this.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize)    {    if(nid  <  NID.kSize)  {  this.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
248	[BUG]  [BUGGY]  if(nid  <  NID.kSize)  {  if(nid  <  NID.kSize)  {  }  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize)  {  if(nid  <  NID.kSize)  {  }  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize)    {    if(nid  <  NID.kSize)  {  }  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
249	[BUG]  [BUGGY]  if(nid  <  NID.kSize)  {  if(nid  <  NID.kSize)  {  }  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize)  {  if(nid  <  NID.kSize)  {  }  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize)    {    if(nid  <  NID.kSize)  {  }  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
250	[BUG]  [BUGGY]  if(nid  <  NID.kSize)  {  if(nid  <  NID.kSize)  {  this.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize)  {  if(nid  <  NID.kSize)  {  this.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize)    {    if(nid  <  NID.kSize)  {  this.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
251	[BUG]  [BUGGY]  if(nid  <  NID.kSize)  {  if(nid  <  NID.kSize)  {  }  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header  [CE]  ')'  expected  [FE]              IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize)  {  if(nid  <  NID.kSize)  {  }  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize)    {    if(nid  <  NID.kSize)  {  }  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header	  	non-compiled	[CE]  ')'  expected	35	None	add
252	[BUG]  [BUGGY]  if(nid  <  NID.kSize)  {  if(nid  <  NID.kSize)  {  this.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header  [CE]  ')'  expected  [FE]                IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize)  {  if(nid  <  NID.kSize)  {  this.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize)    {    if(nid  <  NID.kSize)  {  this.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header	  	non-compiled	[CE]  ')'  expected	35	None	add
253	[BUG]  [BUGGY]  if(nid  <  NID.kSize)  {  if(nid  <  NID.kSize)  {  }  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header,  [CE]  illegal  start  of  expression  [FE]                  IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize)  {  if(nid  <  NID.kSize)  {  }  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header,  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize)    {    if(nid  <  NID.kSize)  {  }  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header,	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
254	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  IOException  	110	12	replace
255	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  IOException  	110	12	replace
256	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  IOException  	110	12	replace
257	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  IOException  	110	12	replace
258	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	110	12	replace
259	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [FE]  NoClassDefFoundError  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	110	12	replace
260	[BUG]  [BUGGY]  if(nid  <  NID.kSize  ||  nid  <  NID.kCRC)  {  if(nid  <  NID.kSize  ||  nid  <  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  <  NID.kCRC)  {  if(nid  <  NID.kSize  ||  nid  <  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize    ||    nid    <    NID.kCRC)    {    if(nid  <  NID.kSize  ||  nid  <  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
261	[BUG]  [BUGGY]  if(nid  <  NID.kSize  ||  nid  <  NID.kCRC)  {  If(nid  <  NID.kSize  ||  nid  <  NID.kCRC)  {  [CE]  ';'  expected  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  <  NID.kCRC)  {  If(nid  <  NID.kSize  ||  nid  <  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize    ||    nid    <    NID.kCRC)    {    If(nid  <  NID.kSize  ||  nid  <  NID.kCRC)  {	  	non-compiled	[CE]  ';'  expected	38	None	add
262	[BUG]  [BUGGY]  if(nid  <  NID.kSize  ||  nid  <  NID.kCRC)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  <  NID.kCRC)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize    ||    nid    <    NID.kCRC)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
263	[BUG]  [BUGGY]  if(nid  <  NID.kSize  ||  nid  <  NID.kCRC)  {  if(nid  >=  NID.kSize  ||  nid  <  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  <  NID.kCRC)  {  if(nid  >=  NID.kSize  ||  nid  <  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize    ||    nid    <    NID.kCRC)    {    if(nid  >=  NID.kSize  ||  nid  <  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
264	[BUG]  [BUGGY]  if(nid  <  NID.kSize  ||  nid  <  NID.kCRC)  {  if(nid  <  NID.kSize  ||  nid  >=  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  <  NID.kCRC)  {  if(nid  <  NID.kSize  ||  nid  >=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize    ||    nid    <    NID.kCRC)    {    if(nid  <  NID.kSize  ||  nid  >=  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
265	[BUG]  [BUGGY]  if(nid  <  NID.kSize  ||  nid  <  NID.kCRC)  {  if(NID.kSize  ||  nid  <  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  <  NID.kCRC)  {  if(NID.kSize  ||  nid  <  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize    ||    nid    <    NID.kCRC)    {    if(NID.kSize  ||  nid  <  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
266	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  >=  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    =    NID.kSize    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	40	12	replace
267	[BUG]  [BUGGY]  if(nid  >=  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >=  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    =    NID.kSize    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	40	12	replace
268	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  nid);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  Integer  nid  =  readUint64(header,  nid);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	Integer  nid  =  readUint64(header,  nid);	  Integer    nid    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
269	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  numPackStreams);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  Integer  nid  =  readUint64(header,  numPackStreams);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	Integer  nid  =  readUint64(header,  numPackStreams);	  Integer    nid    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
270	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  0);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  Integer  nid  =  readUint64(header,  0);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	Integer  nid  =  readUint64(header,  0);	  Integer    nid    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
271	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header.length);  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  Integer  nid  =  readUint64(header.length);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	Integer  nid  =  readUint64(header.length);	  Integer    nid    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
272	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  archive.packPos);  [CE]  illegal  start  of  type  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  Integer  nid  =  readUint64(header,  archive.packPos);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	Integer  nid  =  readUint64(header,  archive.packPos);	  Integer    nid    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
273	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header,  1);  [CE]  illegal  start  of  type  [FE]                                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  Integer  nid  =  readUint64(header,  1);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	Integer  nid  =  readUint64(header,  1);	  Integer    nid    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
274	[BUG]  [BUGGY]  if(numPackStreams  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    =    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
275	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
276	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	78	None	add
277	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEader_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEader_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEader_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
278	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
279	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEaDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEaDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
280	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
281	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  currentFolderInputStream.toArray(new  ArrayList  <  String>());  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  currentFolderInputStream.toArray(new  ArrayList  <  String>());  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  String>  deferredBlockStreams  =  currentFolderInputStream.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
282	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>(),  nid);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>(),  nid);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>(),  nid);	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
283	[BUG]  [BUGGY]  List  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  List  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	List  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
284	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  this.inputStreamStack.toArray(new  ArrayList  <  String>());  [CE]  illegal  start  of  type  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  this.inputStreamStack.toArray(new  ArrayList  <  String>());  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  String>  deferredBlockStreams  =  this.inputStreamStack.toArray(new  ArrayList  <  String>());	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
285	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>()  +  nid);  [CE]  illegal  start  of  type  [FE]                                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>()  +  nid);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>()  +  nid);	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
286	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	143	None	add
287	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE  *  2)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE  *  2)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE  *  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	143	None	add
288	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [CE]  ';'  expected  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {	  	non-compiled	[CE]  ';'  expected	143	None	add
289	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE  *  2)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE  *  2)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE  *  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	143	None	add
290	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	143	None	add
291	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE  *  2)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE  *  2)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE  *  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	143	None	add
292	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HEaDER_SIZE  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEaDER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEaDER_SIZE	94	None	replace
293	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte()  +  1;  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	int  nid  =  header.readUnsignedByte()  +  1;	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
294	[BUG]  [BUGGY]  int  nid  =  inputStreamStack.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  inputStreamStack.readUnsignedByte();  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	int  nid  =  inputStreamStack.readUnsignedByte();	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
295	[BUG]  [BUGGY]  byte  nid  =  header.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  byte  nid  =  header.readUnsignedByte();  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	byte  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
296	[BUG]  [BUGGY]  long  nid  =  header.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  long  nid  =  header.readUnsignedByte();  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	long  nid  =  header.readUnsignedByte();	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
297	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(numPackStreams);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  header.readUnsignedByte(numPackStreams);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	int  nid  =  header.readUnsignedByte(numPackStreams);	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
298	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	30	12	replace
299	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kSize)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	30	12	replace
300	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	30	12	replace
301	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	30	12	replace
302	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	79	12	replace
303	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	79	12	replace
304	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
305	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSize)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
306	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSize)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
307	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSize)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
308	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSize)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
309	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSize)    {    If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {	  	non-compiled	[CE]  ';'  expected	120	None	add
310	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [Delete]  NID.kSize)  {  [CE]  ')'  expected  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [Delete]  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSize)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [Delete]  NID.kSize)  {	  	non-compiled	[CE]  ')'  expected	120	None	add
311	[BUG]  [BUGGY]  ArrayList  <  Integer>  deferredBlockStreams  =  new  ArrayList  <  Integer>(nid);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  Integer>  deferredBlockStreams  =  new  ArrayList  <  Integer>(nid);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  Integer>  deferredBlockStreams  =  new  ArrayList  <  Integer>(nid);	  ArrayList    <    Integer>    deferredBlockStreams    =    new    ArrayList    <    Integer>(numPackStreams);    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
312	[BUG]  [BUGGY]  ArrayList  <  Integer>  deferredBlockStreams  =  new  ArrayList  <  Integer>(numPackStreams,  nid);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  Integer>  deferredBlockStreams  =  new  ArrayList  <  Integer>(numPackStreams,  nid);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  Integer>  deferredBlockStreams  =  new  ArrayList  <  Integer>(numPackStreams,  nid);	  ArrayList    <    Integer>    deferredBlockStreams    =    new    ArrayList    <    Integer>(numPackStreams);    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
313	[BUG]  [BUGGY]  List  <  Integer>  deferredBlockStreams  =  new  ArrayList  <  Integer>(nid);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  List  <  Integer>  deferredBlockStreams  =  new  ArrayList  <  Integer>(nid);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	List  <  Integer>  deferredBlockStreams  =  new  ArrayList  <  Integer>(nid);	  ArrayList    <    Integer>    deferredBlockStreams    =    new    ArrayList    <    Integer>(numPackStreams);    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
314	[BUG]  [BUGGY]  List  <  Integer>  deferredBlockStreams  =  new  ArrayList  <  Integer>(numPackStreams);  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  List  <  Integer>  deferredBlockStreams  =  new  ArrayList  <  Integer>(numPackStreams);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	List  <  Integer>  deferredBlockStreams  =  new  ArrayList  <  Integer>(numPackStreams);	  ArrayList    <    Integer>    deferredBlockStreams    =    new    ArrayList    <    Integer>(numPackStreams);    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
315	[BUG]  [BUGGY]  ArrayList  <  Integer>  deferredBlockStreams  =  new  ArrayList  <  Integer>();  [CE]  illegal  start  of  type  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  Integer>  deferredBlockStreams  =  new  ArrayList  <  Integer>();  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  Integer>  deferredBlockStreams  =  new  ArrayList  <  Integer>();	  ArrayList    <    Integer>    deferredBlockStreams    =    new    ArrayList    <    Integer>(numPackStreams);    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
316	[BUG]  [BUGGY]  ArrayList  <  Integer>  deferredBlockStreams  =  new  ArrayList  <  Integer>(numPackStreams  +  nid);  [CE]  illegal  start  of  type  [FE]                                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  Integer>  deferredBlockStreams  =  new  ArrayList  <  Integer>(numPackStreams  +  nid);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  Integer>  deferredBlockStreams  =  new  ArrayList  <  Integer>(numPackStreams  +  nid);	  ArrayList    <    Integer>    deferredBlockStreams    =    new    ArrayList    <    Integer>(numPackStreams);    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
317	[BUG]  [BUGGY]  ArrayList  <  Integer>  deferredBlockStreams  =  new  ArrayList  <  Integer>(length);  [CE]  illegal  start  of  type  [FE]                                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  Integer>  deferredBlockStreams  =  new  ArrayList  <  Integer>(length);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  Integer>  deferredBlockStreams  =  new  ArrayList  <  Integer>(length);	  ArrayList    <    Integer>    deferredBlockStreams    =    new    ArrayList    <    Integer>(numPackStreams);    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
318	[BUG]  [BUGGY]  int  nextHeaderSize  =  readUint64(header,  nid,  numPackStreams);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nextHeaderSize  =  readUint64(header,  nid,  numPackStreams);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	int  nextHeaderSize  =  readUint64(header,  nid,  numPackStreams);	  int    nextHeaderSize    =    readUint64(header,    nid);    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
319	[BUG]  [BUGGY]  int  nextHeaderSize  =  readUint64(header,  nid,  0);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nextHeaderSize  =  readUint64(header,  nid,  0);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	int  nextHeaderSize  =  readUint64(header,  nid,  0);	  int    nextHeaderSize    =    readUint64(header,    nid);    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
320	[BUG]  [BUGGY]  int  nextHeaderSize  =  readUint64(header,  nid,  SIGNATURE_HEADER_SIZE);  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nextHeaderSize  =  readUint64(header,  nid,  SIGNATURE_HEADER_SIZE);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	int  nextHeaderSize  =  readUint64(header,  nid,  SIGNATURE_HEADER_SIZE);	  int    nextHeaderSize    =    readUint64(header,    nid);    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
321	[BUG]  [BUGGY]  int  nextHeaderSize  =  readUint64(header,  nid,  1);  [CE]  illegal  start  of  type  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nextHeaderSize  =  readUint64(header,  nid,  1);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	int  nextHeaderSize  =  readUint64(header,  nid,  1);	  int    nextHeaderSize    =    readUint64(header,    nid);    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
322	[BUG]  [BUGGY]  int  nextHeaderSize  =  readUint64(header,  nid,  fileName);  [CE]  illegal  start  of  type  [FE]                                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nextHeaderSize  =  readUint64(header,  nid,  fileName);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	int  nextHeaderSize  =  readUint64(header,  nid,  fileName);	  int    nextHeaderSize    =    readUint64(header,    nid);    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
323	[BUG]  [BUGGY]  int  nextHeaderSize  =  readUint64(header,  nid  +  1);  [CE]  illegal  start  of  type  [FE]                                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nextHeaderSize  =  readUint64(header,  nid  +  1);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	int  nextHeaderSize  =  readUint64(header,  nid  +  1);	  int    nextHeaderSize    =    readUint64(header,    nid);    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
324	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HeADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  cannot  find  symbol  SIGNATURE_HeADER_SIZE  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HeADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HeADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid    <    SIGNATURE_HeADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HeADER_SIZE	135	None	replace
325	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	nid  =  header.readUnsignedByte()  +  1;	  nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
326	[BUG]  [BUGGY]  nid  =  inputStreamStack.readUnsignedByte();  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  nid  =  inputStreamStack.readUnsignedByte();  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	nid  =  inputStreamStack.readUnsignedByte();	  nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
327	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(numPackStreams);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  nid  =  header.readUnsignedByte(numPackStreams);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	nid  =  header.readUnsignedByte(numPackStreams);	  nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
328	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(0);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  nid  =  header.readUnsignedByte(0);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	nid  =  header.readUnsignedByte(0);	  nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
329	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
330	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
331	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
332	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
333	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
334	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  If(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  ';'  expected  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  If(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    If(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  	non-compiled	[CE]  ';'  expected	118	None	add
335	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid  [Delete]  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  ')'  expected  [FE]                NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid  [Delete]  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    if(nid  [Delete]  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  	non-compiled	[CE]  ')'  expected	118	None	add
336	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kCRC)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSize)    {    	compilable	  [FE]  IOException  	4	12	replace
337	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kCRC)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kCRC)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSize)    {    	compilable	  [FE]  IOException  	4	12	replace
338	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	150	12	replace
339	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	150	12	replace
340	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(numPackStreams  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSize)    {    	compilable	  [FE]  IOException  	10	12	replace
341	[BUG]  [BUGGY]  if(numPackStreams  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSize)    {    	compilable	  [FE]  IOException  	10	12	replace
342	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kCRC)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSize)    {    	compilable	  [FE]  IOException  	10	12	replace
343	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kCRC)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kCRC)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSize)    {    	compilable	  [FE]  IOException  	10	12	replace
344	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEASTDER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  cannot  find  symbol  SIGNATURE_HEASTDER_SIZE  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEASTDER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEASTDER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid    <    SIGNATURE_HEASTDER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEASTDER_SIZE	56	None	replace
345	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEASTDER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HEASTDER_SIZE  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEASTDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEASTDER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid    <    SIGNATURE_HEASTDER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEASTDER_SIZE	56	None	replace
346	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEASTDER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEASTDER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEASTDER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid    <    SIGNATURE_HEASTDER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
347	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEASTDER_SIZE  ||  nid  >  NID.kCRC)  {  [CE]  cannot  find  symbol  SIGNATURE_HEASTDER_SIZE  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEASTDER_SIZE  ||  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEASTDER_SIZE  ||  nid  >  NID.kCRC)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid    <    SIGNATURE_HEASTDER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEASTDER_SIZE	56	None	replace
348	[BUG]  [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  NID.kCRC)  {  if(nid  <  NID.kSize  ||  nid  >  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  NID.kCRC)  {  if(nid  <  NID.kSize  ||  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize    ||    nid    >    NID.kCRC)    {    if(nid  <  NID.kSize  ||  nid  >  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
349	[BUG]  [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  NID.kCRC)  {  If(nid  <  NID.kSize  ||  nid  >  NID.kCRC)  {  [CE]  ';'  expected  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  NID.kCRC)  {  If(nid  <  NID.kSize  ||  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize    ||    nid    >    NID.kCRC)    {    If(nid  <  NID.kSize  ||  nid  >  NID.kCRC)  {	  	non-compiled	[CE]  ';'  expected	41	None	add
350	[BUG]  [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  NID.kCRC)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  NID.kCRC)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize    ||    nid    >    NID.kCRC)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
351	[BUG]  [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  NID.kCRC)  {  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  NID.kCRC)  {  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize    ||    nid    >    NID.kCRC)    {    if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
352	[BUG]  [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  NID.kCRC)  {  if(nid  >=  NID.kSize  ||  nid  >  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  NID.kCRC)  {  if(nid  >=  NID.kSize  ||  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize    ||    nid    >    NID.kCRC)    {    if(nid  >=  NID.kSize  ||  nid  >  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
353	[BUG]  [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  NID.kCRC)  {  if(NID.kSize  ||  nid  >  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  NID.kCRC)  {  if(NID.kSize  ||  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize    ||    nid    >    NID.kCRC)    {    if(NID.kSize  ||  nid  >  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
354	[BUG]  [BUGGY]  int  nextHeaderSize  =  readUint64(nid);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nextHeaderSize  =  readUint64(nid);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	int  nextHeaderSize  =  readUint64(nid);	  int    nextHeaderSize    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
355	[BUG]  [BUGGY]  byte  nextHeaderSize  =  readUint64(header);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  byte  nextHeaderSize  =  readUint64(header);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	byte  nextHeaderSize  =  readUint64(header);	  int    nextHeaderSize    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
356	[BUG]  [BUGGY]  long  nextHeaderSize  =  readUint64(header);  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  long  nextHeaderSize  =  readUint64(header);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	long  nextHeaderSize  =  readUint64(header);	  int    nextHeaderSize    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
357	[BUG]  [BUGGY]  int  nextHeaderSize  =  readUint64(header.length);  [CE]  illegal  start  of  type  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nextHeaderSize  =  readUint64(header.length);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	int  nextHeaderSize  =  readUint64(header.length);	  int    nextHeaderSize    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
358	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  ';'  expected  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    If(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    	non-compiled	[CE]  ';'  expected	75	None	replace
359	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    If(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
360	[BUG]  [BUGGY]  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  ';'  expected  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    If(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    	non-compiled	[CE]  ';'  expected	75	None	replace
361	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kS  [CE]  ')'  expected  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kS  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kS	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    If(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    	non-compiled	[CE]  ')'  expected	75	None	replace
362	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  If  (nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  If  (nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  If  (nid  <  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    If    (nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
363	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  If  (nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  If  (nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE)  {  If  (nid  <  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    If    (nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  ';'  expected	59	None	replace
364	[BUG]  [BUGGY]  If  (nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  If  (nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	If  (nid  <  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    If    (nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  ';'  expected	59	None	replace
365	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(numPackStreams  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kSize)    {    	compilable	  [FE]  IOException  	28	12	replace
366	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kSize)    {    	compilable	  [FE]  IOException  	28	12	replace
367	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kCRC)    {    if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
368	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kCRC)    {    if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
369	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kCRC)    {    if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
370	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kCRC)    {    if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
371	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kCRC)    {    If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
372	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [Delete]  NID.kCRC)  {  [CE]  ')'  expected  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [Delete]  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kCRC)    {    if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [Delete]  NID.kCRC)  {	  	non-compiled	[CE]  ')'  expected	5	None	add
373	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(NID  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(NID  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(NID  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(NID    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
374	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(NID  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(NID  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(NID  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(NID    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
375	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
376	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
377	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
378	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
379	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
380	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]              IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	23	None	add
381	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEader_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEader_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEader_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
382	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEAFDER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid    ==    SIGNATURE_HEAFDER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
383	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE  [FE]                    IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  SIGNATURE_HEAFDER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid    ==    SIGNATURE_HEAFDER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE	48	None	replace
384	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEAFDER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE  [FE]                      IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEAFDER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid    ==    SIGNATURE_HEAFDER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE	48	None	replace
385	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
386	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
387	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  0  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	98	12	replace
388	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  0  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	98	12	replace
389	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	98	12	replace
390	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  <  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	98	12	replace
391	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kCRC)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kCRC)    {    	compilable	  [FE]  IOException  	6	12	replace
392	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kCRC)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if  (nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kCRC)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kCRC)    {    	compilable	  [FE]  IOException  	6	12	replace
393	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	109	None	add
394	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  If(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  ';'  expected  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  If(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    If(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  	non-compiled	[CE]  ';'  expected	109	None	add
395	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  >  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  >  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid  >  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	109	None	add
396	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(Nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(Nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(Nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	109	None	add
397	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  >  SIGNATURE_HEASTDER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  >  SIGNATURE_HEASTDER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid  >  SIGNATURE_HEASTDER_SIZE  ||  nid  >  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	109	None	add
398	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.length)  {  [CE]  cannot  find  symbol  length  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.length)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.length)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kRCC)    {    	non-compiled	[CE]  cannot  find  symbol  length	34	None	replace
399	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
400	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
401	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
402	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
403	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	80	None	add
404	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [Delete]  SIGNATURE_HEADER_SIZE)  {  [CE]  ')'  expected  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [Delete]  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [Delete]  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ')'  expected	80	None	add
405	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEaDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEaDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
406	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  ';'  expected  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    If    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
407	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    If    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
408	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  [CE]  ';'  expected  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    If    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
409	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid    <    SIGNATURE_HEAFDER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
410	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid    <    SIGNATURE_HEAFDER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE	55	None	replace
411	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	100	12	replace
412	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid!=  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	100	12	replace
413	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kSize)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    if(nid    ==    SIGNATURE_HEAFDER_SIZE    ||    nid    ==    NID.kSize)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE	142	None	replace
414	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEAFTER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFTER_SIZE  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEAFTER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  SIGNATURE_HEAFTER_SIZE  ||  nid  ==  NID.kSize)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    if(nid    ==    SIGNATURE_HEAFDER_SIZE    ||    nid    ==    NID.kSize)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFTER_SIZE	142	None	replace
415	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
416	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
417	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
418	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
419	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
420	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  If(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [CE]  ';'  expected  [FE]              IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  If(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    If(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {	  	non-compiled	[CE]  ';'  expected	11	None	add
421	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid  [Delete]  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [CE]  ')'  expected  [FE]                IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid  [Delete]  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    if(nid  [Delete]  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {	  	non-compiled	[CE]  ')'  expected	11	None	add
422	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
423	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
424	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
425	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
426	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
427	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [CE]  ';'  expected  [FE]              IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
428	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    if(nid  >>  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
429	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  NID.kCRC)  {	  if    (nid    ==    NID.kCRC)    {    if    (nid    ==    NID.kCRC)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
430	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kCRC)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    	compilable	  [FE]  IOException  	14	12	replace
431	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kCRC)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kCRC)  {	  if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    	compilable	  [FE]  IOException  	14	12	replace
432	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
433	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
434	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
435	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
436	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	82	None	add
437	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
438	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEader_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEader_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEader_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
439	[BUG]  [BUGGY]  if(nid  ==  NID.kCRC)  {  If(nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]              IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  NID.kCRC)  {  If(nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  NID.kCRC)  {  If(nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE)    {    If(nid    ==    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  ';'  expected	46	None	replace
440	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE)    {    If(nid    ==    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
441	[BUG]  [BUGGY]  If(nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]                  IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  If(nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	If(nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE)    {    If(nid    ==    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  ';'  expected	46	None	replace
442	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kCRC)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
443	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kCRC)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
444	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kCRC)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >>  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
445	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kCRC)    {    if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
446	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kCRC)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
447	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  [CE]  ';'  expected  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kCRC)    {    If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
448	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  numPackStreams  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  numPackStreams  ==  SIGNATURE_HEADER_SIZE)  {	  if(numPackStreams    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	114	12	replace
449	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  numPackStreams  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  numPackStreams  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  numPackStreams  ==  SIGNATURE_HEADER_SIZE)  {	  if(numPackStreams    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	114	12	replace
450	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(numPackStreams  >  SIGNATURE_HEADER_SIZE)  {	  if(numPackStreams    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	114	12	replace
451	[BUG]  [BUGGY]  if(numPackStreams  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  >  SIGNATURE_HEADER_SIZE)  {	  if(numPackStreams    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	114	12	replace
452	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	83	12	replace
453	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	83	12	replace
454	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  if(numPackStreams    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	33	12	replace
455	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  if(numPackStreams    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	33	12	replace
456	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(numPackStreams  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(numPackStreams    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	33	12	replace
457	[BUG]  [BUGGY]  if(numPackStreams  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(numPackStreams    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	33	12	replace
458	[BUG]  [BUGGY]  if(numPackStreams  ==  SIGNATURE_HEADER_SIZE)  {  if(numPackStreams  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  ==  SIGNATURE_HEADER_SIZE)  {  if(numPackStreams  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams    ==    SIGNATURE_HEADER_SIZE)    {    if(numPackStreams  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
459	[BUG]  [BUGGY]  if(numPackStreams  ==  SIGNATURE_HEADER_SIZE)  {  if(numPackStreams!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  ==  SIGNATURE_HEADER_SIZE)  {  if(numPackStreams!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams    ==    SIGNATURE_HEADER_SIZE)    {    if(numPackStreams!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
460	[BUG]  [BUGGY]  if(numPackStreams  ==  SIGNATURE_HEADER_SIZE)  {  if(numPackStreams  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  ==  SIGNATURE_HEADER_SIZE)  {  if(numPackStreams  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams    ==    SIGNATURE_HEADER_SIZE)    {    if(numPackStreams  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
461	[BUG]  [BUGGY]  if(numPackStreams  ==  SIGNATURE_HEADER_SIZE)  {  If(numPackStreams  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]          IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  ==  SIGNATURE_HEADER_SIZE)  {  If(numPackStreams  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams    ==    SIGNATURE_HEADER_SIZE)    {    If(numPackStreams  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	113	None	add
462	[BUG]  [BUGGY]  if(numPackStreams  ==  SIGNATURE_HEADER_SIZE)  {  if(numPackStreams  >>  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  ==  SIGNATURE_HEADER_SIZE)  {  if(numPackStreams  >>  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams    ==    SIGNATURE_HEADER_SIZE)    {    if(numPackStreams  >>  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
463	[BUG]  [BUGGY]  if(numPackStreams  ==  SIGNATURE_HEADER_SIZE)  {  if(numPackStreams  ==  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  ==  SIGNATURE_HEADER_SIZE)  {  if(numPackStreams  ==  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams    ==    SIGNATURE_HEADER_SIZE)    {    if(numPackStreams  ==  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
464	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSize)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
465	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSize)    {    if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
466	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSize)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
467	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSize)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
468	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSize)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  >=  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
469	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  [CE]  ';'  expected  [FE]              IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSize)    {    If(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
470	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]                IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  if(nid  >>  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSize)    {    if(nid  >>  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
471	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	81	12	replace
472	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	81	12	replace
473	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
474	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEAFDER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE	96	None	replace
475	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFTER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFTER_SIZE  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFTER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFTER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEAFDER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFTER_SIZE	96	None	replace
476	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEAFDER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
477	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEAFDER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE	96	None	replace
478	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  0  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEAFDER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE	96	None	replace
479	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEAFDER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE	96	None	replace
480	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.KCRC)  {  [CE]  cannot  find  symbol  KCRC  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.KCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.KCRC)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCrc)    {    	non-compiled	[CE]  cannot  find  symbol  KCRC	17	None	replace
481	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.length)  {  [CE]  cannot  find  symbol  length  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.length)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.length)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCrc)    {    	non-compiled	[CE]  cannot  find  symbol  length	17	None	replace
482	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.hashCode)  {  [CE]  cannot  find  symbol  hashCode  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.hashCode)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.hashCode)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCrc)    {    	non-compiled	[CE]  cannot  find  symbol  hashCode	17	None	replace
483	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kRCC)  {  [CE]  cannot  find  symbol  kRCC  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kRCC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kRCC)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCrc)    {    	non-compiled	[CE]  cannot  find  symbol  kRCC	17	None	replace
484	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.MB)  {  [CE]  cannot  find  symbol  MB  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.MB)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.MB)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCrc)    {    	non-compiled	[CE]  cannot  find  symbol  MB	17	None	replace
485	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
486	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    If(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	76	None	add
487	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
488	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
489	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
490	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
491	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kCRC)  {  [CE]  ';'  expected  [FE]              IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kCRC)  {	  if    (nid    ==    NID.kCRC)    {    If    (nid    ==    NID.kCRC)    {    	non-compiled	[CE]  ';'  expected	68	None	replace
492	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kCRC)  {	  if    (nid    ==    NID.kCRC)    {    If    (nid    ==    NID.kCRC)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
493	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kCRC)  {  [CE]  ';'  expected  [FE]                  IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kCRC)  {	  if    (nid    ==    NID.kCRC)    {    If    (nid    ==    NID.kCRC)    {    	non-compiled	[CE]  ';'  expected	68	None	replace
494	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kCRC)  {  [CE]  ';'  expected  [FE]                    IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.kCRC)  {	  if    (nid    ==    NID.kCRC)    {    If    (nid    ==    NID.kCRC)    {    	non-compiled	[CE]  ';'  expected	68	None	replace
495	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.hashCode  ||  nid  ==  NID.hashCode)  {  [CE]  ';'  expected  [FE]                      IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.hashCode  ||  nid  ==  NID.hashCode)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  NID.hashCode  ||  nid  ==  NID.hashCode)  {	  if    (nid    ==    NID.kCRC)    {    If    (nid    ==    NID.kCRC)    {    	non-compiled	[CE]  ';'  expected	68	None	replace
496	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	99	None	add
497	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	99	None	add
498	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >>  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	99	None	add
499	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	99	None	add
500	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [Delete]  SIGNATURE_HEADER_SIZE)  {  [CE]  ')'  expected  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [Delete]  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  [Delete]  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ')'  expected	99	None	add
501	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	99	None	add
502	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	19	12	replace
503	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	19	12	replace
504	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCCRC)  {  [CE]  cannot  find  symbol  kCCRC  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCCRC)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kBlock)    {    	non-compiled	[CE]  cannot  find  symbol  kCCRC	112	None	replace
505	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(numPackStreams  >=  SIGNATURE_HEADER_SIZE)  {	  if(numPackStreams    <    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	88	12	replace
506	[BUG]  [BUGGY]  if(numPackStreams  >=  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  >=  SIGNATURE_HEADER_SIZE)  {	  if(numPackStreams    <    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	88	12	replace
507	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  nid)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(numPackStreams  <  nid)  {	  if(numPackStreams    <    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	88	12	replace
508	[BUG]  [BUGGY]  if(numPackStreams  <  nid)  {  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  nid)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  <  nid)  {	  if(numPackStreams    <    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	88	12	replace
509	[BUG]  [BUGGY]  if(numPackStreams  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    =    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
510	[BUG]  [BUGGY]  [FE]  IOException  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    =    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	136	12	replace
511	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    =    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	136	12	replace
512	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kSize)  {	  if(nid    <    =    SIGNATURE_HEADER_SIZE    ||    nid    <    =    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	117	12	replace
513	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kSize)  {  [FE]  NoClassDefFoundError  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kSize)  {	  if(nid    <    =    SIGNATURE_HEADER_SIZE    ||    nid    <    =    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	117	12	replace
514	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kCRC)  {	  if(nid    <    =    SIGNATURE_HEADER_SIZE    ||    nid    <    =    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	117	12	replace
515	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kCRC)  {  [FE]  NoClassDefFoundError  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kCRC)  {	  if(nid    <    =    SIGNATURE_HEADER_SIZE    ||    nid    <    =    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	117	12	replace
516	[BUG]  [BUGGY]  (nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  not  a  statement  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  (nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	(nid  <  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    (nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  not  a  statement	62	None	replace
517	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  (nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  not  a  statement  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  (nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE)  {  (nid  >  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    (nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  not  a  statement	62	None	replace
518	[BUG]  [BUGGY]  if  (nid  <  =  SIGNATURE_HEADER_SIZE)  {  (nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  =  SIGNATURE_HEADER_SIZE)  {  (nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if  (nid  <  =  SIGNATURE_HEADER_SIZE)  {  (nid  <  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    (nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
519	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  (nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  not  a  statement  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  (nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE)  {  (nid  >=  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    (nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  not  a  statement	62	None	replace
520	[BUG]  [BUGGY]  if(nid  <  NID.kSIZE)  {  [CE]  cannot  find  symbol  kSIZE  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  NID.kSIZE)  {	  if(nid    <    =    NID.kSIZE)    {    	non-compiled	[CE]  cannot  find  symbol  kSIZE	147	None	replace
521	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  <  =  NID.kSIZE)  {  [CE]  illegal  start  of  expression  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  <  =  NID.kSIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  <  =  NID.kSIZE)  {	  if(nid    <    =    NID.kSIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
522	[BUG]  [BUGGY]  if(nid  <  NID.kSIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  kSIZE  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  NID.kSIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    =    NID.kSIZE)    {    	non-compiled	[CE]  cannot  find  symbol  kSIZE	147	None	replace
523	[BUG]  [BUGGY]  if(nid  <  =  NID.kSIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  NID.kSIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  NID.kSIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    =    NID.kSIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
524	[BUG]  [BUGGY]  if(nid  <  NID.kSIZE  ||  nid  <  NID.kCRC)  {  [CE]  cannot  find  symbol  kSIZE  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSIZE  ||  nid  <  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  NID.kSIZE  ||  nid  <  NID.kCRC)  {	  if(nid    <    =    NID.kSIZE)    {    	non-compiled	[CE]  cannot  find  symbol  kSIZE	147	None	replace
525	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kSIZE)  {  [CE]  illegal  start  of  expression  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kSIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kSIZE)  {	  if(nid    <    =    NID.kSIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
526	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  NID.kCRC)  {	  if(nid    <    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	36	12	replace
527	[BUG]  [BUGGY]  if(nid  <  NID.kCRC)  {  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  NID.kCRC)  {	  if(nid    <    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	36	12	replace
528	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
529	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  If(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  ';'  expected  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  If(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    If(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  	non-compiled	[CE]  ';'  expected	32	None	add
530	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(numPackStreams  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(numPackStreams  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(numPackStreams  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
531	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(numPackStreams  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(numPackStreams  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(numPackStreams  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
532	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(numPackStreams  <  SIGNATURE_HeADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(numPackStreams  <  SIGNATURE_HeADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(numPackStreams  <  SIGNATURE_HeADER_SIZE  ||  nid  >  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
533	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  UID.kSize)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  UID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  UID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
534	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
535	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  >>  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  >>  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  >>  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
536	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
537	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
538	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  If(nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]            IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  If(nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE)    {    If(nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	89	None	add
539	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  [Delete]  SIGNATURE_HEADER_SIZE)  {  [CE]  ')'  expected  [FE]              IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  [Delete]  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  [Delete]  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ')'  expected	89	None	add
540	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  [BUGGY]  SIGNATURE_HEADER_SIZE)  {  [CE]  ')'  expected  [FE]                IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  [BUGGY]  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  [BUGGY]  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ')'  expected	89	None	add
541	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(Nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
542	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kS  [CE]  ')'  expected  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kS  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kS	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(Nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  ')'  expected	134	None	replace
543	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(NID.kSize  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(NID.kSize  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(Nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	134	12	replace
544	[BUG]  [BUGGY]  if(NID.kSize  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(NID.kSize  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(NID.kSize  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(Nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	134	12	replace
545	[BUG]  [BUGGY]  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  cannot  find  symbol  Nid  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(Nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  cannot  find  symbol  Nid	134	None	replace
546	[BUG]  [BUGGY]  ArrayList  <  Integer>  deferredBlockStreams  =  readAllOrBits(header,  nid,  numPackStreams);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  Integer>  deferredBlockStreams  =  readAllOrBits(header,  nid,  numPackStreams);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  Integer>  deferredBlockStreams  =  readAllOrBits(header,  nid,  numPackStreams);	  ArrayList    <    Integer>    deferredBlockStreams    =    readAllOrBits(header,    nid);    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
547	[BUG]  [BUGGY]  ArrayList  <  Integer>  deferredBlockStreams  =  readAllOrBits(header,  nid,  fileName);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  Integer>  deferredBlockStreams  =  readAllOrBits(header,  nid,  fileName);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  Integer>  deferredBlockStreams  =  readAllOrBits(header,  nid,  fileName);	  ArrayList    <    Integer>    deferredBlockStreams    =    readAllOrBits(header,    nid);    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
548	[BUG]  [BUGGY]  ArrayList  <  Integer>  deferredBlockStreams  =  readAllOrBits(header,  nid,  0);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  Integer>  deferredBlockStreams  =  readAllOrBits(header,  nid,  0);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  Integer>  deferredBlockStreams  =  readAllOrBits(header,  nid,  0);	  ArrayList    <    Integer>    deferredBlockStreams    =    readAllOrBits(header,    nid);    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
549	[BUG]  [BUGGY]  ArrayList  <  Integer>  deferredBlockStreams  =  readAllOrBits(header,  numPackStreams);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  Integer>  deferredBlockStreams  =  readAllOrBits(header,  numPackStreams);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  Integer>  deferredBlockStreams  =  readAllOrBits(header,  numPackStreams);	  ArrayList    <    Integer>    deferredBlockStreams    =    readAllOrBits(header,    nid);    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
550	[BUG]  [BUGGY]  List  <  Integer>  deferredBlockStreams  =  readAllOrBits(header,  nid);  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  List  <  Integer>  deferredBlockStreams  =  readAllOrBits(header,  nid);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	List  <  Integer>  deferredBlockStreams  =  readAllOrBits(header,  nid);	  ArrayList    <    Integer>    deferredBlockStreams    =    readAllOrBits(header,    nid);    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
551	[BUG]  [BUGGY]  ArrayList  <  Integer>  deferredBlockStreams  =  readAllOrBits(header,  nid,  NID.kCRC);  [CE]  illegal  start  of  type  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  Integer>  deferredBlockStreams  =  readAllOrBits(header,  nid,  NID.kCRC);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  Integer>  deferredBlockStreams  =  readAllOrBits(header,  nid,  NID.kCRC);	  ArrayList    <    Integer>    deferredBlockStreams    =    readAllOrBits(header,    nid);    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
552	[BUG]  [BUGGY]  ArrayList  <  Integer>  deferredBlockStreams  =  readAllOrBits(header,  nid,  archive.packPos);  [CE]  illegal  start  of  type  [FE]                                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  Integer>  deferredBlockStreams  =  readAllOrBits(header,  nid,  archive.packPos);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  Integer>  deferredBlockStreams  =  readAllOrBits(header,  nid,  archive.packPos);	  ArrayList    <    Integer>    deferredBlockStreams    =    readAllOrBits(header,    nid);    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
553	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  NID.kSize  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    NID.kSize    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	146	12	replace
554	[BUG]  [BUGGY]  if(nid  <  NID.kSize  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  NID.kSize  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    NID.kSize    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	146	12	replace
555	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  NID.kSize  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    NID.kSize    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	146	12	replace
556	[BUG]  [BUGGY]  if(nid  <  NID.kSize  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  NID.kSize  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    NID.kSize    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	146	12	replace
557	[BUG]  [BUGGY]  int  nid  =  readUint64(header,  numPackStreams);  [CE]  illegal  start  of  type  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  readUint64(header,  numPackStreams);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	int  nid  =  readUint64(header,  numPackStreams);	  int    nid    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
558	[BUG]  [BUGGY]  int  nid  =  readUint64(header,  0);  [CE]  illegal  start  of  type  [FE]                                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  readUint64(header,  0);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	int  nid  =  readUint64(header,  0);	  int    nid    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
559	[BUG]  [BUGGY]  int  nid  =  readUint64(header,  nid);  [CE]  illegal  start  of  type  [FE]                                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  readUint64(header,  nid);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	int  nid  =  readUint64(header,  nid);	  int    nid    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
560	[BUG]  [BUGGY]  long  nid  =  readUint64(header);  [CE]  illegal  start  of  type  [FE]                                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  long  nid  =  readUint64(header);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	long  nid  =  readUint64(header);	  int    nid    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
561	[BUG]  [BUGGY]  byte  nid  =  readUint64(header);  [CE]  illegal  start  of  type  [FE]                                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  byte  nid  =  readUint64(header);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	byte  nid  =  readUint64(header);	  int    nid    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
562	[BUG]  [BUGGY]  int  nid  =  readUint64(header,  archive.packPos);  [CE]  illegal  start  of  type  [FE]                                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  readUint64(header,  archive.packPos);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	int  nid  =  readUint64(header,  archive.packPos);	  int    nid    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
563	[BUG]  [BUGGY]  if(nid  <  =  NID.kCRC  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  NID.kCRC  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  NID.kCRC  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    =    NID.kCRC)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
564	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kCRC  ||  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  NID.kCRC  ||  nid  >  NID.kCRC)  {	  if(nid    <    =    NID.kCRC)    {    	compilable	  [FE]  NoClassDefFoundError  	37	12	replace
565	[BUG]  [BUGGY]  if(nid  <  NID.kCRC  ||  nid  >  NID.kCRC)  {  [FE]  NoClassDefFoundError  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kCRC  ||  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  NID.kCRC  ||  nid  >  NID.kCRC)  {	  if(nid    <    =    NID.kCRC)    {    	compilable	  [FE]  NoClassDefFoundError  	37	12	replace
566	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kCRC  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  NID.kCRC  ||  nid  ==  NID.kCRC)  {	  if(nid    <    =    NID.kCRC)    {    	compilable	  [FE]  NoClassDefFoundError  	37	12	replace
567	[BUG]  [BUGGY]  if(nid  <  NID.kCRC  ||  nid  ==  NID.kCRC)  {  [FE]  NoClassDefFoundError  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kCRC  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  NID.kCRC  ||  nid  ==  NID.kCRC)  {	  if(nid    <    =    NID.kCRC)    {    	compilable	  [FE]  NoClassDefFoundError  	37	12	replace
568	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kCRC  ||  nid  >=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  NID.kCRC  ||  nid  >=  NID.kCRC)  {	  if(nid    <    =    NID.kCRC)    {    	compilable	  [FE]  NoClassDefFoundError  	37	12	replace
569	[BUG]  [BUGGY]  if(nid  <  NID.kCRC  ||  nid  >=  NID.kCRC)  {  [FE]  NoClassDefFoundError  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kCRC  ||  nid  >=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  NID.kCRC  ||  nid  >=  NID.kCRC)  {	  if(nid    <    =    NID.kCRC)    {    	compilable	  [FE]  NoClassDefFoundError  	37	12	replace
570	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
571	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE  +  1)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE  +  1)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEader_SIZE  +  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
572	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [CE]  ';'  expected  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  	non-compiled	[CE]  ';'  expected	85	None	add
573	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE  +  1)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE  +  1)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEaDER_SIZE  +  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
574	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
575	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE  +  1)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE  +  1)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAFDER_SIZE  +  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
576	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kSize)    {    if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
577	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  If(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  [CE]  ';'  expected  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  If(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kSize)    {    If(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {	  	non-compiled	[CE]  ';'  expected	27	None	add
578	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kSize)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
579	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  if(nid  <  SIGNATURE_HEAFDER_SIZE  &&  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  if(nid  <  SIGNATURE_HEAFDER_SIZE  &&  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kSize)    {    if(nid  <  SIGNATURE_HEAFDER_SIZE  &&  nid  >  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
580	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  |&  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  |&  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kSize)    {    if(nid  <  SIGNATURE_HEADER_SIZE  |&  nid  >  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
581	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]              IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kSize)    {    if(Nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
582	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.KCRC)  {  [CE]  cannot  find  symbol  KCRC  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.KCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.KCRC)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCrc)    {    	non-compiled	[CE]  cannot  find  symbol  KCRC	108	None	replace
583	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kRCC)  {  [CE]  cannot  find  symbol  kRCC  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kRCC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kRCC)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCrc)    {    	non-compiled	[CE]  cannot  find  symbol  kRCC	108	None	replace
584	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.crc)  {  [CE]  cannot  find  symbol  crc  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.crc)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.crc)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCrc)    {    	non-compiled	[CE]  cannot  find  symbol  crc	108	None	replace
585	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.hashCode)  {  [CE]  cannot  find  symbol  hashCode  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.hashCode)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.hashCode)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCrc)    {    	non-compiled	[CE]  cannot  find  symbol  hashCode	108	None	replace
586	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.bytes)  {  [CE]  cannot  find  symbol  bytes  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.bytes)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.bytes)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCrc)    {    	non-compiled	[CE]  cannot  find  symbol  bytes	108	None	replace
587	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kCRC)  {	  if(nid    <    NID.kSize    ||    nid    <    NID.kCRC)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
588	[BUG]  [BUGGY]  if(nid  <  =  NID.kSize  ||  nid  <  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  NID.kSize  ||  nid  <  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  NID.kSize  ||  nid  <  NID.kCRC)  {	  if(nid    <    NID.kSize    ||    nid    <    NID.kCRC)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
589	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
590	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
591	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
592	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [CE]  ';'  expected  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
593	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if  (nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if  (nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    if  (nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
594	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  If  (nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  If  (nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE)  {  If  (nid  >  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    If    (nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  ';'  expected	59	None	replace
595	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  If  (nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  If  (nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE)  {  If  (nid  <  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    If    (nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  ';'  expected	59	None	replace
596	[BUG]  [BUGGY]  Integer  numPackStreams  =  readUint64(header  +  nid);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  Integer  numPackStreams  =  readUint64(header  +  nid);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	Integer  numPackStreams  =  readUint64(header  +  nid);	  Integer    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
597	[BUG]  [BUGGY]  Integer  numPackStreams  =  readUint32(header);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  Integer  numPackStreams  =  readUint32(header);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	Integer  numPackStreams  =  readUint32(header);	  Integer    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
598	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE)  {  (nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  not  a  statement  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE)  {  (nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  <  SIGNATURE_HEADER_SIZE)  {  (nid  <  SIGNATURE_HEADER_SIZE)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE)    {    (nid    <    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  not  a  statement	62	None	replace
599	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  4);  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  4);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  4);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
600	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  3);  [CE]  illegal  start  of  type  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  3);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(nid  +  3);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>(nid);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
601	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kCRC)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kCRC)    {    	compilable	  [FE]  NoClassDefFoundError  	16	12	replace
602	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kCRC)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  &&  nid!=  NID.kCRC)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kCRC)    {    	compilable	  [FE]  NoClassDefFoundError  	16	12	replace
603	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEAder_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
604	[BUG]  [BUGGY]  [FE]  IOException  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  0)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEAder_SIZE)    {    	compilable	  [FE]  IOException  	152	12	replace
605	[BUG]  [BUGGY]  if(nid  <  0)  {  [FE]  IOException  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  0)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEAder_SIZE)    {    	compilable	  [FE]  IOException  	152	12	replace
606	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(NID  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(NID  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(NID  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	109	None	add
607	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  >  SIGNATURE_HeADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  >  SIGNATURE_HeADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid  >  SIGNATURE_HeADER_SIZE  ||  nid  >  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	109	None	add
608	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	109	None	add
609	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithCapacity(nid);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithCapacity(nid);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithCapacity(nid);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
610	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithDelimiter(nid);  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithDelimiter(nid);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithDelimiter(nid);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
611	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(numPackStreams  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(numPackStreams    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  IOException  	33	12	replace
612	[BUG]  [BUGGY]  if(numPackStreams  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(numPackStreams    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  IOException  	33	12	replace
613	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  0  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  0  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  0  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEAFDER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
614	[BUG]  [BUGGY]  if(nid  <  NID.kSize)  {  if(nid  <  NID.kSize)  {  }  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packPos;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize)  {  if(nid  <  NID.kSize)  {  }  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packPos;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize)    {    if(nid  <  NID.kSize)  {  }  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packPos;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
615	[BUG]  [BUGGY]  if(nid  <  NID.kSize)  {  if(nid  <  NID.kSize)  {  }  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packPos;  i++)  {  archive.packSizes[i]  =  readUint64(header);  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize)  {  if(nid  <  NID.kSize)  {  }  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packPos;  i++)  {  archive.packSizes[i]  =  readUint64(header);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize)    {    if(nid  <  NID.kSize)  {  }  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packPos;  i++)  {  archive.packSizes[i]  =  readUint64(header);	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
616	[BUG]  [BUGGY]  if(nid  <  NID.kSize)  {  if(nid  <  NID.kSize)  {  }  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packPos;  i++)  {  archive.packSizes[i]  =  readUint64(header,  [CE]  illegal  start  of  expression  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize)  {  if(nid  <  NID.kSize)  {  }  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packPos;  i++)  {  archive.packSizes[i]  =  readUint64(header,  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize)    {    if(nid  <  NID.kSize)  {  }  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packPos;  i++)  {  archive.packSizes[i]  =  readUint64(header,	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
617	[BUG]  [BUGGY]  if(nid  <  NID.kSize)  {  if(nid  <  NID.kSize)  {  }  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packPos;  i++)  {  archive.packSizes[i]  =  readUint64(header  [CE]  ')'  expected  [FE]          IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize)  {  if(nid  <  NID.kSize)  {  }  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packPos;  i++)  {  archive.packSizes[i]  =  readUint64(header  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize)    {    if(nid  <  NID.kSize)  {  }  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packPos;  i++)  {  archive.packSizes[i]  =  readUint64(header	  	non-compiled	[CE]  ')'  expected	35	None	add
618	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(numPackStreams!=  SIGNATURE_HEADER_SIZE)  {	  if(numPackStreams    <    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	88	12	replace
619	[BUG]  [BUGGY]  if(numPackStreams!=  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams!=  SIGNATURE_HEADER_SIZE)  {	  if(numPackStreams    <    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	88	12	replace
620	[BUG]  [BUGGY]  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  0)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(numPackStreams  <  0)  {	  if(numPackStreams    <    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	88	12	replace
621	[BUG]  [BUGGY]  if(numPackStreams  <  0)  {  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  0)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  <  0)  {	  if(numPackStreams    <    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	88	12	replace
622	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  >=  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  >=  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid  >=  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
623	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  >  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  IOException  	110	12	replace
624	[BUG]  [BUGGY]  if(nid  >  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  IOException  	110	12	replace
625	[BUG]  [BUGGY]  nid  =  readUint64(header.readUnsignedByte());  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  nid  =  readUint64(header.readUnsignedByte());  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	nid  =  readUint64(header.readUnsignedByte());	  nid    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
626	[BUG]  [BUGGY]  nid  =  readUint64(header  +  1);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  nid  =  readUint64(header  +  1);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	nid  =  readUint64(header  +  1);	  nid    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
627	[BUG]  [BUGGY]  nid  =  readUnsignedByte();  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  nid  =  readUnsignedByte();  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	nid  =  readUnsignedByte();	  nid    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
628	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    =    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	136	12	replace
629	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    =    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	136	12	replace
630	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  NID.kSize  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    NID.kSize    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	146	12	replace
631	[BUG]  [BUGGY]  if(nid  <  NID.kSize  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  NID.kSize  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    NID.kSize    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	146	12	replace
632	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.KBLOCK)  {  [CE]  cannot  find  symbol  KBLOCK  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.KBLOCK)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.KBLOCK)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kBlock)    {    	non-compiled	[CE]  cannot  find  symbol  KBLOCK	112	None	replace
633	[BUG]  [BUGGY]  if(nid  <  =  NID.kSize  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  NID.kSize  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  NID.kSize  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    =    NID.kSize    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
634	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  ==  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    =    NID.kSize    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	40	12	replace
635	[BUG]  [BUGGY]  if(nid  ==  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    =    NID.kSize    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	40	12	replace
636	[BUG]  [BUGGY]  int  nid  =  readUint64(header.length);  [CE]  illegal  start  of  type  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  readUint64(header.length);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	int  nid  =  readUint64(header.length);	  int    nid    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
637	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]        IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.kCRC)    {    if    (nid    ==    NID.kCRC)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
638	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.kCRC)    {    if    (nid    ==    NID.kCRC)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
639	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]            IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.kCRC)    {    if    (nid    ==    NID.kCRC)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
640	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  NID.kSize)  {  If(nid  <  0  ||  nid  >  NID.kSize)  {  [CE]  ';'  expected  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  NID.kSize)  {  If(nid  <  0  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  0  ||  nid  >  NID.kSize)  {  If(nid  <  0  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    If(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  ';'  expected	53	None	replace
641	[BUG]  [BUGGY]  if(nid  >  NID.kSize)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  NID.kSize)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >  NID.kSize)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    If(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  ';'  expected	53	None	replace
642	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  NID.kSize)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  ';'  expected  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  NID.kSize)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  0  ||  nid  >  NID.kSize)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    If(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  ';'  expected	53	None	replace
643	[BUG]  [BUGGY]  if(nid  <  =  NID.kSize)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  NID.kSize)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  NID.kSize)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    If(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
644	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.hashCode())  {  [CE]  non-static  method  hashCode()  cannot  be  referenced  from  a  static  context  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.hashCode())  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.hashCode())  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kRSC)    {    	non-compiled	[CE]  non-static  method  hashCode()  cannot  be  referenced  from  a  static  context	141	None	replace
645	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  0  ||  nid  ==  NID.kSize)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    if    (nid    <    SIGNATURE_HEAFDER_SIZE    ||    nid    ==    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	151	12	replace
646	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  ==  NID.kSize)  {  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  0  ||  nid  ==  NID.kSize)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    if    (nid    <    SIGNATURE_HEAFDER_SIZE    ||    nid    ==    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	151	12	replace
647	[BUG]  [BUGGY]  [FE]  IOException  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  ==  0)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  0  ||  nid  ==  0)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    if    (nid    <    SIGNATURE_HEAFDER_SIZE    ||    nid    ==    NID.kSize)    {    	compilable	  [FE]  IOException  	151	12	replace
648	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  ==  0)  {  [FE]  IOException  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  ==  0)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  0  ||  nid  ==  0)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    if    (nid    <    SIGNATURE_HEAFDER_SIZE    ||    nid    ==    NID.kSize)    {    	compilable	  [FE]  IOException  	151	12	replace
649	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  0  ||  nid  >  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
650	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  0  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  0  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  0  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
651	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  NID.kSize)  {  if(nid  <  0  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  NID.kSize)  {  if(nid  <  0  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  0  ||  nid  >  NID.kSize)  {  if(nid  <  0  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
652	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  NID.kSize)  {  if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  NID.kSize)  {  if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  0  ||  nid  >  NID.kSize)  {  if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
653	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(numPackStreams  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	24	12	replace
654	[BUG]  [BUGGY]  if(numPackStreams  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	24	12	replace
655	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  NID.kSize)  {  if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  NID.kSize)  {  if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  0  ||  nid  >  NID.kSize)  {  if(nid  <  SIGNATURE_HEAFDER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid    <    SIGNATURE_HEAFDER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
656	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  NID.kSize)  {  if(nid  <  SIGNATURE_HEAFTER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  NID.kSize)  {  if(nid  <  SIGNATURE_HEAFTER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  0  ||  nid  >  NID.kSize)  {  if(nid  <  SIGNATURE_HEAFTER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid    <    SIGNATURE_HEAFDER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
657	[BUG]  [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEAFDER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid    <    SIGNATURE_HEAFDER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE	55	None	replace
658	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>(2));  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>(2));  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>(2));	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
659	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>(8));  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>(8));  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  String>  deferredBlockStreams  =  inputStreamStack.toArray(new  ArrayList  <  String>(8));	  ArrayList    <    String>    deferredBlockStreams    =    inputStreamStack.toArray(new    ArrayList    <    String>());    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
660	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(numPackStreams  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(numPackStreams    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	77	12	replace
661	[BUG]  [BUGGY]  if(numPackStreams  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(numPackStreams    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	77	12	replace
662	[BUG]  [BUGGY]  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(numPackStreams  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(numPackStreams    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	77	12	replace
663	[BUG]  [BUGGY]  if(numPackStreams  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(numPackStreams    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	77	12	replace
664	[BUG]  [BUGGY]  [FE]  IOException  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(numPackStreams  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(numPackStreams    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	77	12	replace
665	[BUG]  [BUGGY]  if(numPackStreams  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(numPackStreams    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	77	12	replace
666	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.HOUR_SIZE)  {  [CE]  cannot  find  symbol  HOUR_SIZE  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.HOUR_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.HOUR_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSC)    {    	non-compiled	[CE]  cannot  find  symbol  HOUR_SIZE	111	None	replace
667	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	81	12	replace
668	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	81	12	replace
669	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kRC)  {  [CE]  cannot  find  symbol  kRC  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kRC)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCrc)    {    	non-compiled	[CE]  cannot  find  symbol  kRC	108	None	replace
670	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.length)  {  [CE]  cannot  find  symbol  length  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.length)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.length)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCrc)    {    	non-compiled	[CE]  cannot  find  symbol  length	108	None	replace
671	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.KB)  {  [CE]  cannot  find  symbol  KB  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.KB)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.KB)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCrc)    {    	non-compiled	[CE]  cannot  find  symbol  KB	108	None	replace
672	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  >  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(numPackStreams  >  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	79	12	replace
673	[BUG]  [BUGGY]  if(numPackStreams  >  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  >  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  >  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	79	12	replace
674	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSize)    {    	compilable	  [FE]  IOException  	121	12	replace
675	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSize)    {    	compilable	  [FE]  IOException  	121	12	replace
676	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
677	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE)  {  int  numPackStreams  =  readUint64(header);  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE)  {  int  numPackStreams  =  readUint64(header);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams    <    SIGNATURE_HEADER_SIZE)    {    int  numPackStreams  =  readUint64(header);	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
678	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE)  {  Integer  numPackStreams  =  readUint64(header);  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE)  {  Integer  numPackStreams  =  readUint64(header);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams    <    SIGNATURE_HEADER_SIZE)    {    Integer  numPackStreams  =  readUint64(header);	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
679	[BUG]  [BUGGY]  if(numPackStreams  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
680	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(Nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(Nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    if(Nid  >  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	127	None	add
681	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  if(NID  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  if(NID  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kCRC)    {    if(NID  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
682	[BUG]  [BUGGY]  Integer  nid  =  readUnsignedByte(header);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  Integer  nid  =  readUnsignedByte(header);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	Integer  nid  =  readUnsignedByte(header);	  Integer    nid    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
683	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kSize)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
684	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
685	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  int  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  int  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE)    {    int  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  ';'  expected	115	None	add
686	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEAST_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEAST_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >  SIGNATURE_HEAST_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	115	None	add
687	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  &&  nid  ==  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  &&  nid  ==  NID.kSize)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  &&  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    &&    nid    ==    NID.kSize)    {    if(nid  ==  SIGNATURE_HEAFDER_SIZE  &&  nid  ==  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
688	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]              IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE)  {  If  (nid  ==  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.kCRC)    {    If    (nid    ==    NID.kCRC)    {    	non-compiled	[CE]  ';'  expected	68	None	replace
689	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(NID  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(NID  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(NID  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	130	None	add
690	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	80	None	add
691	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  <  =  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  <  =  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  <  =  NID.kCRC)  {	  if(nid    <    =    NID.kCRC)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
692	[BUG]  [BUGGY]  if(nid  ==  NID.kSIZE)  {  [CE]  cannot  find  symbol  kSIZE  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  NID.kSIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  NID.kSIZE)  {	  if(nid    <    =    NID.kSIZE)    {    	non-compiled	[CE]  cannot  find  symbol  kSIZE	147	None	replace
693	[BUG]  [BUGGY]  if(nid  <  NID.kSIZE  ||  nid  >  NID.kCRC)  {  [CE]  cannot  find  symbol  kSIZE  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSIZE  ||  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  NID.kSIZE  ||  nid  >  NID.kCRC)  {	  if(nid    <    =    NID.kSIZE)    {    	non-compiled	[CE]  cannot  find  symbol  kSIZE	147	None	replace
694	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  NID.kSize)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  NID.kSize)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  0  ||  nid  >  NID.kSize)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(Nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
695	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(Nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
696	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(NID.kSize  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(NID.kSize  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(Nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	134	12	replace
697	[BUG]  [BUGGY]  if(NID.kSize  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [FE]  NoClassDefFoundError  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(NID.kSize  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(NID.kSize  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(Nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	134	12	replace
698	[BUG]  [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(Nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
699	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  if  (nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  if  (nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kCRC)    {    if  (nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
700	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kSize)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
701	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(header);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  header.readUnsignedByte(header);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	int  nid  =  header.readUnsignedByte(header);	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
702	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(0);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  header.readUnsignedByte(0);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	int  nid  =  header.readUnsignedByte(0);	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
703	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte(1);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  header.readUnsignedByte(1);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	int  nid  =  header.readUnsignedByte(1);	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
704	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  NID.kSize)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  NID.kSize)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  0  ||  nid  >  NID.kSize)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
705	[BUG]  [BUGGY]  if(nid  <  =  NID.kSize)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  NID.kSize)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  NID.kSize)  {  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
706	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(header);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  nid  =  header.readUnsignedByte(header);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	nid  =  header.readUnsignedByte(header);	  nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
707	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(1);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  nid  =  header.readUnsignedByte(1);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	nid  =  header.readUnsignedByte(1);	  nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
708	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(2);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  nid  =  header.readUnsignedByte(2);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	nid  =  header.readUnsignedByte(2);	  nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
709	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  IOException  	86	12	replace
710	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  IOException  	86	12	replace
711	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  +|  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  +|  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  +|  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
712	[BUG]  [BUGGY]  Integer  nid  =  readAllOrBits(header,  (long)numPackStreams);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  Integer  nid  =  readAllOrBits(header,  (long)numPackStreams);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	Integer  nid  =  readAllOrBits(header,  (long)numPackStreams);	  Integer    nid    =    readAllOrBits(header,    (int)numPackStreams);    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
713	[BUG]  [BUGGY]  Integer  nid  =  readAllOrBits(header,  (int)numPackStreams-1);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  Integer  nid  =  readAllOrBits(header,  (int)numPackStreams-1);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	Integer  nid  =  readAllOrBits(header,  (int)numPackStreams-1);	  Integer    nid    =    readAllOrBits(header,    (int)numPackStreams);    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
714	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.headerSize)  {  [CE]  cannot  find  symbol  headerSize  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.headerSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.headerSize)  {	  if(nid    <    NID.kSize    ||    nid    >    NID.kCRC)    {    	non-compiled	[CE]  cannot  find  symbol  headerSize	42	None	replace
715	[BUG]  [BUGGY]  int  nextHeaderSize  =  readUint64(header,  numPackStreams);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nextHeaderSize  =  readUint64(header,  numPackStreams);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	int  nextHeaderSize  =  readUint64(header,  numPackStreams);	  int    nextHeaderSize    =    readUint64(header,    nid);    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
716	[BUG]  [BUGGY]  byte  nextHeaderSize  =  readUint64(header,  nid);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  byte  nextHeaderSize  =  readUint64(header,  nid);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	byte  nextHeaderSize  =  readUint64(header,  nid);	  int    nextHeaderSize    =    readUint64(header,    nid);    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
717	[BUG]  [BUGGY]  int  nextHeaderSize  =  readUint64(header,  nid  -  1);  [CE]  illegal  start  of  type  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nextHeaderSize  =  readUint64(header,  nid  -  1);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	int  nextHeaderSize  =  readUint64(header,  nid  -  1);	  int    nextHeaderSize    =    readUint64(header,    nid);    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
718	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  0  ||  nid  >  0)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  >  0  ||  nid  >  0)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	133	12	replace
719	[BUG]  [BUGGY]  if(nid  >  0  ||  nid  >  0)  {  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  0  ||  nid  >  0)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >  0  ||  nid  >  0)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	133	12	replace
720	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  >  SIGNATURE_HEADER_SIZE  ||  numPackStreams  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(numPackStreams  >  SIGNATURE_HEADER_SIZE  ||  numPackStreams  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	133	12	replace
721	[BUG]  [BUGGY]  if(numPackStreams  >  SIGNATURE_HEADER_SIZE  ||  numPackStreams  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  >  SIGNATURE_HEADER_SIZE  ||  numPackStreams  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  >  SIGNATURE_HEADER_SIZE  ||  numPackStreams  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  IOException  	133	12	replace
722	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  ';'  expected  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  ';'  expected	92	None	replace
723	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
724	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(numPackStreams  <  SIGNATURE_HeADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(numPackStreams  <  SIGNATURE_HeADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(numPackStreams  <  SIGNATURE_HeADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
725	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kRC)  {  [CE]  cannot  find  symbol  kRC  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kRC)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCrc)    {    	non-compiled	[CE]  cannot  find  symbol  kRC	17	None	replace
726	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.KB)  {  [CE]  cannot  find  symbol  KB  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.KB)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.KB)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCrc)    {    	non-compiled	[CE]  cannot  find  symbol  KB	17	None	replace
727	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.hashCode())  {  [CE]  non-static  method  hashCode()  cannot  be  referenced  from  a  static  context  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.hashCode())  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.hashCode())  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCrc)    {    	non-compiled	[CE]  non-static  method  hashCode()  cannot  be  referenced  from  a  static  context	17	None	replace
728	[BUG]  [BUGGY]  ArrayList  <  Integer>  deferredBlockStreams  =  new  ArrayList  <  Integer>(numPackStreams  +  1);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  Integer>  deferredBlockStreams  =  new  ArrayList  <  Integer>(numPackStreams  +  1);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  Integer>  deferredBlockStreams  =  new  ArrayList  <  Integer>(numPackStreams  +  1);	  ArrayList    <    Integer>    deferredBlockStreams    =    new    ArrayList    <    Integer>(numPackStreams);    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
729	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE)  {	  if    (nid    ==    NID.kCRC)    {    if    (nid    >>    NID.kCRC)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
730	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HeADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HeADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >  SIGNATURE_HeADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	132	None	add
731	[BUG]  [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
732	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if  (nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kCRC)    {    	compilable	  [FE]  IOException  	6	12	replace
733	[BUG]  [BUGGY]  if  (nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if  (nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kCRC)    {    	compilable	  [FE]  IOException  	6	12	replace
734	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.0)  {  [CE]  ')'  expected  [FE]          IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.0)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.0)  {	  if(nid    ==    NID.0    ||    nid    ==    NID.kCRC)    {    	non-compiled	[CE]  ')'  expected	50	None	replace
735	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.0)  {  [CE]  ')'  expected  [FE]            IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.0)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.0)  {	  if(nid    ==    NID.0    ||    nid    ==    NID.kCRC)    {    	non-compiled	[CE]  ')'  expected	50	None	replace
736	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.0)  {  [CE]  ')'  expected  [FE]              IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.0)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.0)  {	  if(nid    ==    NID.0    ||    nid    ==    NID.kCRC)    {    	non-compiled	[CE]  ')'  expected	50	None	replace
737	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.0)  {  [CE]  ')'  expected  [FE]                IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.0)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.0)  {	  if(nid    ==    NID.0    ||    nid    ==    NID.kCRC)    {    	non-compiled	[CE]  ')'  expected	50	None	replace
738	[BUG]  [BUGGY]  if(nid  <  NID.0  ||  nid  >  NID.kCRC)  {  [CE]  ')'  expected  [FE]                  IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.0  ||  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  NID.0  ||  nid  >  NID.kCRC)  {	  if(nid    ==    NID.0    ||    nid    ==    NID.kCRC)    {    	non-compiled	[CE]  ')'  expected	50	None	replace
739	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	99	None	add
740	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEaDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEaDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	99	None	add
741	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  NID.kSize)  {  if(NID  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  NID.kSize)  {  if(NID  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  0  ||  nid  >  NID.kSize)  {  if(NID  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(NID    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
742	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  NID.kSize)  {  if(NID  <  0  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  NID.kSize)  {  if(NID  <  0  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  0  ||  nid  >  NID.kSize)  {  if(NID  <  0  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(NID    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
743	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  NID.kSize)  {  if(nid  <  SIGNATURE_HEASTDER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  NID.kSize)  {  if(nid  <  SIGNATURE_HEASTDER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  0  ||  nid  >  NID.kSize)  {  if(nid  <  SIGNATURE_HEASTDER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid    <    SIGNATURE_HEASTDER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
744	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  SIGNATURE_HEASTDER_SIZE)  {  if(nid  <  0  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  SIGNATURE_HEASTDER_SIZE)  {  if(nid  <  0  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  0  ||  nid  >  SIGNATURE_HEASTDER_SIZE)  {  if(nid  <  0  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid    <    SIGNATURE_HEASTDER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
745	[BUG]  [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEASTDER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HEASTDER_SIZE  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEASTDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEASTDER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid    <    SIGNATURE_HEASTDER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEASTDER_SIZE	56	None	replace
746	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEaDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEaDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
747	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
748	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  NID.kSize)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  NID.kSize)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  0  ||  nid  >  NID.kSize)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
749	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  0  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
750	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	30	12	replace
751	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	30	12	replace
752	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
753	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kSize)    {    	compilable	  [FE]  IOException  	28	12	replace
754	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kSize)    {    	compilable	  [FE]  IOException  	28	12	replace
755	[BUG]  [BUGGY]  ArrayList  <  Integer>  deferredBlockStreams  =  readAllOrBits(header,  nid  +  1);  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  Integer>  deferredBlockStreams  =  readAllOrBits(header,  nid  +  1);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  Integer>  deferredBlockStreams  =  readAllOrBits(header,  nid  +  1);	  ArrayList    <    Integer>    deferredBlockStreams    =    readAllOrBits(header,    nid);    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
756	[BUG]  [BUGGY]  ArrayList  <  Integer>  deferredBlockStreams  =  readAllOrBits(header,  nid,  1);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  Integer>  deferredBlockStreams  =  readAllOrBits(header,  nid,  1);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  Integer>  deferredBlockStreams  =  readAllOrBits(header,  nid,  1);	  ArrayList    <    Integer>    deferredBlockStreams    =    readAllOrBits(header,    nid);    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
757	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  if(nid  >=  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE)    {    if(nid  >=  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
758	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.KRCC)  {  [CE]  cannot  find  symbol  KRCC  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.KRCC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.KRCC)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kRCC)    {    	non-compiled	[CE]  cannot  find  symbol  KRCC	34	None	replace
759	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(8);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
760	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
761	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    	compilable	  [FE]  IOException  	144	12	replace
762	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    	compilable	  [FE]  IOException  	144	12	replace
763	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  *  2  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  *  2  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    	compilable	  [FE]  NoClassDefFoundError  	144	12	replace
764	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  *  2  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  *  2  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  *  2  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    	compilable	  [FE]  NoClassDefFoundError  	144	12	replace
765	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    If(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
766	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    If(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
767	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  ';'  expected  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    If(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    	non-compiled	[CE]  ';'  expected	75	None	replace
768	[BUG]  [BUGGY]  int  nextHeaderSize  =  readUint64(header  +  nid);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nextHeaderSize  =  readUint64(header  +  nid);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	int  nextHeaderSize  =  readUint64(header  +  nid);	  int    nextHeaderSize    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
769	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEaDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEaDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEaDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
770	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  <  NID.kSize)  {	  if(nid    <    =    SIGNATURE_HEADER_SIZE    ||    nid    <    =    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
771	[BUG]  [BUGGY]  if(nid  <  NID.kSize  ||  nid  <  =  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  <  =  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  NID.kSize  ||  nid  <  =  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    =    SIGNATURE_HEADER_SIZE    ||    nid    <    =    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
772	[BUG]  [BUGGY]  if(nid  <  NID.kSize  ||  nid  <  NID.kCRC)  {  if(Nid  <  NID.kSize  ||  nid  <  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  <  NID.kCRC)  {  if(Nid  <  NID.kSize  ||  nid  <  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize    ||    nid    <    NID.kCRC)    {    if(Nid  <  NID.kSize  ||  nid  <  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
773	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HeADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HeADER_SIZE  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HeADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HeADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HeADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HeADER_SIZE	153	None	replace
774	[BUG]  [BUGGY]  int  nid  =  readUint64(header.readUnsignedByte());  [CE]  illegal  start  of  type  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  readUint64(header.readUnsignedByte());  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	int  nid  =  readUint64(header.readUnsignedByte());	  int    nid    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
775	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  ==  SIGNATURE_HeADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  if(nid  ==  SIGNATURE_HeADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid  ==  SIGNATURE_HeADER_SIZE  ||  nid  >  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	130	None	add
776	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGDECIMAL_HEADER_SIZE)  {  [CE]  cannot  find  symbol  SIGDECIMAL_HEADER_SIZE  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGDECIMAL_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGDECIMAL_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEAder_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SIGDECIMAL_HEADER_SIZE	152	None	replace
777	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    If(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
778	[BUG]  [BUGGY]  if(nid  <  =  NID.length)  {  If  (nid  ==  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]              IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  NID.length)  {  If  (nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  NID.length)  {  If  (nid  ==  NID.kCRC)  {	  if    (nid    ==    NID.kCRC)    {    If    (nid    ==    NID.kCRC)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
779	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid!=  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid!=  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    if(nid!=  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
780	[BUG]  [BUGGY]  Integer  nid  =  readAllOrBits(header,  (int)numPackStreams,  nid);  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  Integer  nid  =  readAllOrBits(header,  (int)numPackStreams,  nid);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	Integer  nid  =  readAllOrBits(header,  (int)numPackStreams,  nid);	  Integer    nid    =    readAllOrBits(header,    (int)numPackStreams);    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
781	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kCRC)    {    	compilable	  [FE]  NoClassDefFoundError  	16	12	replace
782	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kCRC)    {    	compilable	  [FE]  NoClassDefFoundError  	16	12	replace
783	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEAder_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEAder_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEAder_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
784	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HeADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HeADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    <    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HeADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	97	None	add
785	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEADER_SIZE)  {  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
786	[BUG]  [BUGGY]  if  (nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if  (nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >=  NID.kCRC)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >=    NID.kCRC)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
787	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid!=  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid!=  NID.kCRC)  {  if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid!=  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid!=    NID.kCRC)    {    if(nid  ==  SIGNATURE_HEAFDER_SIZE  ||  nid!=  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
788	[BUG]  [BUGGY]  [FE]  IOException  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  0  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  IOException  	52	12	replace
789	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  NID.kSize)  {  [FE]  IOException  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  0  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  IOException  	52	12	replace
790	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kCRC  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  NID.kCRC  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	52	12	replace
791	[BUG]  [BUGGY]  if(nid  <  NID.kCRC  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kCRC  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  NID.kCRC  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	compilable	  [FE]  NoClassDefFoundError  	52	12	replace
792	[BUG]  [BUGGY]  if(nid  <  =  NID.kSize)  {  if(NID  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  NID.kSize)  {  if(NID  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  NID.kSize)  {  if(NID  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(NID    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
793	[BUG]  [BUGGY]  if(nid  <  =  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(NID    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
794	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.K)  {  [CE]  cannot  find  symbol  K  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.K)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.K)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCrc)    {    	non-compiled	[CE]  cannot  find  symbol  K	108	None	replace
795	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid  >=  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if(nid  >=  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    if(nid  >=  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
796	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  0)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  >  0)  {	  if(nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	116	12	replace
797	[BUG]  [BUGGY]  if(nid  >  0)  {  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  0)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >  0)  {	  if(nid    >    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	116	12	replace
798	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  >  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(numPackStreams  >  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(numPackStreams    <    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	88	12	replace
799	[BUG]  [BUGGY]  if(numPackStreams  >  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(numPackStreams  >  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(numPackStreams  >  SIGNATURE_HEADER_SIZE  ||  nid  <  SIGNATURE_HEADER_SIZE)  {	  if(numPackStreams    <    SIGNATURE_HEADER_SIZE)    {    	compilable	  [FE]  NoClassDefFoundError  	88	12	replace
800	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  ';'  expected  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    If(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    	non-compiled	[CE]  ';'  expected	75	None	replace
801	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.k  [CE]  ')'  expected  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.k  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.k	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    If(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    	non-compiled	[CE]  ')'  expected	75	None	replace
802	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kS  [CE]  ')'  expected  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kS  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kS	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    If(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    	non-compiled	[CE]  ')'  expected	75	None	replace
803	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.K)  {  [CE]  cannot  find  symbol  K  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.K)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.K)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCrc)    {    	non-compiled	[CE]  cannot  find  symbol  K	17	None	replace
804	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEAFTER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]                  IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEAFTER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEAFTER_SIZE)  {	  if(nid    ==    SIGNATURE_HEADER_SIZE)    {    if(nid    ==    SIGNATURE_HEAFDER_SIZE)    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
805	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  ';'  expected  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  >  SIGNATURE_HEADER_SIZE)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    If    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
806	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  ==  NID.kSize)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  ';'  expected  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  ==  NID.kSize)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  0  ||  nid  ==  NID.kSize)  {  If  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    If    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
807	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEAFTER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFTER_SIZE  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEAFTER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEAFTER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEAFDER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFTER_SIZE	96	None	replace
808	[BUG]  [BUGGY]  if(nid  <  0  ||  nid  >  SIGNATURE_HEAFTER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFTER_SIZE  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  0  ||  nid  >  SIGNATURE_HEAFTER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  0  ||  nid  >  SIGNATURE_HEAFTER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEAFDER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFTER_SIZE	96	None	replace
809	[BUG]  [BUGGY]  if(nid  <  =  NID.length)  {  [CE]  illegal  start  of  expression  [FE]                IOException      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  NID.length)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  NID.length)  {	  if    (nid    ==    NID.kCRC)    {    if    (nid    >>    NID.kCRC)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
810	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCC)  {  [CE]  cannot  find  symbol  kCC  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCC)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSC)    {    	non-compiled	[CE]  cannot  find  symbol  kCC	111	None	replace
811	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE  +  1)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE  +  1)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE  +  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
812	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HeADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  if(nid  <  SIGNATURE_HeADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    if(nid  <  SIGNATURE_HeADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
813	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEAder_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEAder_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEAder_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
814	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HeADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HeADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HeADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
815	[BUG]  [BUGGY]  if(nid  <  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize)  {  if(nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize)    {    if(nid  <  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
816	[BUG]  [BUGGY]  if(nid  <  NID.kSize)  {  if(nid  >=  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize)  {  if(nid  >=  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize)    {    if(nid  >=  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
817	[BUG]  [BUGGY]  if(nid  <  NID.kSize)  {  If(nid  <  NID.kSize)  {  [CE]  ';'  expected  [FE]        IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize)  {  If(nid  <  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize)    {    If(nid  <  NID.kSize)  {	  	non-compiled	[CE]  ';'  expected	35	None	add
818	[BUG]  [BUGGY]  if(nid  <  NID.kSize)  {  if(NID.kSize  <  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]          IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize)  {  if(NID.kSize  <  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize)    {    if(NID.kSize  <  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
819	[BUG]  [BUGGY]  if(nid  <  NID.kSize)  {  int  nid  =  readUint64(header);  [CE]  illegal  start  of  expression  [FE]            IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize)  {  int  nid  =  readUint64(header);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize)    {    int  nid  =  readUint64(header);	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
820	[BUG]  [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  ';'  expected  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    If(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  ';'  expected	53	None	replace
821	[BUG]  [BUGGY]  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  ';'  expected  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	If(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    If(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  ';'  expected	53	None	replace
822	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  String>  deferredBlockStreams  =  new  ArrayList  <  String>(4);	  ArrayList    <    String>    deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
823	[BUG]  [BUGGY]  Integer  numPackStreams  =  readUint64(header.readUnsignedByte());  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  Integer  numPackStreams  =  readUint64(header.readUnsignedByte());  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	Integer  numPackStreams  =  readUint64(header.readUnsignedByte());	  Integer    numPackStreams    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
824	[BUG]  [BUGGY]  nid  =  header.readUnsignedInt();  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  nid  =  header.readUnsignedInt();  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	nid  =  header.readUnsignedInt();	  nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
825	[BUG]  [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid  >=  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid  >=  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    if(nid  >=  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
826	[BUG]  [BUGGY]  if(nid  <  NID.length  ||  nid  >  NID.length)  {  [CE]  cannot  find  symbol  length  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.length  ||  nid  >  NID.length)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  NID.length  ||  nid  >  NID.length)  {	  if(nid    <    NID.kSize    ||    nid    >    NID.kCRC)    {    	non-compiled	[CE]  cannot  find  symbol  length	42	None	replace
827	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
828	[BUG]  [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid!=  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid!=  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  if(nid!=  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid!=    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    if(nid!=  SIGNATURE_HEAFDER_SIZE  ||  nid  ==  NID.kSize)  {	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
829	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  if(nid  <  SIGNATURE_HeADER_SIZE  ||  nid  >  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kCRC)  {  if(nid  <  SIGNATURE_HeADER_SIZE  ||  nid  >  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kCRC)    {    if(nid  <  SIGNATURE_HeADER_SIZE  ||  nid  >  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
830	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kRB)  {  [CE]  cannot  find  symbol  kRB  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kRB)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kRB)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kBlock)    {    	non-compiled	[CE]  cannot  find  symbol  kRB	112	None	replace
831	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kBRC)  {  [CE]  cannot  find  symbol  kBRC  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kBRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kBRC)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kBlock)    {    	non-compiled	[CE]  cannot  find  symbol  kBRC	112	None	replace
832	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if  (Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  if  (Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kCRC)    {    if  (Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kCRC)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
833	[BUG]  [BUGGY]  int  nextHeaderSize  =  readUint64(header,  nid,  NID.kCRC);  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nextHeaderSize  =  readUint64(header,  nid,  NID.kCRC);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	int  nextHeaderSize  =  readUint64(header,  nid,  NID.kCRC);	  int    nextHeaderSize    =    readUint64(header,    nid);    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
834	[BUG]  [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEAFTER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HEAFTER_SIZE  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEAFTER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEAFTER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(nid    <    SIGNATURE_HEAFDER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFTER_SIZE	55	None	replace
835	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  +  1  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  +  1  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  NoClassDefFoundError  	86	12	replace
836	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  +  1  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  +  1  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  +  1  ||  nid  >  SIGNATURE_HEADER_SIZE  +  1)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    +    1)    {    	compilable	  [FE]  NoClassDefFoundError  	86	12	replace
837	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEAFTER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEAFTER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEAFTER_SIZE  ||  nid  ==  NID.kSize)  {	  if    (nid    <    SIGNATURE_HEADER_SIZE    ||    nid    ==    NID.kSize)    {    if    (nid    <    SIGNATURE_HEAFDER_SIZE    ||    nid    ==    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
838	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEAFDER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEADER_SIZE)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEAFDER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid!=    SIGNATURE_HEADER_SIZE)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid!=  SIGNATURE_HEAFDER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	99	None	add
839	[BUG]  [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEAder_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEAder_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    NID.kSize    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  <  NID.kSize  ||  nid  >  SIGNATURE_HEAder_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	145	None	add
840	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE  *  2)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE  *  2)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEAder_SIZE  *  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	143	None	add
841	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  1)  {  [CE]  illegal  start  of  expression  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  2)  {  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  1)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE    *    2)    {    if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE  *  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	143	None	add
842	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(NID.kSize  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(NID.kSize  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kSize)    {    	compilable	  [FE]  IOException  	28	12	replace
843	[BUG]  [BUGGY]  if(NID.kSize  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(NID.kSize  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(NID.kSize  <  SIGNATURE_HEADER_SIZE  &&  nid  >  SIGNATURE_HEADER_SIZE)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kSize)    {    	compilable	  [FE]  IOException  	28	12	replace
844	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  &&  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    &&    nid    >    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
845	[BUG]  [BUGGY]  Integer  nid  =  readUint64(header.readUnsignedByte());  [CE]  illegal  start  of  type  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  Integer  nid  =  readUint64(header.readUnsignedByte());  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	Integer  nid  =  readUint64(header.readUnsignedByte());	  Integer    nid    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
846	[BUG]  [BUGGY]  Integer  nid  =  readUnsignedByte();  [CE]  illegal  start  of  type  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  Integer  nid  =  readUnsignedByte();  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	Integer  nid  =  readUnsignedByte();	  Integer    nid    =    readUint64(header);    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
847	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.z)  {  [CE]  cannot  find  symbol  z  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.z)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.z)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kRSC)    {    	non-compiled	[CE]  cannot  find  symbol  z	141	None	replace
848	[BUG]  [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithSize(nid);  [CE]  illegal  start  of  type  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithSize(nid);  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	ArrayList  <  String>  deferredBlockStreams  =  Lists.newArrayListWithSize(nid);	  ArrayList    <    String>    deferredBlockStreams    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
849	[BUG]  [BUGGY]  if(nid  <  =  NID.kSize)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  =  NID.kSize)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  NID.kSize)  {  if(Nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(Nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
850	[BUG]  [BUGGY]  if(Nid.kSize  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  cannot  find  symbol  Nid  [FE]          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(Nid.kSize  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(Nid.kSize  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	  if(nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    if(Nid    <    SIGNATURE_HEADER_SIZE    ||    nid    >    NID.kSize)    {    	non-compiled	[CE]  cannot  find  symbol  Nid	134	None	replace
851	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_KSIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_KSIZE  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_KSIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_KSIZE)  {	  if(nid    <    NID.kSize    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_KSIZE	146	None	replace
852	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HeADER_SIZE)  {  [CE]  cannot  find  symbol  SIGNATURE_HeADER_SIZE  [FE]      IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HeADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HeADER_SIZE)  {	  if(nid    <    NID.kSize    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HeADER_SIZE	146	None	replace
853	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedInt();  [CE]  illegal  start  of  type  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  header.readUnsignedInt();  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	int  nid  =  header.readUnsignedInt();	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
854	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte()  -  1;  [CE]  illegal  start  of  type  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  int  nid  =  header.readUnsignedByte()  -  1;  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	int  nid  =  header.readUnsignedByte()  -  1;	  int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
855	[BUG]  [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEAFDER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]    IOException    [CONTEXT]      private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();      [BUGGY]  if(nid  >  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  if(nid  >  SIGNATURE_HEAFDER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]      archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid    >    SIGNATURE_HEADER_SIZE    ||    nid    >    SIGNATURE_HEADER_SIZE)    {    if(nid  >  SIGNATURE_HEAFDER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	  	non-compiled	[CE]  illegal  start  of  expression	132	None	add
