bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError  [CONTEXT]  private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  [BUGGY]  if  (nid  ==  NID.kCRC)  {  [BUGGY]  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if  (nid  ==  NID.kCRC)  {	if  (nid  ==  NID.kSize)  {  	compilable	  [FE]  IOException  	29	12	replace
2	[BUG]  [BUGGY]  if  (nid  ==  NID.kCRC)  {  [FE]  IOException  [FE]    NoClassDefFoundError  [CONTEXT]  private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  [BUGGY]  if  (nid  ==  NID.kCRC)  {  [BUGGY]  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if  (nid  ==  NID.kCRC)  {	if  (nid  ==  NID.kSize)  {  	compilable	  [FE]  IOException  	29	12	replace
3	[BUG]  [BUGGY]  [FE]  IOException  [FE]      NoClassDefFoundError  [CONTEXT]  private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE)  {	if  (nid  ==  NID.kSize)  {  	compilable	  [FE]  IOException  	29	12	replace
4	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [FE]  IOException  [FE]      NoClassDefFoundError  [CONTEXT]  private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  [BUGGY]  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {	if  (nid  ==  NID.kSize)  {  	compilable	  [FE]  IOException  	29	12	replace
5	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]        NoClassDefFoundError  [CONTEXT]  private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	if  (nid  ==  NID.kSize)  {  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
6	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  [CE]  illegal  start  of  expression  [FE]          NoClassDefFoundError  [CONTEXT]  private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE)  {  [BUGGY]  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE)  {	if  (nid  ==  NID.kSize)  {  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
7	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]            NoClassDefFoundError  [CONTEXT]  private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	if  (nid  ==  NID.kSize)  {  	compilable	  [FE]  NoClassDefFoundError  	29	12	replace
8	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [FE]  NoClassDefFoundError  [FE]            NoClassDefFoundError  [CONTEXT]  private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	if  (nid  ==  NID.kSize)  {  	compilable	  [FE]  NoClassDefFoundError  	29	12	replace
9	[BUG]  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]              NoClassDefFoundError  [CONTEXT]  private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  [BUGGY]  if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	if  (nid  ==  NID.kSize)  {  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
10	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError  [CONTEXT]  private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  [BUGGY]    [BUGGY]  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	  	if  (nid  ==  NID.kSize)  {  	non-compiled	[CE]  illegal  start  of  type	29	None	replace
11	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError  [CONTEXT]  private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if  (nid  <  SIGNATURE_HEADER_SIZE)  {	if  (nid  ==  NID.kSize)  {  	compilable	  [FE]  NoClassDefFoundError  	29	12	replace
12	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError  [CONTEXT]  private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE)  {  [BUGGY]  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if  (nid  <  SIGNATURE_HEADER_SIZE)  {	if  (nid  ==  NID.kSize)  {  	compilable	  [FE]  NoClassDefFoundError  	29	12	replace
13	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError  [CONTEXT]  private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	if  (nid  ==  NID.kSize)  {  	compilable	  [FE]  NoClassDefFoundError  	29	12	replace
14	[BUG]  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError  [CONTEXT]  private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  [BUGGY]  if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {  [BUGGY]  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if  (nid  <  SIGNATURE_HEADER_SIZE  ||  nid  ==  NID.kSize)  {	if  (nid  ==  NID.kSize)  {  	compilable	  [FE]  NoClassDefFoundError  	29	12	replace
15	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError  [CONTEXT]  private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	if  (nid  ==  NID.kSize)  {  	compilable	  [FE]  NoClassDefFoundError  	29	12	replace
16	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError  [CONTEXT]  private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {  [BUGGY]  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  NID.kSize)  {	if  (nid  ==  NID.kSize)  {  	compilable	  [FE]  NoClassDefFoundError  	29	12	replace
17	[BUG]  [BUGGY]  if(nid  <  =  NID.kSize)  {  [CE]  illegal  start  of  expression  [FE]    NoClassDefFoundError  [CONTEXT]  private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  [BUGGY]  if(nid  <  =  NID.kSize)  {  [BUGGY]  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  =  NID.kSize)  {	if  (nid  ==  NID.kSize)  {  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
18	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError  [CONTEXT]  private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	add	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	if  (nid  ==  NID.kSize)  {  	compilable	  [FE]  NoClassDefFoundError  	29	12	replace
19	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError  [CONTEXT]  private  void  readPackInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  archive.packPos  =  readUint64(header);  final  long  numPackStreams  =  readUint64(header);  int  nid  =  header.readUnsignedByte();  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {  [BUGGY]  archive.packSizes  =  new  long[(int)numPackStreams];  for  (int  i  =  0;  i  <  archive.packSizes.length;  i++)  {  archive.packSizes[i]  =  readUint64(header);  }  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kCRC)  {  archive.packCrcsDefined  =  readAllOrBits(header,  (int)numPackStreams);  archive.packCrcs  =  new  long[(int)numPackStreams];  [CLASS]  SevenZFile  [METHOD]  readPackInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  i  nextHeaderSizeInt  nid  long  numPackStreams  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	349	349	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE  ||  nid  >  SIGNATURE_HEADER_SIZE)  {	if  (nid  ==  NID.kSize)  {  	compilable	  [FE]  NoClassDefFoundError  	29	12	replace
