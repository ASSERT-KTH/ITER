bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  nid  =  NID.intValue();  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.intValue();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.intValue();	  nid    =    nid.intValue();    	non-compiled	[CE]  cannot  find  symbol	169	None	replace
2	[BUG]  [BUGGY]  nid  =  header.intValue();  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.intValue();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.intValue();	  nid    =    nid.intValue();    	non-compiled	[CE]  cannot  find  symbol	169	None	replace
3	[BUG]  [BUGGY]  nid  =  nID.intValue();  [CE]  cannot  find  symbol  nID  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nID.intValue();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  nID.intValue();	  nid    =    nid.intValue();    	non-compiled	[CE]  cannot  find  symbol  nID	169	None	replace
4	[BUG]  [BUGGY]  nid  =  UID.intValue();  [CE]  cannot  find  symbol  UID  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  UID.intValue();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  UID.intValue();	  nid    =    nid.intValue();    	non-compiled	[CE]  cannot  find  symbol  UID	169	None	replace
5	[BUG]  [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  currentFolderInputStream.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.get(currentFolderIndex);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
6	[BUG]  [BUGGY]  nid  =  currentFolderIndex.readUnsignedByte();  [CE]  int  cannot  be  dereferenced  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderIndex.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  currentFolderIndex.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.get(currentFolderIndex);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  int  cannot  be  dereferenced	121	None	replace
7	[BUG]  [BUGGY]  InputStream  file  =  currentFolderInputStream.get(nid);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  InputStream  file  =  currentFolderInputStream.get(nid);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	InputStream  file  =  currentFolderInputStream.get(nid);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.get(currentFolderIndex);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
8	[BUG]  [BUGGY]  InputStream  file  =  inputStreamStack.get(currentFolderIndex);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  inputStreamStack  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  InputStream  file  =  inputStreamStack.get(currentFolderIndex);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	InputStream  file  =  inputStreamStack.get(currentFolderIndex);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.get(currentFolderIndex);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	121	None	replace
9	[BUG]  [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(currentFolderIndex);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(currentFolderIndex);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(currentFolderIndex);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.get(currentFolderIndex);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
10	[BUG]  [BUGGY]  InputStream  file  =  currentFolderInputStream.get(nid);  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  InputStream  file  =  currentFolderInputStream.get(nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	InputStream  file  =  currentFolderInputStream.get(nid);	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.get(currentFolderIndex);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
11	[BUG]  [BUGGY]  NID  nid  =  NID.KUnpackInfo();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID  nid  =  NID.KUnpackInfo();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID  nid  =  NID.KUnpackInfo();	  nid    =    NID.KUnpackInfo();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	93	None	replace
12	[BUG]  [BUGGY]  nid  =  NID.kPackInfo();  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kPackInfo();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kPackInfo();	  nid    =    NID.KUnpackInfo();    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
13	[BUG]  [BUGGY]  nid  =  NID.KUnPackInfo();  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.KUnPackInfo();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.KUnPackInfo();	  nid    =    NID.KUnpackInfo();    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
14	[BUG]  [BUGGY]  nid  =  NID.kpackInfo();  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kpackInfo();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kpackInfo();	  nid    =    NID.KUnpackInfo();    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
15	[BUG]  [BUGGY]  [FE]  EOFException  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    System.arraycopy(nid,    0,    archive.folders,    0,    nid);    	compilable	  [FE]  EOFException  	62	12	replace
16	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [FE]  EOFException  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    System.arraycopy(nid,    0,    archive.folders,    0,    nid);    	compilable	  [FE]  EOFException  	62	12	replace
17	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  System.arra  [CE]  not  a  statement  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  System.arra  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  System.arra	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    System.arraycopy(nid,    0,    archive.folders,    0,    nid);    	non-compiled	[CE]  not  a  statement	62	None	replace
18	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  System.arra  [CE]  not  a  statement  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  System.arra  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  System.arra	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    System.arraycopy(nid,    0,    archive.folders,    0,    nid);    	non-compiled	[CE]  not  a  statement	62	None	replace
19	[BUG]  [BUGGY]  [FE]  EOFException  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    System.arraycopy(nid,    0,    archive.folders,    0,    nid);    	compilable	  [FE]  EOFException  	62	12	replace
20	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  [FE]  EOFException  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    System.arraycopy(nid,    0,    archive.folders,    0,    nid);    	compilable	  [FE]  EOFException  	62	12	replace
21	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  System.  [CE]  <identifier>  expected  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  System.  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  System.	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    System.arraycopy(nid,    0,    archive.folders,    0,    nid);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
22	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  System.arra  [CE]  not  a  statement  [FE]                        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  System.arra  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  System.arra	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    System.arraycopy(nid,    0,    archive.folders,    0,    nid);    	non-compiled	[CE]  not  a  statement	62	None	replace
23	[BUG]  [BUGGY]  nid  =  files.readUnsignedByte();  [CE]  cannot  find  symbol  files  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  files.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  files.readUnsignedByte();	  nid    =    file.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol  files	117	None	replace
24	[BUG]  [BUGGY]  nid  =  thread.readUnsignedByte();  [CE]  cannot  find  symbol  thread  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  thread.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  thread.readUnsignedByte();	  nid    =    file.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol  thread	117	None	replace
25	[BUG]  [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.getInputStream(fileName);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]        EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.getInputStream(fileName);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.getInputStream(fileName);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.getInputStream(fileName);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
26	[BUG]  [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.getInputStream(fileName);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.getInputStream(fileName);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.getInputStream(fileName);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.getInputStream(fileName);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
27	[BUG]  [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.getInputStream(fileName);  [CE]  cannot  find  symbol  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.getInputStream(fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.getInputStream(fileName);	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.getInputStream(fileName);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
28	[BUG]  [BUGGY]  InputStream  file  =  currentFolderInputStream.getInputStream(fileName);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  InputStream  file  =  currentFolderInputStream.getInputStream(fileName);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	InputStream  file  =  currentFolderInputStream.getInputStream(fileName);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.getInputStream(fileName);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
29	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(NID.kUnpackInfo,  NID.kUnpackInfo);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(NID.kUnpackInfo,  NID.kUnpackInfo);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(NID.kUnpackInfo,  NID.kUnpackInfo);	  nid    =    header.readUnsignedByte(NID.kUnpackInfo,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	107	None	replace
30	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(NID.kUnpackInfo,  nid,  archive.folders);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(NID.kUnpackInfo,  nid,  archive.folders);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(NID.kUnpackInfo,  nid,  archive.folders);	  nid    =    header.readUnsignedByte(NID.kUnpackInfo,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	107	None	replace
31	[BUG]  [BUGGY]  nid  =  inputStreamStack.readUnsignedByte(NID.kUnpackInfo,  nid);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  inputStreamStack.readUnsignedByte(NID.kUnpackInfo,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  inputStreamStack.readUnsignedByte(NID.kUnpackInfo,  nid);	  nid    =    header.readUnsignedByte(NID.kUnpackInfo,    nid);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	107	None	replace
32	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(NID.kUnpackInfo,  nid,  NID.kPackInfo);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(NID.kUnpackInfo,  nid,  NID.kPackInfo);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(NID.kUnpackInfo,  nid,  NID.kPackInfo);	  nid    =    header.readUnsignedByte(NID.kUnpackInfo,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	107	None	replace
33	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(NID.kUnpackInfo,  nid,  fileName);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(NID.kUnpackInfo,  nid,  fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(NID.kUnpackInfo,  nid,  fileName);	  nid    =    header.readUnsignedByte(NID.kUnpackInfo,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	107	None	replace
34	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(NID.kUnpackInfo,  nid,  NID.kUnpackInfo);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(NID.kUnpackInfo,  nid,  NID.kUnpackInfo);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(NID.kUnpackInfo,  nid,  NID.kUnpackInfo);	  nid    =    header.readUnsignedByte(NID.kUnpackInfo,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	107	None	replace
35	[BUG]  [BUGGY]  NID  nid  =  NID.kSubStreamsInfo;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID  nid  =  NID.kSubStreamsInfo;	  nid    =    NID.kSubStreamsInfo.length;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	30	None	replace
36	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo().length;  [CE]  cannot  find  symbol  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo().length;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo().length;	  nid    =    NID.kSubStreamsInfo.length;    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
37	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo_length;  [CE]  cannot  find  symbol  kSubStreamsInfo_length  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo_length;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo_length;	  nid    =    NID.kSubStreamsInfo.length;    	non-compiled	[CE]  cannot  find  symbol  kSubStreamsInfo_length	30	None	replace
38	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	158	12	add
39	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	158	12	add
40	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[2];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[2];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	158	12	add
41	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[2];  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[2];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[2];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	158	12	add
42	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  int  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  int  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[1];    }    int  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	158	None	add
43	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[3];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[3];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	158	12	add
44	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[3];  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[3];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[3];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	158	12	add
45	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	158	12	add
46	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	158	12	add
47	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  DataInput  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  DataInput  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[1];    }    DataInput  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	158	None	add
48	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]                java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid!=  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kUnpackInfo;  if(nid!=  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	158	12	add
49	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid!=  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]                java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid!=  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kUnpackInfo;  if(nid!=  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	158	12	add
50	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	Integer  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    int    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	60	None	replace
51	[BUG]  [BUGGY]  Int  nid  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  Int  nid  =  header.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	Int  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    int    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
52	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(2);  [CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte(2);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte(2);	  nid    =    file.readUnsignedByte(0);    	non-compiled	[CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;	115	None	replace
53	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  Folder[4];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	archive.folders  =  new  Folder[4];	          archive.folders    =    new    Folder[1];    	compilable	  [FE]  IOException  	111	12	replace
54	[BUG]  [BUGGY]  archive.folders  =  new  Folder[4];  [FE]  IOException  [FE]    NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  Folder[4];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  Folder[4];	          archive.folders    =    new    Folder[1];    	compilable	  [FE]  IOException  	111	12	replace
55	[BUG]  [BUGGY]  [FE]  IOException  [FE]      NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  Folder[2];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	archive.folders  =  new  Folder[2];	          archive.folders    =    new    Folder[1];    	compilable	  [FE]  IOException  	111	12	replace
56	[BUG]  [BUGGY]  archive.folders  =  new  Folder[2];  [FE]  IOException  [FE]      NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  Folder[2];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  Folder[2];	          archive.folders    =    new    Folder[1];    	compilable	  [FE]  IOException  	111	12	replace
57	[BUG]  [BUGGY]  [FE]  IOException  [FE]        NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  Folder[6];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	archive.folders  =  new  Folder[6];	          archive.folders    =    new    Folder[1];    	compilable	  [FE]  IOException  	111	12	replace
58	[BUG]  [BUGGY]  archive.folders  =  new  Folder[6];  [FE]  IOException  [FE]        NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  Folder[6];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  Folder[6];	          archive.folders    =    new    Folder[1];    	compilable	  [FE]  IOException  	111	12	replace
59	[BUG]  [BUGGY]  [FE]  IOException  [FE]          NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  Folder[3];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	archive.folders  =  new  Folder[3];	          archive.folders    =    new    Folder[1];    	compilable	  [FE]  IOException  	111	12	replace
60	[BUG]  [BUGGY]  archive.folders  =  new  Folder[3];  [FE]  IOException  [FE]          NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  Folder[3];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  Folder[3];	          archive.folders    =    new    Folder[1];    	compilable	  [FE]  IOException  	111	12	replace
61	[BUG]  [BUGGY]  [FE]  IOException  [FE]            NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  Folder[5];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	archive.folders  =  new  Folder[5];	          archive.folders    =    new    Folder[1];    	compilable	  [FE]  IOException  	111	12	replace
62	[BUG]  [BUGGY]  archive.folders  =  new  Folder[5];  [FE]  IOException  [FE]            NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  Folder[5];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  Folder[5];	          archive.folders    =    new    Folder[1];    	compilable	  [FE]  IOException  	111	12	replace
63	[BUG]  [BUGGY]  nid  =  reader.readUnpackInfo(header,  archive);  [CE]  cannot  find  symbol  reader  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  reader.readUnpackInfo(header,  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  reader.readUnpackInfo(header,  archive);	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    	non-compiled	[CE]  cannot  find  symbol  reader	164	None	replace
64	[BUG]  [BUGGY]  nid  =  header.readUnpackInfo(nid);  [CE]  cannot  find  symbol  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnpackInfo(nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnpackInfo(nid);	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
65	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  readUnpackInfo(header,  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	readUnpackInfo(header,  archive);	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	164	12	replace
66	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  [FE]  java.io.IOException:  Expected  kFolder  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  readUnpackInfo(header,  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	readUnpackInfo(header,  archive);	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	164	12	replace
67	[BUG]  [BUGGY]  nid  =  NID.bytesInfo.length;  [CE]  cannot  find  symbol  bytesInfo  [FE]        EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesInfo.length;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesInfo.length;	  nid    =    NID.bytesInfo;    	non-compiled	[CE]  cannot  find  symbol  bytesInfo	28	None	replace
68	[BUG]  [BUGGY]  nid  =  NID.bytesInfo  +  1;  [CE]  cannot  find  symbol  bytesInfo  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesInfo  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesInfo  +  1;	  nid    =    NID.bytesInfo;    	non-compiled	[CE]  cannot  find  symbol  bytesInfo	28	None	replace
69	[BUG]  [BUGGY]  nid  =  NID.bytesinfo;  [CE]  cannot  find  symbol  bytesinfo  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesinfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesinfo;	  nid    =    NID.bytesInfo;    	non-compiled	[CE]  cannot  find  symbol  bytesinfo	28	None	replace
70	[BUG]  [BUGGY]  nid  =  NID.bytesInput;  [CE]  cannot  find  symbol  bytesInput  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesInput;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesInput;	  nid    =    NID.bytesInfo;    	non-compiled	[CE]  cannot  find  symbol  bytesInput	28	None	replace
71	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(NID.folderSize);  [CE]  cannot  find  symbol  folderSize  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(NID.folderSize);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList  <  Folder>(NID.folderSize);	          archive.folders    =    new    ArrayList    <    Folder>(length);    	non-compiled	[CE]  cannot  find  symbol  folderSize	14	None	replace
72	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(fileName);  [CE]  no  suitable  constructor  found  for  ArrayList(String)  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList  <  Folder>(fileName);	          archive.folders    =    new    ArrayList    <    Folder>(length);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(String)	14	None	replace
73	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(0);  [CE]  incompatible  types  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(0);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList  <  Folder>(0);	          archive.folders    =    new    ArrayList    <    Folder>(length);    	non-compiled	[CE]  incompatible  types	14	None	replace
74	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(NID.folderLength);  [CE]  cannot  find  symbol  folderLength  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(NID.folderLength);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList  <  Folder>(NID.folderLength);	          archive.folders    =    new    ArrayList    <    Folder>(length);    	non-compiled	[CE]  cannot  find  symbol  folderLength	14	None	replace
75	[BUG]  [BUGGY]  NID  =  NID.kSubStreamsInfo;  [CE]  cannot  find  symbol  NID  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID  =  NID.kSubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    NID    =    NID.kSubStreamsInfo;    	non-compiled	[CE]  cannot  find  symbol  NID	85	None	replace
76	[BUG]  [BUGGY]  nid  =  nid;  NID  =  NID.kSubStreamsInfo;  [CE]  cannot  find  symbol  NID  [FE]                  EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  NID  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  nid;  NID  =  NID.kSubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    NID    =    NID.kSubStreamsInfo;    	non-compiled	[CE]  cannot  find  symbol  NID	85	None	replace
77	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	                if(nid    ==    SIGNATURE_HEADER_SIZE)    {    archive.folders    =    new    Folder[0];    }    if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  NoClassDefFoundError  	108	12	add
78	[BUG]  [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	                if(nid    ==    SIGNATURE_HEADER_SIZE)    {    archive.folders    =    new    Folder[0];    }    if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  NoClassDefFoundError  	108	12	add
79	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	                if(nid    ==    SIGNATURE_HEADER_SIZE)    {    archive.folders    =    new    Folder[0];    }    if(nid  >=  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  NoClassDefFoundError  	108	12	add
80	[BUG]  [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	                if(nid    ==    SIGNATURE_HEADER_SIZE)    {    archive.folders    =    new    Folder[0];    }    if(nid  >=  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  NoClassDefFoundError  	108	12	add
81	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  if(nid!=  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	                if(nid    ==    SIGNATURE_HEADER_SIZE)    {    archive.folders    =    new    Folder[0];    }    if(nid!=  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	108	12	add
82	[BUG]  [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  if(nid!=  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  if(nid!=  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	                if(nid    ==    SIGNATURE_HEADER_SIZE)    {    archive.folders    =    new    Folder[0];    }    if(nid!=  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	108	12	add
83	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	                if(nid    ==    SIGNATURE_HEADER_SIZE)    {    archive.folders    =    new    Folder[0];    }    if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  NoClassDefFoundError  	108	12	add
84	[BUG]  [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	                if(nid    ==    SIGNATURE_HEADER_SIZE)    {    archive.folders    =    new    Folder[0];    }    if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  NoClassDefFoundError  	108	12	add
85	[BUG]  [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  If(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  [CE]  ';'  expected  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  If(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	                if(nid    ==    SIGNATURE_HEADER_SIZE)    {    archive.folders    =    new    Folder[0];    }    If(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }	  	non-compiled	[CE]  ';'  expected	108	None	add
86	[BUG]  [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  if(nid  ==  SIGNATURE_HEAFDER_SIZE)  {  archive.folders  =  new  Folder[0];  }  [CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  if(nid  ==  SIGNATURE_HEAFDER_SIZE)  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	                if(nid    ==    SIGNATURE_HEADER_SIZE)    {    archive.folders    =    new    Folder[0];    }    if(nid  ==  SIGNATURE_HEAFDER_SIZE)  {  archive.folders  =  new  Folder[0];  }	  	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE	108	None	add
87	[BUG]  [BUGGY]  NID.kUnpackInfo  =  nid.readUnsignedByte();  [CE]  cannot  assign  a  value  to  final  variable  kUnpackInfo  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID.kUnpackInfo  =  nid.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID.kUnpackInfo  =  nid.readUnsignedByte();	  NID.kUnpackInfo    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  kUnpackInfo	55	None	replace
88	[BUG]  [BUGGY]  NID.kUnpackInfo  =  NID.readUnsignedByte();  [CE]  cannot  assign  a  value  to  final  variable  kUnpackInfo  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID.kUnpackInfo  =  NID.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID.kUnpackInfo  =  NID.readUnsignedByte();	  NID.kUnpackInfo    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  kUnpackInfo	55	None	replace
89	[BUG]  [BUGGY]  nID.kUnpackInfo  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  nID  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nID.kUnpackInfo  =  header.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nID.kUnpackInfo  =  header.readUnsignedByte();	  NID.kUnpackInfo    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  nID	55	None	replace
90	[BUG]  [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(header);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(header);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(header);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.get(header);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
91	[BUG]  [BUGGY]  InputStream  file  =  currentFolderInputStream.get(header);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  InputStream  file  =  currentFolderInputStream.get(header);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	InputStream  file  =  currentFolderInputStream.get(header);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.get(header);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
92	[BUG]  [BUGGY]  InputStream  file  =  inputStreamStack.get(header);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  inputStreamStack  [FE]                    EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  InputStream  file  =  inputStreamStack.get(header);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	InputStream  file  =  inputStreamStack.get(header);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.get(header);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	125	None	replace
93	[BUG]  [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(header);  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(header);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(header);	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.get(header);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
94	[BUG]  [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.get(header);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                        EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.get(header);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.get(header);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.get(header);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
95	[BUG]  [BUGGY]  NID.kUnpackInfo  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [CE]  cannot  assign  a  value  to  final  variable  kUnpackInfo  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID.kUnpackInfo  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID.kUnpackInfo  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  kUnpackInfo	59	None	replace
96	[BUG]  [BUGGY]  Nid  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  Nid  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	Nid  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
97	[BUG]  [BUGGY]  NID  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	59	None	replace
98	[BUG]  [BUGGY]  NID.kPackInfo  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [CE]  cannot  assign  a  value  to  final  variable  kPackInfo  [FE]          EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID.kPackInfo  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID.kPackInfo  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  kPackInfo	59	None	replace
99	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo;  writeUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  writeUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo;  writeUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    writeUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
100	[BUG]  [BUGGY]  NID  nid  =  NID.kUnpackInfo;  writeUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID  nid  =  NID.kUnpackInfo;  writeUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID  nid  =  NID.kUnpackInfo;  writeUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    writeUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	160	None	replace
101	[BUG]  [BUGGY]  nid  =  NID.bindings  |  SIGNATURE_HEADER_SIZE;  [CE]  cannot  find  symbol  bindings  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bindings  |  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bindings  |  SIGNATURE_HEADER_SIZE;	  nid    =    NID.bindings;    	non-compiled	[CE]  cannot  find  symbol  bindings	92	None	replace
102	[BUG]  [BUGGY]  nid  =  NID.bindings[nid];  [CE]  cannot  find  symbol  bindings  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bindings[nid];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bindings[nid];	  nid    =    NID.bindings;    	non-compiled	[CE]  cannot  find  symbol  bindings	92	None	replace
103	[BUG]  [BUGGY]  nid  =  NID.bindings  ||  nid  <  SIGNATURE_HEADER_SIZE;  [CE]  cannot  find  symbol  bindings  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bindings  ||  nid  <  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bindings  ||  nid  <  SIGNATURE_HEADER_SIZE;	  nid    =    NID.bindings;    	non-compiled	[CE]  cannot  find  symbol  bindings	92	None	replace
104	[BUG]  [BUGGY]  nid  =  NID.bindings();  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bindings();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bindings();	  nid    =    NID.bindings;    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
105	[BUG]  [BUGGY]  nid  =  NID.binders;  [CE]  cannot  find  symbol  binders  [FE]                  EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.binders;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.binders;	  nid    =    NID.bindings;    	non-compiled	[CE]  cannot  find  symbol  binders	92	None	replace
106	[BUG]  [BUGGY]  nid  =  NID.binding();  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.binding();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.binding();	  nid    =    NID.bindings;    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
107	[BUG]  [BUGGY]  nid  =  archive.readUnsignedByte(header,  archive);  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  archive.readUnsignedByte(header,  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  archive.readUnsignedByte(header,  archive);	  nid    =    header.readUnsignedByte(nid,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
108	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(header,  archive.folders);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(header,  archive.folders);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(header,  archive.folders);	  nid    =    header.readUnsignedByte(nid,    archive.folders);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	4	None	replace
109	[BUG]  [BUGGY]  nid  =  archive.readUnsignedByte(header,  archive.folders);  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  archive.readUnsignedByte(header,  archive.folders);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  archive.readUnsignedByte(header,  archive.folders);	  nid    =    header.readUnsignedByte(nid,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
110	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  archive.folders,  signature);  [CE]  cannot  find  symbol  signature  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  archive.folders,  signature);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(nid,  archive.folders,  signature);	  nid    =    header.readUnsignedByte(nid,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  signature	4	None	replace
111	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.folders);  [CE]  cannot  find  symbol  folders  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.folders);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(nid,  NID.folders);	  nid    =    header.readUnsignedByte(nid,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  folders	4	None	replace
112	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  archive.folders,  fileName);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  archive.folders,  fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(nid,  archive.folders,  fileName);	  nid    =    header.readUnsignedByte(nid,    archive.folders);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	4	None	replace
113	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  nid,  archive.folders);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  nid,  archive.folders);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(inputStreamStack,  nid,  archive.folders);	  nid    =    header.readUnsignedByte(nid,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	4	None	replace
114	[BUG]  [BUGGY]  if(nid  ==  NID.kPackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  System.arra  [CE]  not  a  statement  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kPackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  System.arra  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  NID.kPackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  System.arra	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    System.arraycopy(fileName,    0,    nid,    0,    nid);    	non-compiled	[CE]  not  a  statement	64	None	replace
115	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	21	12	replace
116	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  IOException  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	21	12	replace
117	[BUG]  [BUGGY]  [FE]  IOException  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	21	12	replace
118	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  IOException  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	21	12	replace
119	[BUG]  [BUGGY]  [FE]  IOException  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	21	12	replace
120	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [FE]  IOException  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	21	12	replace
121	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  }	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	21	12	replace
122	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  }  [FE]  IOException  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  }	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	21	12	replace
123	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[];  }  [CE]  array  dimension  missing  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[];  }	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    	non-compiled	[CE]  array  dimension  missing	21	None	replace
124	[BUG]  [BUGGY]  nid  =  NID.readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [CE]  cannot  find  symbol  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
125	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	153	12	replace
126	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [FE]  java.io.IOException:  Expected  kFolder  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	153	12	replace
127	[BUG]  [BUGGY]  nid  =  NID.readUnpackInfo(header,  archive);  nid  =  NID.readUnpackInfo;  [CE]  cannot  find  symbol  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnpackInfo(header,  archive);  nid  =  NID.readUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnpackInfo(header,  archive);  nid  =  NID.readUnpackInfo;	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
128	[BUG]  [BUGGY]  nid  =  NID.folderSize;  nid  =  NID.kUnpackInfo;  [CE]  cannot  find  symbol  folderSize  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.folderSize;  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.folderSize;  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    	non-compiled	[CE]  cannot  find  symbol  folderSize	153	None	replace
129	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  nid  =  NID.kUnpackInfo;  [CE]  cannot  find  symbol  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte();  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte();  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
130	[BUG]  [BUGGY]  [FE]  EOFException  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  EOFException  	61	12	replace
131	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  EOFException  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  EOFException  	61	12	replace
132	[BUG]  [BUGGY]  [FE]  EOFException  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  EOFException  	61	12	replace
133	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  EOFException  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  EOFException  	61	12	replace
134	[BUG]  [BUGGY]  [FE]  IOException  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kPackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	if(nid  ==  NID.kPackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	61	12	replace
135	[BUG]  [BUGGY]  if(nid  ==  NID.kPackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  IOException  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kPackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  NID.kPackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	61	12	replace
136	[BUG]  [BUGGY]  [FE]  EOFException  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  EOFException  	61	12	replace
137	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  EOFException  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  EOFException  	61	12	replace
138	[BUG]  [BUGGY]  [FE]  IOException  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kPackInfo)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	if(nid  ==  NID.kPackInfo)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	61	12	replace
139	[BUG]  [BUGGY]  if(nid  ==  NID.kPackInfo)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  IOException  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kPackInfo)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  NID.kPackInfo)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	61	12	replace
140	[BUG]  [BUGGY]  ((  RandomAccessFile)file).folders.add(nid);  [CE]  cannot  find  symbol  folders  [FE]                    EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  ((  RandomAccessFile)file).folders.add(nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	((  RandomAccessFile)file).folders.add(nid);	  nid    =    file.readUnsignedByte();    ((    RandomAccessFile)file).folders.add(nid);    	non-compiled	[CE]  cannot  find  symbol  folders	48	None	replace
141	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid,  header);  [CE]  cannot  find  symbol  folders  [FE]                      EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid,  header);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid,  header);	  nid    =    file.readUnsignedByte();    ((    RandomAccessFile)file).folders.add(nid);    	non-compiled	[CE]  cannot  find  symbol  folders	48	None	replace
142	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid,  NID.kPackInfo);  [CE]  cannot  find  symbol  folders  [FE]                        EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid,  NID.kPackInfo);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid,  NID.kPackInfo);	  nid    =    file.readUnsignedByte();    ((    RandomAccessFile)file).folders.add(nid);    	non-compiled	[CE]  cannot  find  symbol  folders	48	None	replace
143	[BUG]  [BUGGY]  int  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid);	  nid    =    file.readUnsignedByte();    ((    RandomAccessFile)file).folders.add(nid);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	48	None	replace
144	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid  +  1);  [CE]  cannot  find  symbol  folders  [FE]                            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid  +  1);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid  +  1);	  nid    =    file.readUnsignedByte();    ((    RandomAccessFile)file).folders.add(nid);    	non-compiled	[CE]  cannot  find  symbol  folders	48	None	replace
145	[BUG]  [BUGGY]  int  nid  =  NID.kUnpackInfo;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    int    nid    =    NID.kUnpackInfo;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	20	None	replace
146	[BUG]  [BUGGY]  Integer  nid  =  NID.kUnpackInfo;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  Integer  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	Integer  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    int    nid    =    NID.kUnpackInfo;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	20	None	replace
147	[BUG]  [BUGGY]  Nid  nid  =  NID.kUnpackInfo;  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  Nid  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	Nid  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    int    nid    =    NID.kUnpackInfo;    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
148	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }	  	compilable	  [FE]  EOFException  	137	12	add
149	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }	  	compilable	  [FE]  EOFException  	137	12	add
150	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  int  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  int  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    int  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	137	None	add
151	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  nid  =  NID.kSubStreamsInfo;  if(nid!=  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    nid  =  NID.kSubStreamsInfo;  if(nid!=  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }	  	compilable	  [FE]  EOFException  	137	12	add
152	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  nid  =  NID.kSubStreamsInfo;  if(nid!=  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  nid  =  NID.kSubStreamsInfo;  if(nid!=  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    nid  =  NID.kSubStreamsInfo;  if(nid!=  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }	  	compilable	  [FE]  EOFException  	137	12	add
153	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  InputStream  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  InputStream  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    InputStream  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	137	None	add
154	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  DataInput  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  DataInput  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    DataInput  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	137	None	add
155	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;	  	non-compiled	[CE]  illegal  start  of  expression	137	None	add
156	[BUG]  [BUGGY]  nid  =  NID.folders[0];  [CE]  cannot  find  symbol  folders  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.folders[0];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.folders[0];	  nid    =    NID.folders;    	non-compiled	[CE]  cannot  find  symbol  folders	29	None	replace
157	[BUG]  [BUGGY]  nid  =  NID.folderSize;  [CE]  cannot  find  symbol  folderSize  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.folderSize;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.folderSize;	  nid    =    NID.folders;    	non-compiled	[CE]  cannot  find  symbol  folderSize	29	None	replace
158	[BUG]  [BUGGY]  nid  =  NID.kFolders;  [CE]  cannot  find  symbol  kFolders  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kFolders;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kFolders;	  nid    =    NID.folders;    	non-compiled	[CE]  cannot  find  symbol  kFolders	29	None	replace
159	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolderInput,  nid);  [CE]  cannot  find  symbol  currentFolderInput  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolderInput,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(currentFolderInput,  nid);	  nid    =    header.readUnsignedByte(inputStreamStack,    nid);    	non-compiled	[CE]  cannot  find  symbol  currentFolderInput	105	None	replace
160	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolderInputStream,  nid);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolderInputStream,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(currentFolderInputStream,  nid);	  nid    =    header.readUnsignedByte(inputStreamStack,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	105	None	replace
161	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  currentFolderInput);  [CE]  cannot  find  symbol  currentFolderInput  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  currentFolderInput);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(nid,  currentFolderInput);	  nid    =    header.readUnsignedByte(inputStreamStack,    nid);    	non-compiled	[CE]  cannot  find  symbol  currentFolderInput	105	None	replace
162	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid,  fileName);  [CE]  no  suitable  constructor  found  for  ArrayList(int,String)  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid,  fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList  <  Folder>(nid,  fileName);	          archive.folders    =    new    ArrayList    <    Folder>(nid);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,String)	10	None	replace
163	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid  +  1);  [CE]  incompatible  types  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid  +  1);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList  <  Folder>(nid  +  1);	          archive.folders    =    new    ArrayList    <    Folder>(nid);    	non-compiled	[CE]  incompatible  types	10	None	replace
164	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid,  NID.kUnpackInfo);  [CE]  no  suitable  constructor  found  for  ArrayList(int,int)  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid,  NID.kUnpackInfo);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList  <  Folder>(nid,  NID.kUnpackInfo);	          archive.folders    =    new    ArrayList    <    Folder>(nid);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,int)	10	None	replace
165	[BUG]  [BUGGY]  archive.folders  =  new  LinkedList  <  Folder>(nid);  [CE]  no  suitable  constructor  found  for  LinkedList(int)  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  LinkedList  <  Folder>(nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  LinkedList  <  Folder>(nid);	          archive.folders    =    new    ArrayList    <    Folder>(nid);    	non-compiled	[CE]  no  suitable  constructor  found  for  LinkedList(int)	10	None	replace
166	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid,  deferredBlockStreams);  [CE]  no  suitable  constructor  found  for  ArrayList(int,ArrayList<InputStream>)  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid,  deferredBlockStreams);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList  <  Folder>(nid,  deferredBlockStreams);	          archive.folders    =    new    ArrayList    <    Folder>(nid);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,ArrayList<InputStream>)	10	None	replace
167	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid,  header);  [CE]  no  suitable  constructor  found  for  ArrayList(int,DataInput)  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid,  header);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList  <  Folder>(nid,  header);	          archive.folders    =    new    ArrayList    <    Folder>(nid);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(int,DataInput)	10	None	replace
168	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  SIGNATURE_HEADER_SIZE,  archive);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  SIGNATURE_HEADER_SIZE,  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(nid,  SIGNATURE_HEADER_SIZE,  archive);	  nid    =    header.readUnsignedByte(nid,    archive);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	3	None	replace
169	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  fileName,  archive);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  fileName,  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(nid,  fileName,  archive);	  nid    =    header.readUnsignedByte(nid,    archive);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	3	None	replace
170	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kUnpackInfo,  archive);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kUnpackInfo,  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(nid,  NID.kUnpackInfo,  archive);	  nid    =    header.readUnsignedByte(nid,    archive);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	3	None	replace
171	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kUnpackInfo,  fileName);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kUnpackInfo,  fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(nid,  NID.kUnpackInfo,  fileName);	  nid    =    header.readUnsignedByte(nid,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	5	None	replace
172	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo.readUnsignedByte(header,  archive);  [CE]  int  cannot  be  dereferenced  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo.readUnsignedByte(header,  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo.readUnsignedByte(header,  archive);	  nid    =    header.readUnsignedByte(nid,    NID.kUnpackInfo);    	non-compiled	[CE]  int  cannot  be  dereferenced	5	None	replace
173	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kUnpackInfo,  archive.folders);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kUnpackInfo,  archive.folders);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(nid,  NID.kUnpackInfo,  archive.folders);	  nid    =    header.readUnsignedByte(nid,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	5	None	replace
174	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte(header,  NID.kUnpackInfo);  [CE]  cannot  find  symbol  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte(header,  NID.kUnpackInfo);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte(header,  NID.kUnpackInfo);	  nid    =    header.readUnsignedByte(nid,    NID.kUnpackInfo);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
175	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(header,  NID.kUnpackInfo);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(header,  NID.kUnpackInfo);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(header,  NID.kUnpackInfo);	  nid    =    header.readUnsignedByte(nid,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	5	None	replace
176	[BUG]  [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(fileName);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]        EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(fileName);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(fileName);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.get(fileName);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
177	[BUG]  [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(fileName);  [CE]  cannot  find  symbol  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(fileName);	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.get(fileName);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
178	[BUG]  [BUGGY]  InputStream  file  =  currentFolderInputStream.get(fileName);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  InputStream  file  =  currentFolderInputStream.get(fileName);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	InputStream  file  =  currentFolderInputStream.get(fileName);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.get(fileName);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
179	[BUG]  [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.get(fileName);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.get(fileName);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.get(fileName);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.get(fileName);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
180	[BUG]  [BUGGY]  nid  =  NID.decodeSIGNATURE_HEADER_SIZE;  [CE]  cannot  find  symbol  decodeSIGNATURE_HEADER_SIZE  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.decodeSIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.decodeSIGNATURE_HEADER_SIZE;	  nid    =    NID.length;    	non-compiled	[CE]  cannot  find  symbol  decodeSIGNATURE_HEADER_SIZE	133	None	replace
181	[BUG]  [BUGGY]  nid  =  NID.substring(nid);  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.substring(nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.substring(nid);	  nid    =    NID.length;    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
182	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  EOFException  	147	12	add
183	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  EOFException  	147	12	add
184	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[2];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[2];  }	  	compilable	  [FE]  EOFException  	147	12	add
185	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[2];  }  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[2];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[2];  }	  	compilable	  [FE]  EOFException  	147	12	add
186	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  EOFException  	147	12	add
187	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  EOFException  	147	12	add
188	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[3];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[3];  }	  	compilable	  [FE]  EOFException  	147	12	add
189	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[3];  }  [FE]  EOFException  [FE]          EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[3];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[3];  }	  	compilable	  [FE]  EOFException  	147	12	add
190	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[  [CE]  ']'  expected  [FE]            EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[	  	non-compiled	[CE]  ']'  expected	147	None	add
191	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  [CE]  'else'  without  'if'  [FE]              EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];	  	non-compiled	[CE]  'else'  without  'if'	147	None	add
192	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  [CE]  illegal  start  of  expression  [FE]                EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;	  	non-compiled	[CE]  illegal  start  of  expression	147	None	add
193	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Fold  [CE]  '('  or  '['  expected  [FE]                  EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Fold  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Fold	  	non-compiled	[CE]  '('  or  '['  expected	147	None	add
194	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  Folder[nid];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	archive.folders  =  new  Folder[nid];	          if(nid    ==    SIGNATURE_HEADER_SIZE)    {    archive.folders    =    new    Folder[0];    }    	compilable	  [FE]  IOException  	109	12	replace
195	[BUG]  [BUGGY]  archive.folders  =  new  Folder[nid];  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  Folder[nid];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  Folder[nid];	          if(nid    ==    SIGNATURE_HEADER_SIZE)    {    archive.folders    =    new    Folder[0];    }    	compilable	  [FE]  IOException  	109	12	replace
196	[BUG]  [BUGGY]  InputStream  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  InputStream  nid  =  header.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	InputStream  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    InputStream    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	95	None	replace
197	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  InputStream  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte();  InputStream  nid  =  header.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  header.readUnsignedByte();  InputStream  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    InputStream    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	95	None	replace
198	[BUG]  [BUGGY]  File  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  File  nid  =  header.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	File  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    InputStream    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	95	None	replace
199	[BUG]  [BUGGY]  [FE]  EOFException  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  NID.kUnpackInfo;  nid  =  NID.kSubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  EOFException  	36	12	replace
200	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo;  nid  =  NID.kSubStreamsInfo;  [FE]  EOFException  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo;  nid  =  NID.kSubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  EOFException  	36	12	replace
201	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  nid  =  NID.kSubStreamsInfo;  [CE]  cannot  find  symbol  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte();  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte();  nid  =  NID.kSubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
202	[BUG]  [BUGGY]  [FE]  EOFException  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo;  archive.folders  =  new  Folder[0];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  NID.kSubStreamsInfo;  archive.folders  =  new  Folder[0];	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  EOFException  	36	12	replace
203	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo;  archive.folders  =  new  Folder[0];  [FE]  EOFException  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo;  archive.folders  =  new  Folder[0];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo;  archive.folders  =  new  Folder[0];	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  EOFException  	36	12	replace
204	[BUG]  [BUGGY]  nid  =  NID.zSubStreamsInfo;  nid  =  NID.kSubStreamsInfo;  [CE]  cannot  find  symbol  zSubStreamsInfo  [FE]                  EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.zSubStreamsInfo;  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.zSubStreamsInfo;  nid  =  NID.kSubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    	non-compiled	[CE]  cannot  find  symbol  zSubStreamsInfo	36	None	replace
205	[BUG]  [BUGGY]  nid  =  NID.bytesInfo;  nid  =  NID.kSubStreamsInfo;  [CE]  cannot  find  symbol  bytesInfo  [FE]                    EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesInfo;  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesInfo;  nid  =  NID.kSubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    	non-compiled	[CE]  cannot  find  symbol  bytesInfo	36	None	replace
206	[BUG]  [BUGGY]  nid  =  archive.folders.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  archive.folders.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  archive.folders.readUnsignedByte();	  nid    =    archive.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
207	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(3);  [CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte(3);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte(3);	  nid    =    file.readUnsignedByte(1);    	non-compiled	[CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;	118	None	replace
208	[BUG]  [BUGGY]  file.folders  =  new  ArrayList  <  RandomAccessFile>(nid);  [CE]  cannot  find  symbol  folders  [FE]                  EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  file.folders  =  new  ArrayList  <  RandomAccessFile>(nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	file.folders  =  new  ArrayList  <  RandomAccessFile>(nid);	  nid    =    file.readUnsignedByte();    file.folders    =    new    ArrayList    <    RandomAccessFile>(nid);    	non-compiled	[CE]  cannot  find  symbol  folders	47	None	replace
209	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte();  file.folders  =  new  ArrayList  <  RandomAccessFile>(nid  +  1);  [CE]  cannot  find  symbol  folders  [FE]                    EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte();  file.folders  =  new  ArrayList  <  RandomAccessFile>(nid  +  1);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte();  file.folders  =  new  ArrayList  <  RandomAccessFile>(nid  +  1);	  nid    =    file.readUnsignedByte();    file.folders    =    new    ArrayList    <    RandomAccessFile>(nid);    	non-compiled	[CE]  cannot  find  symbol  folders	47	None	replace
210	[BUG]  [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  file.folders  =  new  ArrayList  <  RandomAccessFile>(nid);  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  file.folders  =  new  ArrayList  <  RandomAccessFile>(nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  currentFolderInputStream.readUnsignedByte();  file.folders  =  new  ArrayList  <  RandomAccessFile>(nid);	  nid    =    file.readUnsignedByte();    file.folders    =    new    ArrayList    <    RandomAccessFile>(nid);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
211	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  file.folders  =  new  ArrayList  <  RandomAccessFile>(nid);  [CE]  cannot  find  symbol  folders  [FE]                        EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  file.folders  =  new  ArrayList  <  RandomAccessFile>(nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte();  file.folders  =  new  ArrayList  <  RandomAccessFile>(nid);	  nid    =    file.readUnsignedByte();    file.folders    =    new    ArrayList    <    RandomAccessFile>(nid);    	non-compiled	[CE]  cannot  find  symbol  folders	47	None	replace
212	[BUG]  [BUGGY]  nid  =  inputStreamStack.readUnsignedByte();  file.folders  =  new  ArrayList  <  RandomAccessFile>(nid);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  inputStreamStack.readUnsignedByte();  file.folders  =  new  ArrayList  <  RandomAccessFile>(nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  inputStreamStack.readUnsignedByte();  file.folders  =  new  ArrayList  <  RandomAccessFile>(nid);	  nid    =    file.readUnsignedByte();    file.folders    =    new    ArrayList    <    RandomAccessFile>(nid);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	47	None	replace
213	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolderIndex,  nid,  0,  archive.folders,  nid);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                  EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolderIndex,  nid,  0,  archive.folders,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolderIndex,  nid,  0,  archive.folders,  nid);	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    System.arraycopy(currentFolderIndex,    nid,    0,    archive.folders);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	39	None	replace
214	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolderIndex,  nid,  0,  archive.folders);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                    EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolderIndex,  nid,  0,  archive.folders);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolderIndex,  nid,  0,  archive.folders);	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    System.arraycopy(currentFolderIndex,    nid,    0,    archive.folders);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	39	None	replace
215	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolderIndex,  nid,  0,  archive.folders,  signature);  [CE]  cannot  find  symbol  signature  [FE]                      EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolderIndex,  nid,  0,  archive.folders,  signature);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolderIndex,  nid,  0,  archive.folders,  signature);	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    System.arraycopy(currentFolderIndex,    nid,    0,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  signature	39	None	replace
216	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolderIndex,  nid,  1,  archive.folders);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                        EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolderIndex,  nid,  1,  archive.folders);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolderIndex,  nid,  1,  archive.folders);	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    System.arraycopy(currentFolderIndex,    nid,    0,    archive.folders);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	39	None	replace
217	[BUG]  [BUGGY]  nid  =  inputStreamStack.readUnsignedByte(currentFolderIndex);  [CE]  cannot  find  symbol  inputStreamStack  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  inputStreamStack.readUnsignedByte(currentFolderIndex);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  inputStreamStack.readUnsignedByte(currentFolderIndex);	  nid    =    header.readUnsignedByte(currentFolderIndex);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	79	None	replace
218	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  currentFolderIndex);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  currentFolderIndex);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(nid,  currentFolderIndex);	  nid    =    header.readUnsignedByte(currentFolderIndex);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	79	None	replace
219	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  SIGNATURE_HEADER_SIZE);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  SIGNATURE_HEADER_SIZE);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(currentFolderIndex,  SIGNATURE_HEADER_SIZE);	  nid    =    header.readUnsignedByte(currentFolderIndex);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	79	None	replace
220	[BUG]  [BUGGY]  nid  =  currentFolderIndex.readUnsignedByte(header);  [CE]  int  cannot  be  dereferenced  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderIndex.readUnsignedByte(header);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  currentFolderIndex.readUnsignedByte(header);	  nid    =    header.readUnsignedByte(currentFolderIndex);    	non-compiled	[CE]  int  cannot  be  dereferenced	79	None	replace
221	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  nid);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(currentFolderIndex,  nid);	  nid    =    header.readUnsignedByte(currentFolderIndex);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	79	None	replace
222	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  NID.kPackInfo);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  NID.kPackInfo);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(currentFolderIndex,  NID.kPackInfo);	  nid    =    header.readUnsignedByte(currentFolderIndex);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	79	None	replace
223	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  NID.kUnpackInfo);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  NID.kUnpackInfo);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(currentFolderIndex,  NID.kUnpackInfo);	  nid    =    header.readUnsignedByte(currentFolderIndex);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	79	None	replace
224	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    file.readUnsignedByte();    ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        file.readUnsignedByte();        ((    RandomAccessFile)file).readUnsignedByte();    nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();	  	compilable	  [FE]  EOFException  	123	12	add
225	[BUG]  [BUGGY]  nid    =    file.readUnsignedByte();    ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    file.readUnsignedByte();    ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        file.readUnsignedByte();        ((    RandomAccessFile)file).readUnsignedByte();    nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();	  	compilable	  [FE]  EOFException  	123	12	add
226	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    file.readUnsignedByte();    ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        file.readUnsignedByte();        ((    RandomAccessFile)file).readUnsignedByte();    nid    =    file.readUnsignedByte();    ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();	  	compilable	  [FE]  EOFException  	123	12	add
227	[BUG]  [BUGGY]  nid    =    file.readUnsignedByte();    ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    file.readUnsignedByte();    ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        file.readUnsignedByte();        ((    RandomAccessFile)file).readUnsignedByte();    nid    =    file.readUnsignedByte();    ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();	  	compilable	  [FE]  EOFException  	123	12	add
228	[BUG]  [BUGGY]  nid    =    file.readUnsignedByte();    ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  int  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    file.readUnsignedByte();    ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  int  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        file.readUnsignedByte();        ((    RandomAccessFile)file).readUnsignedByte();    nid    =    file.readUnsignedByte();    int  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	123	None	add
229	[BUG]  [BUGGY]  nid    =    file.readUnsignedByte();    ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  Integer  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    file.readUnsignedByte();    ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  Integer  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        file.readUnsignedByte();        ((    RandomAccessFile)file).readUnsignedByte();    nid    =    file.readUnsignedByte();    Integer  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	123	None	add
230	[BUG]  [BUGGY]  [FE]  EOFException  [FE]            EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    file.readUnsignedByte();    ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        file.readUnsignedByte();        ((    RandomAccessFile)file).readUnsignedByte();    nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();	  	compilable	  [FE]  EOFException  	123	12	add
231	[BUG]  [BUGGY]  nid    =    file.readUnsignedByte();    ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  [FE]  EOFException  [FE]            EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    file.readUnsignedByte();    ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        file.readUnsignedByte();        ((    RandomAccessFile)file).readUnsignedByte();    nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();	  	compilable	  [FE]  EOFException  	123	12	add
232	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	139	12	add
233	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	139	12	add
234	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  int  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  int  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    int  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	139	None	add
235	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  nid  =  NID.kSubStreamsInfo;  if(nid!=  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    nid  =  NID.kSubStreamsInfo;  if(nid!=  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	139	12	add
236	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  nid  =  NID.kSubStreamsInfo;  if(nid!=  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  nid  =  NID.kSubStreamsInfo;  if(nid!=  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    nid  =  NID.kSubStreamsInfo;  if(nid!=  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	139	12	add
237	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  InputStream  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  InputStream  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    InputStream  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	139	None	add
238	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  DataInput  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  DataInput  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    DataInput  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	139	None	add
239	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  [CE]  illegal  start  of  expression  [FE]              java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;	  	non-compiled	[CE]  illegal  start  of  expression	139	None	add
240	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  header.readUnsignedByte();  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    nid    =    file.readUnsignedByte();    	compilable	  [FE]  EOFException  	42	12	replace
241	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  file.readUnsignedByte();  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte();  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    nid    =    file.readUnsignedByte();    	compilable	  [FE]  EOFException  	42	12	replace
242	[BUG]  [BUGGY]  nid  =  source.readUnsignedByte();  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  source  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  source.readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  source.readUnsignedByte();  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  source	42	None	replace
243	[BUG]  [BUGGY]  nid  =  file.readUnsignedInt();  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedInt();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedInt();  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
244	[BUG]  [BUGGY]  nid  =  currentFolderIndex.readUnsignedByte();  nid  =  header.readUnsignedByte();  [CE]  int  cannot  be  dereferenced  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderIndex.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  currentFolderIndex.readUnsignedByte();  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    System.arraycopy(currentFolder,    0,    nid,    currentFolderIndex);    	non-compiled	[CE]  int  cannot  be  dereferenced	63	None	replace
245	[BUG]  [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.getInputStream(nid);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.getInputStream(nid);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.getInputStream(nid);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.getInputStream(nid);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
246	[BUG]  [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.getInputStream(nid);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.getInputStream(nid);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.getInputStream(nid);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.getInputStream(nid);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
247	[BUG]  [BUGGY]  InputStream  file  =  currentFolderInputStream.getInputStream(nid);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  InputStream  file  =  currentFolderInputStream.getInputStream(nid);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	InputStream  file  =  currentFolderInputStream.getInputStream(nid);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.getInputStream(nid);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
248	[BUG]  [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.getInputStream(nid);  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.getInputStream(nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.getInputStream(nid);	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.getInputStream(nid);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
249	[BUG]  [BUGGY]  nid  =  NID.KUnPackInfo.readUnsignedByte();  [CE]  cannot  find  symbol  KUnPackInfo  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.KUnPackInfo.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.KUnPackInfo.readUnsignedByte();	  nid    =    NID.KUnpackInfo.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  KUnPackInfo	76	None	replace
250	[BUG]  [BUGGY]  nid  =  NID.kPackInfo.readUnsignedByte();  [CE]  int  cannot  be  dereferenced  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kPackInfo.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kPackInfo.readUnsignedByte();	  nid    =    NID.KUnpackInfo.readUnsignedByte();    	non-compiled	[CE]  int  cannot  be  dereferenced	76	None	replace
251	[BUG]  [BUGGY]  nid  =  UID.KUnpackInfo.readUnsignedByte();  [CE]  package  UID  does  not  exist  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  UID.KUnpackInfo.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  UID.KUnpackInfo.readUnsignedByte();	  nid    =    NID.KUnpackInfo.readUnsignedByte();    	non-compiled	[CE]  package  UID  does  not  exist	76	None	replace
252	[BUG]  [BUGGY]  nid  =  archive.KUnpackInfo.readUnsignedByte();  [CE]  cannot  find  symbol  KUnpackInfo  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  archive.KUnpackInfo.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  archive.KUnpackInfo.readUnsignedByte();	  nid    =    NID.KUnpackInfo.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  KUnpackInfo	76	None	replace
253	[BUG]  [BUGGY]  nid  =  NID.byteArrayInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  cannot  find  symbol  byteArrayInfo  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.byteArrayInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.byteArrayInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol  byteArrayInfo	157	None	replace
254	[BUG]  [BUGGY]  nid  =  NID.readUnpackInfo();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  cannot  find  symbol  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnpackInfo();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnpackInfo();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
255	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kFolderInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  cannot  find  symbol  kFolderInfo  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kFolderInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kFolderInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol  kFolderInfo	157	None	replace
256	[BUG]  [BUGGY]  nid  =  NID.byteArrayInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [CE]  cannot  find  symbol  byteArrayInfo  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.byteArrayInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.byteArrayInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol  byteArrayInfo	157	None	replace
257	[BUG]  [BUGGY]  nid  =  NID.readUnpackInfo();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [CE]  cannot  find  symbol  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnpackInfo();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnpackInfo();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
258	[BUG]  [BUGGY]  nid  =  NID.byteArrayInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[  [CE]  illegal  start  of  expression  [FE]              java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.byteArrayInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.byteArrayInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
259	[BUG]  [BUGGY]  nid  =  inputStreamStack.readUnsignedByte();  [CE]  cannot  find  symbol  inputStreamStack  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  inputStreamStack.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  inputStreamStack.readUnsignedByte();	  nid    =    nid.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	130	None	replace
260	[BUG]  [BUGGY]  nid  =  archive.folders.readUnsignedInt();  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  archive.folders.readUnsignedInt();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  archive.folders.readUnsignedInt();	  nid    =    archive.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
261	[BUG]  [BUGGY]  nid  =  source.readUnsignedInt();  [CE]  cannot  find  symbol  source  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  source.readUnsignedInt();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  source.readUnsignedInt();	  nid    =    archive.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol  source	72	None	replace
262	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          archive.folders  =  new  Folder[1];  archive.folders  =  new  Folder[1];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	                archive.folders    =    new    Folder[1];    archive.folders  =  new  Folder[1];	  	compilable	  [FE]  NullPointerException  	110	12	add
263	[BUG]  [BUGGY]          archive.folders  =  new  Folder[1];  archive.folders  =  new  Folder[1];  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          archive.folders  =  new  Folder[1];  archive.folders  =  new  Folder[1];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	                archive.folders    =    new    Folder[1];    archive.folders  =  new  Folder[1];	  	compilable	  [FE]  NullPointerException  	110	12	add
264	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          archive.folders  =  new  Folder[1];  archive.folders  =  new  Folder[2];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	                archive.folders    =    new    Folder[1];    archive.folders  =  new  Folder[2];	  	compilable	  [FE]  NullPointerException  	110	12	add
265	[BUG]  [BUGGY]          archive.folders  =  new  Folder[1];  archive.folders  =  new  Folder[2];  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          archive.folders  =  new  Folder[1];  archive.folders  =  new  Folder[2];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	                archive.folders    =    new    Folder[1];    archive.folders  =  new  Folder[2];	  	compilable	  [FE]  NullPointerException  	110	12	add
266	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          archive.folders  =  new  Folder[1];  archive.folders  =  new  Folder[3];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	                archive.folders    =    new    Folder[1];    archive.folders  =  new  Folder[3];	  	compilable	  [FE]  NullPointerException  	110	12	add
267	[BUG]  [BUGGY]          archive.folders  =  new  Folder[1];  archive.folders  =  new  Folder[3];  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          archive.folders  =  new  Folder[1];  archive.folders  =  new  Folder[3];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	                archive.folders    =    new    Folder[1];    archive.folders  =  new  Folder[3];	  	compilable	  [FE]  NullPointerException  	110	12	add
268	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          archive.folders  =  new  Folder[1];  archive.folders  =  new  Folder[0];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	                archive.folders    =    new    Folder[1];    archive.folders  =  new  Folder[0];	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	110	12	add
269	[BUG]  [BUGGY]          archive.folders  =  new  Folder[1];  archive.folders  =  new  Folder[0];  [FE]  ArrayIndexOutOfBoundsException  [FE]          NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          archive.folders  =  new  Folder[1];  archive.folders  =  new  Folder[0];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	                archive.folders    =    new    Folder[1];    archive.folders  =  new  Folder[0];	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	110	12	add
270	[BUG]  [BUGGY]          archive.folders  =  new  Folder[1];  Archive  archive.folders  =  new  Folder[1];  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          archive.folders  =  new  Folder[1];  Archive  archive.folders  =  new  Folder[1];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	                archive.folders    =    new    Folder[1];    Archive  archive.folders  =  new  Folder[1];	  	non-compiled	[CE]  ';'  expected	110	None	add
271	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          archive.folders  =  new  Folder[1];  archive.folders  =  new  Folder[4];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	                archive.folders    =    new    Folder[1];    archive.folders  =  new  Folder[4];	  	compilable	  [FE]  NullPointerException  	110	12	add
272	[BUG]  [BUGGY]          archive.folders  =  new  Folder[1];  archive.folders  =  new  Folder[4];  [FE]  NullPointerException  [FE]              NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          archive.folders  =  new  Folder[1];  archive.folders  =  new  Folder[4];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	                archive.folders    =    new    Folder[1];    archive.folders  =  new  Folder[4];	  	compilable	  [FE]  NullPointerException  	110	12	add
273	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          archive.folders  =  new  Folder[1];  archive.folders  =  new  Folder[5];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	                archive.folders    =    new    Folder[1];    archive.folders  =  new  Folder[5];	  	compilable	  [FE]  NullPointerException  	110	12	add
274	[BUG]  [BUGGY]          archive.folders  =  new  Folder[1];  archive.folders  =  new  Folder[5];  [FE]  NullPointerException  [FE]                NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          archive.folders  =  new  Folder[1];  archive.folders  =  new  Folder[5];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	                archive.folders    =    new    Folder[1];    archive.folders  =  new  Folder[5];	  	compilable	  [FE]  NullPointerException  	110	12	add
275	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(fileName,  NID.kUnpackInfo);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(fileName,  NID.kUnpackInfo);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(fileName,  NID.kUnpackInfo);	  nid    =    header.readUnsignedByte(fileName,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	106	None	replace
276	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(NID.kUnpackInfo,  fileName,  nid);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(NID.kUnpackInfo,  fileName,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(NID.kUnpackInfo,  fileName,  nid);	  nid    =    header.readUnsignedByte(fileName,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	106	None	replace
277	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(header,  fileName);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(header,  fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(header,  fileName);	  nid    =    header.readUnsignedByte(fileName,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	106	None	replace
278	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  fileName,  nid);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  fileName,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(inputStreamStack,  fileName,  nid);	  nid    =    header.readUnsignedByte(fileName,    nid);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	106	None	replace
279	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(fileName,  archive.folders);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(fileName,  archive.folders);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(fileName,  archive.folders);	  nid    =    header.readUnsignedByte(fileName,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	106	None	replace
280	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    	compilable	  [FE]  IOException  	25	12	replace
281	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [FE]  IOException  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    	compilable	  [FE]  IOException  	25	12	replace
282	[BUG]  [BUGGY]  [FE]  IOException  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    	compilable	  [FE]  IOException  	25	12	replace
283	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [FE]  IOException  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    	compilable	  [FE]  IOException  	25	12	replace
284	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kSubStreamsInfo;  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        nid    =    SIGNATURE_HEADER_SIZE;    nid  =  NID.kSubStreamsInfo;  nid  =  SIGNATURE_HEADER_SIZE;	  	compilable	  [FE]  NoClassDefFoundError  	81	12	add
285	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kSubStreamsInfo;  nid  =  SIGNATURE_HEADER_SIZE;  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kSubStreamsInfo;  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        nid    =    SIGNATURE_HEADER_SIZE;    nid  =  NID.kSubStreamsInfo;  nid  =  SIGNATURE_HEADER_SIZE;	  	compilable	  [FE]  NoClassDefFoundError  	81	12	add
286	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  SIGNATURE_HEADER_SIZE;  int  nid  =  NID.kSubStreamsInfo;  nid  =  SIGNATURE_HEADER_SIZE;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  SIGNATURE_HEADER_SIZE;  int  nid  =  NID.kSubStreamsInfo;  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        nid    =    SIGNATURE_HEADER_SIZE;    int  nid  =  NID.kSubStreamsInfo;  nid  =  SIGNATURE_HEADER_SIZE;	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	81	None	add
287	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  SIGNATURE_HEADER_SIZE;  nid  =  SIGNATURE_HEADER_SIZE;  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        nid    =    SIGNATURE_HEADER_SIZE;    nid  =  SIGNATURE_HEADER_SIZE;  nid  =  SIGNATURE_HEADER_SIZE;	  	compilable	  [FE]  NoClassDefFoundError  	81	12	add
288	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  SIGNATURE_HEADER_SIZE;  nid  =  SIGNATURE_HEADER_SIZE;  nid  =  SIGNATURE_HEADER_SIZE;  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  SIGNATURE_HEADER_SIZE;  nid  =  SIGNATURE_HEADER_SIZE;  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        nid    =    SIGNATURE_HEADER_SIZE;    nid  =  SIGNATURE_HEADER_SIZE;  nid  =  SIGNATURE_HEADER_SIZE;	  	compilable	  [FE]  NoClassDefFoundError  	81	12	add
289	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kSubStreamsInfo;  nid  =  SIGNATURE_HEAFDER_SIZE;  [CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kSubStreamsInfo;  nid  =  SIGNATURE_HEAFDER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        nid    =    SIGNATURE_HEADER_SIZE;    nid  =  NID.kSubStreamsInfo;  nid  =  SIGNATURE_HEAFDER_SIZE;	  	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE	81	None	add
290	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  SIGNATURE_HEADER_SIZE;  Integer  nid  =  NID.kSubStreamsInfo;  nid  =  SIGNATURE_HEADER_SIZE;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  SIGNATURE_HEADER_SIZE;  Integer  nid  =  NID.kSubStreamsInfo;  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        nid    =    SIGNATURE_HEADER_SIZE;    Integer  nid  =  NID.kSubStreamsInfo;  nid  =  SIGNATURE_HEADER_SIZE;	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	81	None	add
291	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  SIGNATURE_HEADER_SIZE;  InputStream  nid  =  NID.kSubStreamsInfo;  nid  =  SIGNATURE_HEADER_SIZE;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  SIGNATURE_HEADER_SIZE;  InputStream  nid  =  NID.kSubStreamsInfo;  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        nid    =    SIGNATURE_HEADER_SIZE;    InputStream  nid  =  NID.kSubStreamsInfo;  nid  =  SIGNATURE_HEADER_SIZE;	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	81	None	add
292	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  SIGNATURE_HEADER_SIZE;  NID.kSubStreamsInfo;  nid  =  SIGNATURE_HEADER_SIZE;  [CE]  not  a  statement  [FE]                NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  SIGNATURE_HEADER_SIZE;  NID.kSubStreamsInfo;  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        nid    =    SIGNATURE_HEADER_SIZE;    NID.kSubStreamsInfo;  nid  =  SIGNATURE_HEADER_SIZE;	  	non-compiled	[CE]  not  a  statement	81	None	add
293	[BUG]  [BUGGY]  int  nid  =  NID.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  NID.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  NID.readUnsignedByte();	          int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	11	None	replace
294	[BUG]  [BUGGY]  int  nid  =  archive.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  archive.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  archive.readUnsignedByte();	          int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	11	None	replace
295	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  header.readUnsignedByte()  +  1;	          int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	11	None	replace
296	[BUG]  [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.getInputStream();  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.getInputStream();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.getInputStream();  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.getInputStream();    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
297	[BUG]  [BUGGY]  InputStream  file  =  currentFolderInputStream.getInputStream();  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  InputStream  file  =  currentFolderInputStream.getInputStream();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	InputStream  file  =  currentFolderInputStream.getInputStream();  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.getInputStream();    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
298	[BUG]  [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.getInputStream();  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.getInputStream();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.getInputStream();  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.getInputStream();    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
299	[BUG]  [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  cannot  find  symbol  bytesInfo  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol  bytesInfo	150	None	replace
300	[BUG]  [BUGGY]  nid  =  NID.deferredBlockStreams;  if(nid  ==  NID.deferredBlockStreams)  {  nid  =  NID.deferredBlockStreams;  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  cannot  find  symbol  deferredBlockStreams  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.deferredBlockStreams;  if(nid  ==  NID.deferredBlockStreams)  {  nid  =  NID.deferredBlockStreams;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.deferredBlockStreams;  if(nid  ==  NID.deferredBlockStreams)  {  nid  =  NID.deferredBlockStreams;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol  deferredBlockStreams	150	None	replace
301	[BUG]  [BUGGY]  nid  =  NID.subStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  cannot  find  symbol  subStreamsInfo  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.subStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.subStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol  subStreamsInfo	150	None	replace
302	[BUG]  [BUGGY]  nid  =  NID.deferredBlockStreams;  if(nid  ==  NID.deferredBlockStreams)  {  nid  =  NID.deferredBlockStreams;  }  [CE]  cannot  find  symbol  deferredBlockStreams  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.deferredBlockStreams;  if(nid  ==  NID.deferredBlockStreams)  {  nid  =  NID.deferredBlockStreams;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.deferredBlockStreams;  if(nid  ==  NID.deferredBlockStreams)  {  nid  =  NID.deferredBlockStreams;  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol  deferredBlockStreams	150	None	replace
303	[BUG]  [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [CE]  cannot  find  symbol  bytesInfo  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol  bytesInfo	150	None	replace
304	[BUG]  [BUGGY]  nid  =  NID.deferredBlockStreams;  if(nid  ==  NID.deferredBlockStreams)  {  nid  =  NID.deferredBlockInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  cannot  find  symbol  deferredBlockStreams  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.deferredBlockStreams;  if(nid  ==  NID.deferredBlockStreams)  {  nid  =  NID.deferredBlockInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.deferredBlockStreams;  if(nid  ==  NID.deferredBlockStreams)  {  nid  =  NID.deferredBlockInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol  deferredBlockStreams	150	None	replace
305	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  EOFException  	141	12	add
306	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  EOFException  	141	12	add
307	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[  [CE]  ']'  expected  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[	  	non-compiled	[CE]  ']'  expected	141	None	add
308	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  EOFException  	141	12	add
309	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  EOFException  	141	12	add
310	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Fold  [CE]  '('  or  '['  expected  [FE]          EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Fold  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Fold	  	non-compiled	[CE]  '('  or  '['  expected	141	None	add
311	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  [CE]  'else'  without  'if'  [FE]            EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];	  	non-compiled	[CE]  'else'  without  'if'	141	None	add
312	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  [CE]  illegal  start  of  expression  [FE]              EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;	  	non-compiled	[CE]  illegal  start  of  expression	141	None	add
313	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  int  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Fold  [CE]  '('  or  '['  expected  [FE]                EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  int  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Fold  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    int  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Fold	  	non-compiled	[CE]  '('  or  '['  expected	141	None	add
314	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0]  [CE]  ';'  expected  [FE]                  EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0]  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0]	  	non-compiled	[CE]  ';'  expected	141	None	add
315	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>[0];  [CE]  generic  array  creation  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>[0];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList  <  Folder>[0];	          archive.folders    =    new    Folder[0];    	non-compiled	[CE]  generic  array  creation	13	None	replace
316	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList();  [CE]  incompatible  types  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList();	          archive.folders    =    new    Folder[0];    	non-compiled	[CE]  incompatible  types	13	None	replace
317	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          archive.folders  =  new  Folder[0];  archive.folders  =  new  Folder[0];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	                archive.folders    =    new    Folder[0];    archive.folders  =  new  Folder[0];	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	12	add
318	[BUG]  [BUGGY]          archive.folders  =  new  Folder[0];  archive.folders  =  new  Folder[0];  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          archive.folders  =  new  Folder[0];  archive.folders  =  new  Folder[0];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	                archive.folders    =    new    Folder[0];    archive.folders  =  new  Folder[0];	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	12	add
319	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          archive.folders  =  new  Folder[0];  archive.folders  =  new  Folder[1];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	                archive.folders    =    new    Folder[0];    archive.folders  =  new  Folder[1];	  	compilable	  [FE]  NullPointerException  	12	12	add
320	[BUG]  [BUGGY]          archive.folders  =  new  Folder[0];  archive.folders  =  new  Folder[1];  [FE]  NullPointerException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          archive.folders  =  new  Folder[0];  archive.folders  =  new  Folder[1];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	                archive.folders    =    new    Folder[0];    archive.folders  =  new  Folder[1];	  	compilable	  [FE]  NullPointerException  	12	12	add
321	[BUG]  [BUGGY]          archive.folders  =  new  Folder[0];  Archive  archive.folders  =  new  Folder[0];  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          archive.folders  =  new  Folder[0];  Archive  archive.folders  =  new  Folder[0];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	                archive.folders    =    new    Folder[0];    Archive  archive.folders  =  new  Folder[0];	  	non-compiled	[CE]  ';'  expected	12	None	add
322	[BUG]  [BUGGY]          archive.folders  =  new  Folder[0];  Archives  archive.folders  =  new  Folder[0];  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          archive.folders  =  new  Folder[0];  Archives  archive.folders  =  new  Folder[0];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	                archive.folders    =    new    Folder[0];    Archives  archive.folders  =  new  Folder[0];	  	non-compiled	[CE]  ';'  expected	12	None	add
323	[BUG]  [BUGGY]          archive.folders  =  new  Folder[0];  archives  =  new  Folder[0];  [CE]  cannot  find  symbol  archives  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          archive.folders  =  new  Folder[0];  archives  =  new  Folder[0];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	                archive.folders    =    new    Folder[0];    archives  =  new  Folder[0];	  	non-compiled	[CE]  cannot  find  symbol  archives	12	None	add
324	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          archive.folders  =  new  Folder[0];  archive.folders  =  new  Folder[2];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	                archive.folders    =    new    Folder[0];    archive.folders  =  new  Folder[2];	  	compilable	  [FE]  NullPointerException  	12	12	add
325	[BUG]  [BUGGY]          archive.folders  =  new  Folder[0];  archive.folders  =  new  Folder[2];  [FE]  NullPointerException  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          archive.folders  =  new  Folder[0];  archive.folders  =  new  Folder[2];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	                archive.folders    =    new    Folder[0];    archive.folders  =  new  Folder[2];	  	compilable	  [FE]  NullPointerException  	12	12	add
326	[BUG]  [BUGGY]          archive.folders  =  new  Folder[0];  Archives.folders  =  new  Folder[0];  [CE]  cannot  find  symbol  Archives  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          archive.folders  =  new  Folder[0];  Archives.folders  =  new  Folder[0];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	                archive.folders    =    new    Folder[0];    Archives.folders  =  new  Folder[0];	  	non-compiled	[CE]  cannot  find  symbol  Archives	12	None	add
327	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  -1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  -1;	  nid    =    0;    	compilable	  [FE]  IOException  	132	12	replace
328	[BUG]  [BUGGY]  nid  =  -1;  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  -1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  -1;	  nid    =    0;    	compilable	  [FE]  IOException  	132	12	replace
329	[BUG]  [BUGGY]  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  SIGNATURE_HEADER_SIZE;	  nid    =    0;    	compilable	  [FE]  IOException  	132	12	replace
330	[BUG]  [BUGGY]  nid  =  SIGNATURE_HEADER_SIZE;  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  SIGNATURE_HEADER_SIZE;	  nid    =    0;    	compilable	  [FE]  IOException  	132	12	replace
331	[BUG]  [BUGGY]  [FE]  IOException  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  1;	  nid    =    0;    	compilable	  [FE]  IOException  	132	12	replace
332	[BUG]  [BUGGY]  nid  =  1;  [FE]  IOException  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  1;	  nid    =    0;    	compilable	  [FE]  IOException  	132	12	replace
333	[BUG]  [BUGGY]  nid  =  JsonStringEncoder.getInstance().encodeAsStream(fileName);  [CE]  cannot  find  symbol  JsonStringEncoder  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  JsonStringEncoder.getInstance().encodeAsStream(fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  JsonStringEncoder.getInstance().encodeAsStream(fileName);	  nid    =    0;    	non-compiled	[CE]  cannot  find  symbol  JsonStringEncoder	132	None	replace
334	[BUG]  [BUGGY]  nid  =  JsonStringEncoder.getInstance().encodeJsonString(fileName);  [CE]  cannot  find  symbol  JsonStringEncoder  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  JsonStringEncoder.getInstance().encodeJsonString(fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  JsonStringEncoder.getInstance().encodeJsonString(fileName);	  nid    =    0;    	non-compiled	[CE]  cannot  find  symbol  JsonStringEncoder	132	None	replace
335	[BUG]  [BUGGY]  int  nid  =  file.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    int    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	44	None	replace
336	[BUG]  [BUGGY]  Integer  nid  =  file.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  Integer  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	Integer  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    int    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	44	None	replace
337	[BUG]  [BUGGY]  nid  =  header.readUnpackInfo();  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnpackInfo();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnpackInfo();	  nid    =    NID.readUnpackInfo();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
338	[BUG]  [BUGGY]  NID  nid  =  NID.readUnpackInfo();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID  nid  =  NID.readUnpackInfo();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID  nid  =  NID.readUnpackInfo();	  nid    =    NID.readUnpackInfo();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	67	None	replace
339	[BUG]  [BUGGY]  NID  nid  =  header.readUnpackInfo();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID  nid  =  header.readUnpackInfo();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID  nid  =  header.readUnpackInfo();	  nid    =    NID.readUnpackInfo();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	67	None	replace
340	[BUG]  [BUGGY]  nid  =  archive.bytesReadUnsignedByte();  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  archive.bytesReadUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  archive.bytesReadUnsignedByte();	  nid    =    archive.kUnpackInfo.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
341	[BUG]  [BUGGY]  ((  RandomAccessFile)nid).readUnpackInfo();  nid  =  NID.kUnpackInfo;  [CE]  inconvertible  types  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  ((  RandomAccessFile)nid).readUnpackInfo();  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	((  RandomAccessFile)nid).readUnpackInfo();  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    ((    RandomAccessFile)nid).readUnpackInfo();    nid    =    NID.kUnpackInfo;    	non-compiled	[CE]  inconvertible  types	22	None	replace
342	[BUG]  [BUGGY]  nid  =  (RandomAccessFile)nid.readUnpackInfo();  nid  =  NID.kUnpackInfo;  [CE]  int  cannot  be  dereferenced  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  (RandomAccessFile)nid.readUnpackInfo();  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  (RandomAccessFile)nid.readUnpackInfo();  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    ((    RandomAccessFile)nid).readUnpackInfo();    nid    =    NID.kUnpackInfo;    	non-compiled	[CE]  int  cannot  be  dereferenced	22	None	replace
343	[BUG]  [BUGGY]  nid  -=  NID.kUnpackInfo;  ((  RandomAccessFile)nid).readUnpackInfo();  nid  -=  NID.kUnpackInfo;  [CE]  inconvertible  types  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  -=  NID.kUnpackInfo;  ((  RandomAccessFile)nid).readUnpackInfo();  nid  -=  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  -=  NID.kUnpackInfo;  ((  RandomAccessFile)nid).readUnpackInfo();  nid  -=  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    ((    RandomAccessFile)nid).readUnpackInfo();    nid    =    NID.kUnpackInfo;    	non-compiled	[CE]  inconvertible  types	22	None	replace
344	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  SIGNATURE_HEADER_SIZE,  fileName);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  SIGNATURE_HEADER_SIZE,  fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(nid,  SIGNATURE_HEADER_SIZE,  fileName);	  nid    =    header.readUnsignedByte(nid,    fileName);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	7	None	replace
345	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  fileName,  archive.folders);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  fileName,  archive.folders);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(nid,  fileName,  archive.folders);	  nid    =    header.readUnsignedByte(nid,    fileName);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	7	None	replace
346	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  nid,  fileName);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  nid,  fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(inputStreamStack,  nid,  fileName);	  nid    =    header.readUnsignedByte(nid,    fileName);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	7	None	replace
347	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  ((  File)nid).readUnsignedByte();  [CE]  inconvertible  types  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  ((  File)nid).readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte();  ((  File)nid).readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    ((    File)nid).readUnsignedByte()    +    1;    	non-compiled	[CE]  inconvertible  types	134	None	replace
348	[BUG]  [BUGGY]  ((  File)nid).readUnsignedByte();  [CE]  inconvertible  types  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  ((  File)nid).readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	((  File)nid).readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    ((    File)nid).readUnsignedByte()    +    1;    	non-compiled	[CE]  inconvertible  types	134	None	replace
349	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  ((  File)nid).readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte();  ((  File)nid).readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  header.readUnsignedByte();  ((  File)nid).readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    ((    File)nid).readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	134	None	replace
350	[BUG]  [BUGGY]  NID.kUnpackInfo  =  header.readUnsignedByte();  ((  File)nid).readUnsignedByte();  [CE]  cannot  assign  a  value  to  final  variable  kUnpackInfo  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID.kUnpackInfo  =  header.readUnsignedByte();  ((  File)nid).readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID.kUnpackInfo  =  header.readUnsignedByte();  ((  File)nid).readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    ((    File)nid).readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  kUnpackInfo	134	None	replace
351	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolder,  0,  nid,  SIGNATURE_HEADER_SIZE);  [CE]  cannot  find  symbol  currentFolder  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolder,  0,  nid,  SIGNATURE_HEADER_SIZE);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolder,  0,  nid,  SIGNATURE_HEADER_SIZE);	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    System.arraycopy(currentFolder,    0,    nid,    currentFolderIndex);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	37	None	replace
352	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolder,  0,  nid,  currentFolderIndex);  [CE]  cannot  find  symbol  currentFolder  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolder,  0,  nid,  currentFolderIndex);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolder,  0,  nid,  currentFolderIndex);	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    System.arraycopy(currentFolder,    0,    nid,    currentFolderIndex);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	37	None	replace
353	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolder,  0,  nid,  fileName);  [CE]  cannot  find  symbol  currentFolder  [FE]                  EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolder,  0,  nid,  fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolder,  0,  nid,  fileName);	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    System.arraycopy(currentFolder,    0,    nid,    currentFolderIndex);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	37	None	replace
354	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolder,  0,  nid,  nextHeaderSize);  [CE]  cannot  find  symbol  currentFolder  [FE]                    EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolder,  0,  nid,  nextHeaderSize);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolder,  0,  nid,  nextHeaderSize);	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    System.arraycopy(currentFolder,    0,    nid,    currentFolderIndex);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	37	None	replace
355	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolder,  0,  nid,  firstPackStreamIndex);  [CE]  cannot  find  symbol  currentFolder  [FE]                      EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolder,  0,  nid,  firstPackStreamIndex);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolder,  0,  nid,  firstPackStreamIndex);	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    System.arraycopy(currentFolder,    0,    nid,    currentFolderIndex);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	37	None	replace
356	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	163	12	add
357	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	163	12	add
358	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  int  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  int  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    int  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	163	None	add
359	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  InputStream  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  InputStream  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    InputStream  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	163	None	add
360	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  nid  =  NID.kUnpackInfo;  if(nid!=  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    nid  =  NID.kUnpackInfo;  if(nid!=  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	163	12	add
361	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  nid  =  NID.kUnpackInfo;  if(nid!=  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  nid  =  NID.kUnpackInfo;  if(nid!=  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    nid  =  NID.kUnpackInfo;  if(nid!=  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	163	12	add
362	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  DataInput  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  DataInput  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    DataInput  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	163	None	add
363	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  NID  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  [CE]  cannot  find  symbol  NID  [FE]              java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  NID  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    NID  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }	  	non-compiled	[CE]  cannot  find  symbol  NID	163	None	add
364	[BUG]  [BUGGY]  nid  =  NID.subStreamsInfo.length;  nid  =  NID.kSubStreamsInfo.length;  [CE]  cannot  find  symbol  subStreamsInfo  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.subStreamsInfo.length;  nid  =  NID.kSubStreamsInfo.length;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.subStreamsInfo.length;  nid  =  NID.kSubStreamsInfo.length;	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    	non-compiled	[CE]  cannot  find  symbol  subStreamsInfo	34	None	replace
365	[BUG]  [BUGGY]  nid  =  NID.length;  nid  =  NID.length;  [CE]  cannot  find  symbol  length  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.length;  nid  =  NID.length;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.length;  nid  =  NID.length;	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    	non-compiled	[CE]  cannot  find  symbol  length	34	None	replace
366	[BUG]  [BUGGY]  nid  =  NID.subStreamsInfo(nid);  nid  =  NID.kSubStreamsInfo;  [CE]  cannot  find  symbol  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.subStreamsInfo(nid);  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.subStreamsInfo(nid);  nid  =  NID.kSubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
367	[BUG]  [BUGGY]  nid  =  NID.length;  nid  =  NID.kSubStreamsInfo;  [CE]  cannot  find  symbol  length  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.length;  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.length;  nid  =  NID.kSubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    	non-compiled	[CE]  cannot  find  symbol  length	34	None	replace
368	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo.length;  nid  =  NID.kSubStreamsInfo.length;  [CE]  int  cannot  be  dereferenced  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo.length;  nid  =  NID.kSubStreamsInfo.length;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo.length;  nid  =  NID.kSubStreamsInfo.length;	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    	non-compiled	[CE]  int  cannot  be  dereferenced	34	None	replace
369	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	156	12	add
370	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	156	12	add
371	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	156	12	add
372	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	156	12	add
373	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[  [CE]  ']'  expected  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[	  	non-compiled	[CE]  ']'  expected	156	None	add
374	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Fold  [CE]  '('  or  '['  expected  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Fold  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Fold	  	non-compiled	[CE]  '('  or  '['  expected	156	None	add
375	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  int  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  int  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    int  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	156	None	add
376	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  [CE]  'else'  without  'if'  [FE]              java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];	  	non-compiled	[CE]  'else'  without  'if'	156	None	add
377	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]                java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[2];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[2];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	156	12	add
378	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[2];  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]                java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[2];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[2];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	156	12	add
379	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(NID.kUnpackInfo,  header,  archive);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(NID.kUnpackInfo,  header,  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(NID.kUnpackInfo,  header,  archive);	  nid    =    header.readUnsignedByte(header,    archive);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	8	None	replace
380	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nID,  header,  archive);  [CE]  cannot  find  symbol  nID  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nID,  header,  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(nID,  header,  archive);	  nid    =    header.readUnsignedByte(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  nID	8	None	replace
381	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(header,  archive,  nid);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(header,  archive,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(header,  archive,  nid);	  nid    =    header.readUnsignedByte(header,    archive);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	8	None	replace
382	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(header,  archive);  [CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte(header,  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte(header,  archive);	  nid    =    header.readUnsignedByte(header,    archive);    	non-compiled	[CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;	8	None	replace
383	[BUG]  [BUGGY]  nid  =  reader.readUnsignedByte(header,  archive);  [CE]  cannot  find  symbol  reader  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  reader.readUnsignedByte(header,  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  reader.readUnsignedByte(header,  archive);	  nid    =    header.readUnsignedByte(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  reader	8	None	replace
384	[BUG]  [BUGGY]  NID  nid  =  NID.bytesUnpackInfo();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID  nid  =  NID.bytesUnpackInfo();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID  nid  =  NID.bytesUnpackInfo();	  nid    =    NID.bytesUnpackInfo();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	94	None	replace
385	[BUG]  [BUGGY]  int  nid  =  NID.bytesUnpackInfo();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  NID.bytesUnpackInfo();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  NID.bytesUnpackInfo();	  nid    =    NID.bytesUnpackInfo();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	94	None	replace
386	[BUG]  [BUGGY]  nid  =  NID.bytesUnpackInfo(nid);  [CE]  cannot  find  symbol  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesUnpackInfo(nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesUnpackInfo(nid);	  nid    =    NID.bytesUnpackInfo();    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
387	[BUG]  [BUGGY]  nid  =  NID.bytesUnpackInfo(header);  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesUnpackInfo(header);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesUnpackInfo(header);	  nid    =    NID.bytesUnpackInfo();    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
388	[BUG]  [BUGGY]  nid  =  UID.kUnpackInfo.readUnsignedByte()  +  1;  [CE]  package  UID  does  not  exist  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  UID.kUnpackInfo.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  UID.kUnpackInfo.readUnsignedByte()  +  1;	  nid    =    NID.kUnpackInfo.readUnsignedByte()    +    1;    	non-compiled	[CE]  package  UID  does  not  exist	127	None	replace
389	[BUG]  [BUGGY]  [FE]  IOException  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo;  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  NID.kSubStreamsInfo;  nid  =  NID.kUnpackInfo;	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.ksubStreamsInfo;    	compilable	  [FE]  IOException  	84	12	replace
390	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo;  nid  =  NID.kUnpackInfo;  [FE]  IOException  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo;  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo;  nid  =  NID.kUnpackInfo;	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.ksubStreamsInfo;    	compilable	  [FE]  IOException  	84	12	replace
391	[BUG]  [BUGGY]  nid  =  NID.kSubStreamInfo;  nid  =  NID.kUnpackInfo;  [CE]  cannot  find  symbol  kSubStreamInfo  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamInfo;  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamInfo;  nid  =  NID.kUnpackInfo;	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.ksubStreamsInfo;    	non-compiled	[CE]  cannot  find  symbol  kSubStreamInfo	84	None	replace
392	[BUG]  [BUGGY]  NID  nid  =  NID.kUnpackInfo(nid);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID  nid  =  NID.kUnpackInfo(nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID  nid  =  NID.kUnpackInfo(nid);	  NID    nid    =    NID.kUnpackInfo();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	49	None	replace
393	[BUG]  [BUGGY]  Integer  nid  =  NID.kUnpackInfo();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  Integer  nid  =  NID.kUnpackInfo();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	Integer  nid  =  NID.kUnpackInfo();	  NID    nid    =    NID.kUnpackInfo();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	49	None	replace
394	[BUG]  [BUGGY]  NID  nid  =  NID.kUnpackInfo(header);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID  nid  =  NID.kUnpackInfo(header);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID  nid  =  NID.kUnpackInfo(header);	  NID    nid    =    NID.kUnpackInfo();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	49	None	replace
395	[BUG]  [BUGGY]  NID  nid  =  NID.kUnpackInfo(fileName);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID  nid  =  NID.kUnpackInfo(fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID  nid  =  NID.kUnpackInfo(fileName);	  NID    nid    =    NID.kUnpackInfo();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	49	None	replace
396	[BUG]  [BUGGY]  int  nid  =  NID.readUnsignedInt();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  NID.readUnsignedInt();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  NID.readUnsignedInt();	  nid    =    NID.readUnsignedInt();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	71	None	replace
397	[BUG]  [BUGGY]  NID  nid  =  NID.readUnsignedInt();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID  nid  =  NID.readUnsignedInt();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID  nid  =  NID.readUnsignedInt();	  nid    =    NID.readUnsignedInt();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	71	None	replace
398	[BUG]  [BUGGY]  NID  nid  =  header.readUnsignedInt();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID  nid  =  header.readUnsignedInt();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID  nid  =  header.readUnsignedInt();	  nid    =    NID.readUnsignedInt();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	71	None	replace
399	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo(header,  archive.folders);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo(header,  archive.folders);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo(header,  archive.folders);	  nid    =    NID.kUnpackInfo(header);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
400	[BUG]  [BUGGY]  nid  =  header.kUnpackInfo(NID);  [CE]  cannot  find  symbol  NID  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.kUnpackInfo(NID);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.kUnpackInfo(NID);	  nid    =    NID.kUnpackInfo(header);    	non-compiled	[CE]  cannot  find  symbol  NID	51	None	replace
401	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo(header,  fileName);  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo(header,  fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo(header,  fileName);	  nid    =    NID.kUnpackInfo(header);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
402	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo(currentFolderIndex);  [CE]  cannot  find  symbol  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo(currentFolderIndex);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo(currentFolderIndex);	  nid    =    NID.kUnpackInfo(header);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
403	[BUG]  [BUGGY]  nid  =  NID.length;  nid  =  NID.kUnpackInfo;  [CE]  cannot  find  symbol  length  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.length;  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.length;  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    	non-compiled	[CE]  cannot  find  symbol  length	19	None	replace
404	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  nid  =  NID.kUnpackInfo  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  NID.kUnpackInfo  +  1;  nid  =  NID.kUnpackInfo  +  1;	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    	compilable	  [FE]  EOFException  	19	12	replace
405	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  nid  =  NID.kUnpackInfo  +  1;  [FE]  EOFException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  nid  =  NID.kUnpackInfo  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo  +  1;  nid  =  NID.kUnpackInfo  +  1;	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    	compilable	  [FE]  EOFException  	19	12	replace
406	[BUG]  [BUGGY]  [FE]  IOException  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  nid;  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    	compilable	  [FE]  IOException  	19	12	replace
407	[BUG]  [BUGGY]  nid  =  nid;  nid  =  NID.kUnpackInfo;  [FE]  IOException  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  nid;  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    	compilable	  [FE]  IOException  	19	12	replace
408	[BUG]  [BUGGY]  [FE]  EOFException  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo  +  1;	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    	compilable	  [FE]  EOFException  	19	12	replace
409	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo  +  1;  [FE]  EOFException  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo  +  1;	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    	compilable	  [FE]  EOFException  	19	12	replace
410	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedInt()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedInt()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  header.readUnsignedInt()  +  1;	  nid    =    header.readUnsignedInt()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	100	None	replace
411	[BUG]  [BUGGY]  nid  =  header.readUnsignedInt()  +  2;  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedInt()  +  2;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedInt()  +  2;	  nid    =    header.readUnsignedInt()    +    1;    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
412	[BUG]  [BUGGY]  nid  =  header,  archive.readUnsignedInt()  +  1;  [CE]  ';'  expected  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header,  archive.readUnsignedInt()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header,  archive.readUnsignedInt()  +  1;	  nid    =    header.readUnsignedInt()    +    1;    	non-compiled	[CE]  ';'  expected	100	None	replace
413	[BUG]  [BUGGY]  nid  =  NID.bytesUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [CE]  cannot  find  symbol  bytesUnpackInfo  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  cannot  find  symbol  bytesUnpackInfo	162	None	replace
414	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kFolderInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [CE]  cannot  find  symbol  kFolderInfo  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kFolderInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kFolderInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  cannot  find  symbol  kFolderInfo	162	None	replace
415	[BUG]  [BUGGY]  nid  =  NID.bytesUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  cannot  find  symbol  bytesUnpackInfo  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  cannot  find  symbol  bytesUnpackInfo	162	None	replace
416	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	154	12	add
417	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	154	12	add
418	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	154	12	add
419	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	154	12	add
420	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  int  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  int  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    int  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	154	None	add
421	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[  [CE]  ']'  expected  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[	  	non-compiled	[CE]  ']'  expected	154	None	add
422	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  DataInput  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  DataInput  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    DataInput  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	154	None	add
423	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]              java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[2];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[2];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	154	12	add
424	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[2];  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]              java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[2];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[2];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	154	12	add
425	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  InputStream  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  InputStream  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    InputStream  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	154	None	add
426	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  Integer  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	Integer  nid  =  header.readUnsignedByte()  +  1;	  nid    =    header.readUnsignedByte()    +    1;    Integer    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	96	None	replace
427	[BUG]  [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [CE]  cannot  find  symbol  bytesInfo  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  cannot  find  symbol  bytesInfo	148	None	replace
428	[BUG]  [BUGGY]  nid  =  NID.byteArrayInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [CE]  cannot  find  symbol  byteArrayInfo  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.byteArrayInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.byteArrayInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  cannot  find  symbol  byteArrayInfo	148	None	replace
429	[BUG]  [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  cannot  find  symbol  bytesInfo  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  cannot  find  symbol  bytesInfo	148	None	replace
430	[BUG]  [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[2];  }  [CE]  cannot  find  symbol  bytesInfo  [FE]          EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[2];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[2];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  cannot  find  symbol  bytesInfo	148	None	replace
431	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Fold  [CE]  '('  or  '['  expected  [FE]            EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Fold  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Fold	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  '('  or  '['  expected	148	None	replace
432	[BUG]  [BUGGY]  nid  =  NID.byteArrayInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  cannot  find  symbol  byteArrayInfo  [FE]              EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.byteArrayInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.byteArrayInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  cannot  find  symbol  byteArrayInfo	148	None	replace
433	[BUG]  [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1  [CE]  ']'  expected  [FE]                EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  ']'  expected	148	None	replace
434	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	143	12	add
435	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	143	12	add
436	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[  [CE]  ']'  expected  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[	  	non-compiled	[CE]  ']'  expected	143	None	add
437	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	143	12	add
438	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	143	12	add
439	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Fold  [CE]  '('  or  '['  expected  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Fold  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Fold	  	non-compiled	[CE]  '('  or  '['  expected	143	None	add
440	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  [CE]  'else'  without  'if'  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];	  	non-compiled	[CE]  'else'  without  'if'	143	None	add
441	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  [CE]  illegal  start  of  expression  [FE]              java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;	  	non-compiled	[CE]  illegal  start  of  expression	143	None	add
442	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  int  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Fold  [CE]  '('  or  '['  expected  [FE]                java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  int  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Fold  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    int  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Fold	  	non-compiled	[CE]  '('  or  '['  expected	143	None	add
443	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  int  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                  java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  int  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    int  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	143	None	add
444	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid  +  7);  [CE]  incompatible  types  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid  +  7);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList  <  Folder>(nid  +  7);	          archive.folders    =    new    ArrayList    <    Folder>(nid    +    7ZSignature);    	non-compiled	[CE]  incompatible  types	15	None	replace
445	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid  +  2);  [CE]  incompatible  types  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid  +  2);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList  <  Folder>(nid  +  2);	          archive.folders    =    new    ArrayList    <    Folder>(nid    +    7ZSignature);    	non-compiled	[CE]  incompatible  types	15	None	replace
446	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid  +  6);  [CE]  incompatible  types  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid  +  6);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList  <  Folder>(nid  +  6);	          archive.folders    =    new    ArrayList    <    Folder>(nid    +    7ZSignature);    	non-compiled	[CE]  incompatible  types	15	None	replace
447	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid  +  3);  [CE]  incompatible  types  [FE]                        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid  +  3);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList  <  Folder>(nid  +  3);	          archive.folders    =    new    ArrayList    <    Folder>(nid    +    7ZSignature);    	non-compiled	[CE]  incompatible  types	15	None	replace
448	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid  +  4);  [CE]  incompatible  types  [FE]                          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid  +  4);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList  <  Folder>(nid  +  4);	          archive.folders    =    new    ArrayList    <    Folder>(nid    +    7ZSignature);    	non-compiled	[CE]  incompatible  types	15	None	replace
449	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid  *  7ZSignature);  [CE]  ')'  expected  [FE]                            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid  *  7ZSignature);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList  <  Folder>(nid  *  7ZSignature);	          archive.folders    =    new    ArrayList    <    Folder>(nid    +    7ZSignature);    	non-compiled	[CE]  ')'  expected	15	None	replace
450	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  cannot  find  symbol  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
451	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  header.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	146	12	replace
452	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	146	12	replace
453	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Fold  [CE]  '('  or  '['  expected  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte();  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Fold  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte();  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Fold	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  '('  or  '['  expected	146	None	replace
454	[BUG]  [BUGGY]  nid  =  NID.inputStreamSize;  if(nid  ==  NID.inputStreamSize)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  cannot  find  symbol  inputStreamSize  [FE]          EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.inputStreamSize;  if(nid  ==  NID.inputStreamSize)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.inputStreamSize;  if(nid  ==  NID.inputStreamSize)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol  inputStreamSize	146	None	replace
455	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Fold  [CE]  '('  or  '['  expected  [FE]            EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Fold  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte();  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Fold	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  '('  or  '['  expected	146	None	replace
456	[BUG]  [BUGGY]  nid  =  inputStreamStack.size();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  cannot  find  symbol  inputStreamStack  [FE]              EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  inputStreamStack.size();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  inputStreamStack.size();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	146	None	replace
457	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [CE]  cannot  find  symbol  [FE]                EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
458	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        nid    =    SIGNATURE_HEADER_SIZE;    nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE;	  	compilable	  [FE]  NoClassDefFoundError  	23	12	add
459	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE;  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        nid    =    SIGNATURE_HEADER_SIZE;    nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE;	  	compilable	  [FE]  NoClassDefFoundError  	23	12	add
460	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  SIGNATURE_HEADER_SIZE;  int  nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  SIGNATURE_HEADER_SIZE;  int  nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        nid    =    SIGNATURE_HEADER_SIZE;    int  nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE;	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	23	None	add
461	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  SIGNATURE_HEADER_SIZE;  nid  =  SIGNATURE_HEADER_SIZE;  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        nid    =    SIGNATURE_HEADER_SIZE;    nid  =  SIGNATURE_HEADER_SIZE;  nid  =  SIGNATURE_HEADER_SIZE;	  	compilable	  [FE]  NoClassDefFoundError  	23	12	add
462	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  SIGNATURE_HEADER_SIZE;  nid  =  SIGNATURE_HEADER_SIZE;  nid  =  SIGNATURE_HEADER_SIZE;  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  SIGNATURE_HEADER_SIZE;  nid  =  SIGNATURE_HEADER_SIZE;  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        nid    =    SIGNATURE_HEADER_SIZE;    nid  =  SIGNATURE_HEADER_SIZE;  nid  =  SIGNATURE_HEADER_SIZE;	  	compilable	  [FE]  NoClassDefFoundError  	23	12	add
463	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEAFDER_SIZE;  [CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEAFDER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        nid    =    SIGNATURE_HEADER_SIZE;    nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEAFDER_SIZE;	  	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE	23	None	add
464	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  SIGNATURE_HEADER_SIZE;  Integer  nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  SIGNATURE_HEADER_SIZE;  Integer  nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        nid    =    SIGNATURE_HEADER_SIZE;    Integer  nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE;	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	23	None	add
465	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  SIGNATURE_HEADER_SIZE;  InputStream  nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  SIGNATURE_HEADER_SIZE;  InputStream  nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        nid    =    SIGNATURE_HEADER_SIZE;    InputStream  nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE;	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	23	None	add
466	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE;  }  [CE]  illegal  start  of  type  [FE]                NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        nid    =    SIGNATURE_HEADER_SIZE;    nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE;  }	  	non-compiled	[CE]  illegal  start  of  type	23	None	add
467	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        header.readUnsignedByte()        +        1;        nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;	  	compilable	  [FE]  EOFException  	58	12	add
468	[BUG]  [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        header.readUnsignedByte()        +        1;        nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;	  	compilable	  [FE]  EOFException  	58	12	add
469	[BUG]  [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  int  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  int  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        header.readUnsignedByte()        +        1;        nid    =    header.readUnsignedByte()    +    1;    int  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	58	None	add
470	[BUG]  [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  InputStream  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  InputStream  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        header.readUnsignedByte()        +        1;        nid    =    header.readUnsignedByte()    +    1;    InputStream  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	58	None	add
471	[BUG]  [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  DataInput  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  DataInput  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        header.readUnsignedByte()        +        1;        nid    =    header.readUnsignedByte()    +    1;    DataInput  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	58	None	add
472	[BUG]  [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  NID  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  NID  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        header.readUnsignedByte()        +        1;        nid    =    header.readUnsignedByte()    +    1;    NID  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	58	None	add
473	[BUG]  [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  nid  =  head.readUnsignedByte()  +  1;  [CE]  cannot  find  symbol  head  [FE]              EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  nid  =  head.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        header.readUnsignedByte()        +        1;        nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  nid  =  head.readUnsignedByte()  +  1;	  	non-compiled	[CE]  cannot  find  symbol  head	58	None	add
474	[BUG]  [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  nid  =  head.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [CE]  cannot  find  symbol  head  [FE]                EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  nid  =  head.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        header.readUnsignedByte()        +        1;        nid    =    header.readUnsignedByte()    +    1;    nid  =  head.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;	  	non-compiled	[CE]  cannot  find  symbol  head	58	None	add
475	[BUG]  [BUGGY]  nid  =  header.readUnpackInfo(NID);  [CE]  cannot  find  symbol  NID  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnpackInfo(NID);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnpackInfo(NID);	  nid    =    NID.readUnpackInfo(header);    	non-compiled	[CE]  cannot  find  symbol  NID	70	None	replace
476	[BUG]  [BUGGY]  nid  =  NID.readUnpackInfo(header,  archive.folders);  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnpackInfo(header,  archive.folders);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnpackInfo(header,  archive.folders);	  nid    =    NID.readUnpackInfo(header);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
477	[BUG]  [BUGGY]  nid  =  NID.readUnpackInfo(header,  archives);  [CE]  cannot  find  symbol  archives  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnpackInfo(header,  archives);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnpackInfo(header,  archives);	  nid    =    NID.readUnpackInfo(header);    	non-compiled	[CE]  cannot  find  symbol  archives	70	None	replace
478	[BUG]  [BUGGY]  nid  =  reader.readUnpackInfo(header);  [CE]  cannot  find  symbol  reader  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  reader.readUnpackInfo(header);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  reader.readUnpackInfo(header);	  nid    =    NID.readUnpackInfo(header);    	non-compiled	[CE]  cannot  find  symbol  reader	70	None	replace
479	[BUG]  [BUGGY]  nid  =  NID.deferredBlockStreams();  [CE]  cannot  find  symbol  [FE]        EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.deferredBlockStreams();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.deferredBlockStreams();	  nid    =    NID.deferredBlockStreams;    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
480	[BUG]  [BUGGY]  nid  =  NID.deferredBlockStreams  +  1;  [CE]  cannot  find  symbol  deferredBlockStreams  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.deferredBlockStreams  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.deferredBlockStreams  +  1;	  nid    =    NID.deferredBlockStreams;    	non-compiled	[CE]  cannot  find  symbol  deferredBlockStreams	91	None	replace
481	[BUG]  [BUGGY]  nid  =  NID.inputStreamStack;  [CE]  cannot  find  symbol  inputStreamStack  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.inputStreamStack;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.inputStreamStack;	  nid    =    NID.deferredBlockStreams;    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	91	None	replace
482	[BUG]  [BUGGY]  Archive  archive.folders  =  new  Folder[1];  [CE]  ';'  expected  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  Archive  archive.folders  =  new  Folder[1];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	Archive  archive.folders  =  new  Folder[1];	          if(nid    ==    SIGNATURE_HEADER_SIZE)    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  ';'  expected	113	None	replace
483	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.peek();  nid  =  header.readUnsignedByte()  +  1;  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  InputStream  inputStreamStack  =  inputStreamStack.peek();  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	InputStream  inputStreamStack  =  inputStreamStack.peek();  nid  =  header.readUnsignedByte()  +  1;	  nid    =    header.readUnsignedByte()    +    1;    InputStream    inputStreamStack    =    inputStreamStack.peek();    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
484	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  InputStream  inputStreamStack  =  inputStreamStack.peek();  nid  =  header.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte();  InputStream  inputStreamStack  =  inputStreamStack.peek();  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  header.readUnsignedByte();  InputStream  inputStreamStack  =  inputStreamStack.peek();  nid  =  header.readUnsignedByte()  +  1;	  nid    =    header.readUnsignedByte()    +    1;    InputStream    inputStreamStack    =    inputStreamStack.peek();    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	97	None	replace
485	[BUG]  [BUGGY]  nid  =  inputStreamStack.peek();  nid  =  header.readUnsignedByte()  +  1;  [CE]  cannot  find  symbol  inputStreamStack  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  inputStreamStack.peek();  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  inputStreamStack.peek();  nid  =  header.readUnsignedByte()  +  1;	  nid    =    header.readUnsignedByte()    +    1;    InputStream    inputStreamStack    =    inputStreamStack.peek();    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	97	None	replace
486	[BUG]  [BUGGY]  InputStream  inputStreamStack  =  header.readUnsignedByte();  nid  =  inputStreamStack.peek();  [CE]  incompatible  types  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  InputStream  inputStreamStack  =  header.readUnsignedByte();  nid  =  inputStreamStack.peek();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	InputStream  inputStreamStack  =  header.readUnsignedByte();  nid  =  inputStreamStack.peek();	  nid    =    header.readUnsignedByte()    +    1;    InputStream    inputStreamStack    =    inputStreamStack.peek();    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  incompatible  types	97	None	replace
487	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo;  this.inputStreamStack.push(new  FileInputStream(fileName));  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo;  this.inputStreamStack.push(new  FileInputStream(fileName));  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo;  this.inputStreamStack.push(new  FileInputStream(fileName));	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    this.inputStreamStack.push(new    FileInputStream(fileName));    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
488	[BUG]  [BUGGY]  NID  nid  =  NID.kSubStreamsInfo;  this.inputStreamStack.push(new  FileInputStream(fileName));  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                  EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID  nid  =  NID.kSubStreamsInfo;  this.inputStreamStack.push(new  FileInputStream(fileName));  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID  nid  =  NID.kSubStreamsInfo;  this.inputStreamStack.push(new  FileInputStream(fileName));	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    this.inputStreamStack.push(new    FileInputStream(fileName));    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	38	None	replace
489	[BUG]  [BUGGY]  this.inputStreamStack.push(new  FileInputStream(fileName));  [CE]  cannot  find  symbol  [FE]                    EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  this.inputStreamStack.push(new  FileInputStream(fileName));  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	this.inputStreamStack.push(new  FileInputStream(fileName));	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    this.inputStreamStack.push(new    FileInputStream(fileName));    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
490	[BUG]  [BUGGY]  int  nid  =  NID.kSubStreamsInfo;  this.inputStreamStack.push(new  FileInputStream(fileName));  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                      EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  NID.kSubStreamsInfo;  this.inputStreamStack.push(new  FileInputStream(fileName));  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  NID.kSubStreamsInfo;  this.inputStreamStack.push(new  FileInputStream(fileName));	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    this.inputStreamStack.push(new    FileInputStream(fileName));    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	38	None	replace
491	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo  +  1;  this.inputStreamStack.push(new  FileInputStream(fileName));  [CE]  cannot  find  symbol  [FE]                        EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo  +  1;  this.inputStreamStack.push(new  FileInputStream(fileName));  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo  +  1;  this.inputStreamStack.push(new  FileInputStream(fileName));	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    this.inputStreamStack.push(new    FileInputStream(fileName));    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
492	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo;  nid  =  SIGNATURE_HEADER_SIZE  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  NID.kSubStreamsInfo;  nid  =  SIGNATURE_HEADER_SIZE  +  1;	  nid    =    NID.kSubStreamsInfo;    nid    =    SIGNATURE_HEADER_SIZE;    	compilable	  [FE]  IOException  	82	12	replace
493	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo;  nid  =  SIGNATURE_HEADER_SIZE  +  1;  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo;  nid  =  SIGNATURE_HEADER_SIZE  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo;  nid  =  SIGNATURE_HEADER_SIZE  +  1;	  nid    =    NID.kSubStreamsInfo;    nid    =    SIGNATURE_HEADER_SIZE;    	compilable	  [FE]  IOException  	82	12	replace
494	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo.length;  nid  =  SIGNATURE_HEADER_SIZE;  [CE]  int  cannot  be  dereferenced  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo.length;  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo.length;  nid  =  SIGNATURE_HEADER_SIZE;	  nid    =    NID.kSubStreamsInfo;    nid    =    SIGNATURE_HEADER_SIZE;    	non-compiled	[CE]  int  cannot  be  dereferenced	82	None	replace
495	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;	  	compilable	  [FE]  NoClassDefFoundError  	18	12	add
496	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;	  	compilable	  [FE]  NoClassDefFoundError  	18	12	add
497	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  int  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  int  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        nid    =    NID.kUnpackInfo;    int  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	18	None	add
498	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        nid    =    NID.kUnpackInfo;    nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kUnpackInfo;	  	compilable	  [FE]  NoClassDefFoundError  	18	12	add
499	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kUnpackInfo;  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        nid    =    NID.kUnpackInfo;    nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kUnpackInfo;	  	compilable	  [FE]  NoClassDefFoundError  	18	12	add
500	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE;	  	compilable	  [FE]  NoClassDefFoundError  	18	12	add
501	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE;  [FE]  NoClassDefFoundError  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE;	  	compilable	  [FE]  NoClassDefFoundError  	18	12	add
502	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  nid  =  NID.unpackInfo;  nid  =  NID.kUnpackInfo;  [CE]  cannot  find  symbol  unpackInfo  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  nid  =  NID.unpackInfo;  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        nid    =    NID.kUnpackInfo;    nid  =  NID.unpackInfo;  nid  =  NID.kUnpackInfo;	  	non-compiled	[CE]  cannot  find  symbol  unpackInfo	18	None	add
503	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackinfo;  [CE]  cannot  find  symbol  kUnpackinfo  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackinfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackinfo;	  	non-compiled	[CE]  cannot  find  symbol  kUnpackinfo	18	None	add
504	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  0;  nid  =  0;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid    =    0;    nid  =  0;	  	compilable	  [FE]  NoClassDefFoundError  	131	12	add
505	[BUG]  [BUGGY]  nid  =  0;  nid  =  0;  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  0;  nid  =  0;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    0;    nid  =  0;	  	compilable	  [FE]  NoClassDefFoundError  	131	12	add
506	[BUG]  [BUGGY]  nid  =  0;  InputStream  inputStreamStack  =  inputStreamStack.getInputStream(nid);  nid  =  0;  [CE]  cannot  find  symbol  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  0;  InputStream  inputStreamStack  =  inputStreamStack.getInputStream(nid);  nid  =  0;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    0;    InputStream  inputStreamStack  =  inputStreamStack.getInputStream(nid);  nid  =  0;	  	non-compiled	[CE]  cannot  find  symbol	131	None	add
507	[BUG]  [BUGGY]  nid  =  0;  InputStream  inputStreamStack  =  inputStreamStack.getInputStream(fileName);  nid  =  0;  [CE]  cannot  find  symbol  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  0;  InputStream  inputStreamStack  =  inputStreamStack.getInputStream(fileName);  nid  =  0;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    0;    InputStream  inputStreamStack  =  inputStreamStack.getInputStream(fileName);  nid  =  0;	  	non-compiled	[CE]  cannot  find  symbol	131	None	add
508	[BUG]  [BUGGY]  nid  =  0;  InputStream  inputStreamStack  =  inputStreamStack.getInputStream();  nid  =  0;  [CE]  cannot  find  symbol  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  0;  InputStream  inputStreamStack  =  inputStreamStack.getInputStream();  nid  =  0;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    0;    InputStream  inputStreamStack  =  inputStreamStack.getInputStream();  nid  =  0;	  	non-compiled	[CE]  cannot  find  symbol	131	None	add
509	[BUG]  [BUGGY]  nid  =  0;  ((  RandomAccessFile)nid).inputStreamStack.pop();  nid  =  0;  [CE]  inconvertible  types  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  0;  ((  RandomAccessFile)nid).inputStreamStack.pop();  nid  =  0;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    0;    ((  RandomAccessFile)nid).inputStreamStack.pop();  nid  =  0;	  	non-compiled	[CE]  inconvertible  types	131	None	add
510	[BUG]  [BUGGY]  nid  =  0;  fileName  =  header.readUnsignedByte();  nid  =  0;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  0;  fileName  =  header.readUnsignedByte();  nid  =  0;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    0;    fileName  =  header.readUnsignedByte();  nid  =  0;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	131	None	add
511	[BUG]  [BUGGY]  nid  =  0;  ((  RandomAccessFile)nid).setDataInput(fileName);  nid  =  0;  [CE]  inconvertible  types  [FE]                NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  0;  ((  RandomAccessFile)nid).setDataInput(fileName);  nid  =  0;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    0;    ((  RandomAccessFile)nid).setDataInput(fileName);  nid  =  0;	  	non-compiled	[CE]  inconvertible  types	131	None	add
512	[BUG]  [BUGGY]  nid  =  0;  InputStream  inputStreamStack  =  inputStreamStack.get(nid);  nid  =  0;  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  0;  InputStream  inputStreamStack  =  inputStreamStack.get(nid);  nid  =  0;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    0;    InputStream  inputStreamStack  =  inputStreamStack.get(nid);  nid  =  0;	  	non-compiled	[CE]  cannot  find  symbol	131	None	add
513	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolderIndex,  nid,  0,  nid);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                    EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolderIndex,  nid,  0,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolderIndex,  nid,  0,  nid);	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    System.arraycopy(currentFolderIndex,    nid,    0,    nid);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	40	None	replace
514	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolderIndex,  nid,  0,  nid  +  1);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                      EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolderIndex,  nid,  0,  nid  +  1);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolderIndex,  nid,  0,  nid  +  1);	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    System.arraycopy(currentFolderIndex,    nid,    0,    nid);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	40	None	replace
515	[BUG]  [BUGGY]  System.arraycopy(currentFolderIndex,  nid,  0,  nid);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                        EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  System.arraycopy(currentFolderIndex,  nid,  0,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	System.arraycopy(currentFolderIndex,  nid,  0,  nid);	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    System.arraycopy(currentFolderIndex,    nid,    0,    nid);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	40	None	replace
516	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolderIndex,  nid,  1,  nid);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolderIndex,  nid,  1,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolderIndex,  nid,  1,  nid);	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    System.arraycopy(currentFolderIndex,    nid,    0,    nid);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	40	None	replace
517	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo  +  1;  System.arraycopy(currentFolderIndex,  nid,  0,  nid);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo  +  1;  System.arraycopy(currentFolderIndex,  nid,  0,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo  +  1;  System.arraycopy(currentFolderIndex,  nid,  0,  nid);	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    System.arraycopy(currentFolderIndex,    nid,    0,    nid);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	40	None	replace
518	[BUG]  [BUGGY]  int  nid  =  NID.kSubStreamsInfo;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  NID.kSubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    int    nid    =    NID.kSubStreamsInfo;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	35	None	replace
519	[BUG]  [BUGGY]  Integer  nid  =  NID.kSubStreamsInfo;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  Integer  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	Integer  nid  =  NID.kSubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    int    nid    =    NID.kSubStreamsInfo;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	35	None	replace
520	[BUG]  [BUGGY]  int  nid  =  NID.kSubStreamsInfo.length;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  NID.kSubStreamsInfo.length;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  NID.kSubStreamsInfo.length;	  nid    =    NID.kSubStreamsInfo;    int    nid    =    NID.kSubStreamsInfo;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	35	None	replace
521	[BUG]  [BUGGY]  nid  =  NID.bytesToIntByteArray();  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesToIntByteArray();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesToIntByteArray();	  nid    =    NID.bytesToIntByteArray;    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
522	[BUG]  [BUGGY]  nid  =  NID.bytesToIntArray;  [CE]  cannot  find  symbol  bytesToIntArray  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesToIntArray;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesToIntArray;	  nid    =    NID.bytesToIntByteArray;    	non-compiled	[CE]  cannot  find  symbol  bytesToIntArray	90	None	replace
523	[BUG]  [BUGGY]  nid  =  NID.bytesToIntByteArray(nid);  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesToIntByteArray(nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesToIntByteArray(nid);	  nid    =    NID.bytesToIntByteArray;    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
524	[BUG]  [BUGGY]  nid  =  NID.bytesToIntArray();  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesToIntArray();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesToIntArray();	  nid    =    NID.bytesToIntByteArray;    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
525	[BUG]  [BUGGY]  nid  =  NID.bytesToIntByteArray[0];  [CE]  cannot  find  symbol  bytesToIntByteArray  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesToIntByteArray[0];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesToIntByteArray[0];	  nid    =    NID.bytesToIntByteArray;    	non-compiled	[CE]  cannot  find  symbol  bytesToIntByteArray	90	None	replace
526	[BUG]  [BUGGY]  nid  =  NID.bytesToIntByteArray(0);  [CE]  cannot  find  symbol  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesToIntByteArray(0);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesToIntByteArray(0);	  nid    =    NID.bytesToIntByteArray;    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
527	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(nid,  header);  [CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;  [FE]        EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte(nid,  header);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte(nid,  header);	  nid    =    file.readUnsignedByte(header);    	non-compiled	[CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;	114	None	replace
528	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(NID.kUnpackInfo,  header);  [CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte(NID.kUnpackInfo,  header);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte(NID.kUnpackInfo,  header);	  nid    =    file.readUnsignedByte(header);    	non-compiled	[CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;	114	None	replace
529	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(NID.kUnpackInfo);  [CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte(NID.kUnpackInfo);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte(NID.kUnpackInfo);	  nid    =    file.readUnsignedByte(header);    	non-compiled	[CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;	114	None	replace
530	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(file);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(file);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(file);	  nid    =    file.readUnsignedByte(header);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	114	None	replace
531	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(inputStreamStack,  header);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte(inputStreamStack,  header);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte(inputStreamStack,  header);	  nid    =    file.readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	114	None	replace
532	[BUG]  [BUGGY]  Nid  nid  =  NID.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  Nid  nid  =  NID.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	Nid  nid  =  NID.readUnsignedByte();	  Nid    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
533	[BUG]  [BUGGY]  Nid  nid  =  archive.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  Nid  nid  =  archive.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	Nid  nid  =  archive.readUnsignedByte();	  Nid    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
534	[BUG]  [BUGGY]  Nid  nid  =  UID.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  Nid  nid  =  UID.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	Nid  nid  =  UID.readUnsignedByte();	  Nid    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
535	[BUG]  [BUGGY]  Nid  nid  =  NID.kUnpackInfo.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  Nid  nid  =  NID.kUnpackInfo.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	Nid  nid  =  NID.kUnpackInfo.readUnsignedByte();	  Nid    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
536	[BUG]  [BUGGY]  Nid  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  Nid  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	Nid  nid  =  file.readUnsignedByte();	  Nid    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
537	[BUG]  [BUGGY]  Nid  nid  =  reader.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  Nid  nid  =  reader.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	Nid  nid  =  reader.readUnsignedByte();	  Nid    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
538	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	161	12	add
539	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	161	12	add
540	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[2];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[2];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	161	12	add
541	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[2];  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[2];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[2];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	161	12	add
542	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[3];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[3];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	161	12	add
543	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[3];  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[3];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[3];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	161	12	add
544	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  int  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  int  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    int  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	161	None	add
545	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	161	12	add
546	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	161	12	add
547	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Fold  [CE]  '('  or  '['  expected  [FE]              java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Fold  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Fold	  	non-compiled	[CE]  '('  or  '['  expected	161	None	add
548	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  [CE]  'else'  without  'if'  [FE]                java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];	  	non-compiled	[CE]  'else'  without  'if'	161	None	add
549	[BUG]  [BUGGY]  nid  =  UID.kUnpackInfo();  [CE]  cannot  find  symbol  UID  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  UID.kUnpackInfo();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  UID.kUnpackInfo();	  nid    =    header.kUnpackInfo();    	non-compiled	[CE]  cannot  find  symbol  UID	50	None	replace
550	[BUG]  [BUGGY]  nid  =  file.kUnpackInfo();  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.kUnpackInfo();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.kUnpackInfo();	  nid    =    header.kUnpackInfo();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
551	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  EOFException  	145	12	add
552	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  EOFException  	145	12	add
553	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  EOFException  	145	12	add
554	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  EOFException  	145	12	add
555	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  int  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  int  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    int  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	145	None	add
556	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[  [CE]  ']'  expected  [FE]          EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[	  	non-compiled	[CE]  ']'  expected	145	None	add
557	[BUG]  [BUGGY]  [FE]  EOFException  [FE]            EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid!=  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid!=  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  EOFException  	145	12	add
558	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid!=  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  EOFException  [FE]            EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid!=  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid!=  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  EOFException  	145	12	add
559	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  DataInput  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  DataInput  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    DataInput  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	145	None	add
560	[BUG]  [BUGGY]  [FE]  EOFException  [FE]                EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[2];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[2];  }	  	compilable	  [FE]  EOFException  	145	12	add
561	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[2];  }  [FE]  EOFException  [FE]                EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[2];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[2];  }	  	compilable	  [FE]  EOFException  	145	12	add
562	[BUG]  [BUGGY]  nid  =  NID.readUnpackInfo();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [CE]  cannot  find  symbol  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnpackInfo();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnpackInfo();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
563	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [CE]  cannot  find  symbol  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
564	[BUG]  [BUGGY]  nid  =  NID.readUnpackInfo();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  cannot  find  symbol  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnpackInfo();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnpackInfo();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
565	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [CE]  cannot  find  symbol  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte();  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte();  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
566	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  cannot  find  symbol  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
567	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  cannot  find  symbol  [FE]              java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte();  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte();  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
568	[BUG]  [BUGGY]  nid  =  NID.readUnpackInfo();  if(nid  ==  NID.kFolderInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [CE]  cannot  find  symbol  [FE]                java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnpackInfo();  if(nid  ==  NID.kFolderInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnpackInfo();  if(nid  ==  NID.kFolderInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
569	[BUG]  [BUGGY]  int  nid  =  archive.readUnsignedInt();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  archive.readUnsignedInt();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  archive.readUnsignedInt();	  int    nid    =    header.readUnsignedInt();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	73	None	replace
570	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedInt();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  Integer  nid  =  header.readUnsignedInt();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	Integer  nid  =  header.readUnsignedInt();	  int    nid    =    header.readUnsignedInt();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	73	None	replace
571	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  nid  =  file.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid    =    file.readUnsignedByte()    +    1;    nid  =  file.readUnsignedByte()  +  1;	  	compilable	  [FE]  EOFException  	116	12	add
572	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  nid  =  file.readUnsignedByte()  +  1;  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  nid  =  file.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    file.readUnsignedByte()    +    1;    nid  =  file.readUnsignedByte()  +  1;	  	compilable	  [FE]  EOFException  	116	12	add
573	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  int  nid  =  file.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  int  nid  =  file.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    file.readUnsignedByte()    +    1;    int  nid  =  file.readUnsignedByte()  +  1;	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	116	None	add
574	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  ((  RandomAccessFile)file).folders.add(nid);  nid  =  file.readUnsignedByte()  +  1;  [CE]  cannot  find  symbol  folders  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  ((  RandomAccessFile)file).folders.add(nid);  nid  =  file.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    file.readUnsignedByte()    +    1;    ((  RandomAccessFile)file).folders.add(nid);  nid  =  file.readUnsignedByte()  +  1;	  	non-compiled	[CE]  cannot  find  symbol  folders	116	None	add
575	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  ((  RandomAccessFile)file).folders.add(new  File(nid,  NID.kUnpackInfo));  nid  =  file.readUnsignedByte()  +  1;  [CE]  no  suitable  constructor  found  for  File(int,int)  [FE]          EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  ((  RandomAccessFile)file).folders.add(new  File(nid,  NID.kUnpackInfo));  nid  =  file.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    file.readUnsignedByte()    +    1;    ((  RandomAccessFile)file).folders.add(new  File(nid,  NID.kUnpackInfo));  nid  =  file.readUnsignedByte()  +  1;	  	non-compiled	[CE]  no  suitable  constructor  found  for  File(int,int)	116	None	add
576	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  ((  RandomAccessFile)file).folders.add(new  File(nid,  NID.kSubStreamsInfo));  nid  =  file.readUnsignedByte()  +  1;  [CE]  no  suitable  constructor  found  for  File(int,int)  [FE]            EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  ((  RandomAccessFile)file).folders.add(new  File(nid,  NID.kSubStreamsInfo));  nid  =  file.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    file.readUnsignedByte()    +    1;    ((  RandomAccessFile)file).folders.add(new  File(nid,  NID.kSubStreamsInfo));  nid  =  file.readUnsignedByte()  +  1;	  	non-compiled	[CE]  no  suitable  constructor  found  for  File(int,int)	116	None	add
577	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  ((  RandomAccessFile)file).folders.add(new  File(nid  +  1));  nid  =  file.readUnsignedByte()  +  1;  [CE]  no  suitable  constructor  found  for  File(int)  [FE]              EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  ((  RandomAccessFile)file).folders.add(new  File(nid  +  1));  nid  =  file.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    file.readUnsignedByte()    +    1;    ((  RandomAccessFile)file).folders.add(new  File(nid  +  1));  nid  =  file.readUnsignedByte()  +  1;	  	non-compiled	[CE]  no  suitable  constructor  found  for  File(int)	116	None	add
578	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  nid  =  file.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  [CE]  'else'  without  'if'  [FE]                EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  nid  =  file.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    file.readUnsignedByte()    +    1;    nid  =  file.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];	  	non-compiled	[CE]  'else'  without  'if'	116	None	add
579	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(0,  nid,  archive.folders);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(0,  nid,  archive.folders);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(0,  nid,  archive.folders);	  nid    =    header.readUnsignedByte(0,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	119	None	replace
580	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(0,  nid,  NID.kPackInfo);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(0,  nid,  NID.kPackInfo);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(0,  nid,  NID.kPackInfo);	  nid    =    header.readUnsignedByte(0,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	119	None	replace
581	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(0,  nid,  NID.kUnpackInfo);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(0,  nid,  NID.kUnpackInfo);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(0,  nid,  NID.kUnpackInfo);	  nid    =    header.readUnsignedByte(0,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	119	None	replace
582	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(0,  nid,  SIGNATURE_HEADER_SIZE);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(0,  nid,  SIGNATURE_HEADER_SIZE);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(0,  nid,  SIGNATURE_HEADER_SIZE);	  nid    =    header.readUnsignedByte(0,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	119	None	replace
583	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(0,  nid,  fileName);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(0,  nid,  fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(0,  nid,  fileName);	  nid    =    header.readUnsignedByte(0,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	119	None	replace
584	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  SIGNATURE_HEADER_SIZE);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  SIGNATURE_HEADER_SIZE);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(nid,  SIGNATURE_HEADER_SIZE);	  nid    =    header.readUnsignedByte(0,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	119	None	replace
585	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(-1,  nid);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(-1,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(-1,  nid);	  nid    =    header.readUnsignedByte(0,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	119	None	replace
586	[BUG]  [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[  [CE]  illegal  start  of  expression  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
587	[BUG]  [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  [CE]  'else'  without  'if'  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  'else'  without  'if'	142	None	replace
588	[BUG]  [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0]  [CE]  ';'  expected  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0]  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0]	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  ';'  expected	142	None	replace
589	[BUG]  [BUGGY]  nid  =  NID.readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  [CE]  cannot  find  symbol  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
590	[BUG]  [BUGGY]  nid  =  reader.readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  [CE]  cannot  find  symbol  reader  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  reader.readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  reader.readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    	non-compiled	[CE]  cannot  find  symbol  reader	140	None	replace
591	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	140	12	replace
592	[BUG]  [BUGGY]  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  [FE]  java.io.IOException:  Expected  kFolder  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	140	12	replace
593	[BUG]  [BUGGY]  nid  =  NID.readUnpackInfo(header,  archive);  nid  =  NID.readSubStreamsInfo;  [CE]  cannot  find  symbol  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnpackInfo(header,  archive);  nid  =  NID.readSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnpackInfo(header,  archive);  nid  =  NID.readSubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
594	[BUG]  [BUGGY]  nid  =  NID.subStreamsInfo;  [CE]  cannot  find  symbol  subStreamsInfo  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.subStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.subStreamsInfo;	  nid    =    NID.subStreamsInfo.length;    	non-compiled	[CE]  cannot  find  symbol  subStreamsInfo	32	None	replace
595	[BUG]  [BUGGY]  nid  =  NID.subStreamsInfo.length  +  1;  [CE]  cannot  find  symbol  subStreamsInfo  [FE]                  EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.subStreamsInfo.length  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.subStreamsInfo.length  +  1;	  nid    =    NID.subStreamsInfo.length;    	non-compiled	[CE]  cannot  find  symbol  subStreamsInfo	32	None	replace
596	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        file.readUnsignedByte();        nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();	  	compilable	  [FE]  EOFException  	41	12	add
597	[BUG]  [BUGGY]  nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        file.readUnsignedByte();        nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();	  	compilable	  [FE]  EOFException  	41	12	add
598	[BUG]  [BUGGY]  nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  int  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  int  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        file.readUnsignedByte();        nid    =    file.readUnsignedByte();    int  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	41	None	add
599	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  nid  =  header.readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        file.readUnsignedByte();        nid    =    file.readUnsignedByte();    nid  =  header.readUnsignedByte();  nid  =  file.readUnsignedByte();	  	compilable	  [FE]  EOFException  	41	12	add
600	[BUG]  [BUGGY]  nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  nid  =  header.readUnsignedByte();  nid  =  file.readUnsignedByte();  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  nid  =  header.readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        file.readUnsignedByte();        nid    =    file.readUnsignedByte();    nid  =  header.readUnsignedByte();  nid  =  file.readUnsignedByte();	  	compilable	  [FE]  EOFException  	41	12	add
601	[BUG]  [BUGGY]  nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  nid  =  sourceFile.readUnsignedByte();  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  sourceFile  [FE]          EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  nid  =  sourceFile.readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        file.readUnsignedByte();        nid    =    file.readUnsignedByte();    nid  =  sourceFile.readUnsignedByte();  nid  =  file.readUnsignedByte();	  	non-compiled	[CE]  cannot  find  symbol  sourceFile	41	None	add
602	[BUG]  [BUGGY]  nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  nid  =  source.readUnsignedByte();  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  source  [FE]            EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  nid  =  source.readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        file.readUnsignedByte();        nid    =    file.readUnsignedByte();    nid  =  source.readUnsignedByte();  nid  =  file.readUnsignedByte();	  	non-compiled	[CE]  cannot  find  symbol  source	41	None	add
603	[BUG]  [BUGGY]  nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  nid  =  line.readUnsignedByte();  [CE]  cannot  find  symbol  line  [FE]              EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  nid  =  line.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        file.readUnsignedByte();        nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  nid  =  line.readUnsignedByte();	  	non-compiled	[CE]  cannot  find  symbol  line	41	None	add
604	[BUG]  [BUGGY]  nid  =  nid.kUnpackInfo();  [CE]  int  cannot  be  dereferenced  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid.kUnpackInfo();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  nid.kUnpackInfo();	  nid    =    archive.kUnpackInfo();    	non-compiled	[CE]  int  cannot  be  dereferenced	166	None	replace
605	[BUG]  [BUGGY]  nid  =  path.kUnpackInfo();  [CE]  cannot  find  symbol  path  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  path.kUnpackInfo();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  path.kUnpackInfo();	  nid    =    archive.kUnpackInfo();    	non-compiled	[CE]  cannot  find  symbol  path	166	None	replace
606	[BUG]  [BUGGY]  nid  =  source.kUnpackInfo();  [CE]  cannot  find  symbol  source  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  source.kUnpackInfo();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  source.kUnpackInfo();	  nid    =    archive.kUnpackInfo();    	non-compiled	[CE]  cannot  find  symbol  source	166	None	replace
607	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo;  this.inputStreamStack.push(new  FileInputStream(fileName));  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  this.inputStreamStack.push(new  FileInputStream(fileName));  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo;  this.inputStreamStack.push(new  FileInputStream(fileName));	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    this.inputStreamStack.push(new    FileInputStream(fileName));    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
608	[BUG]  [BUGGY]  NID  nid  =  NID.kUnpackInfo;  this.inputStreamStack.push(new  FileInputStream(fileName));  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID  nid  =  NID.kUnpackInfo;  this.inputStreamStack.push(new  FileInputStream(fileName));  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID  nid  =  NID.kUnpackInfo;  this.inputStreamStack.push(new  FileInputStream(fileName));	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    this.inputStreamStack.push(new    FileInputStream(fileName));    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	103	None	replace
609	[BUG]  [BUGGY]  nid  =  NID.bytes  |  SIGNATURE_HEADER_SIZE;  [CE]  cannot  find  symbol  bytes  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytes  |  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytes  |  SIGNATURE_HEADER_SIZE;	  nid    =    NID.bytes;    	non-compiled	[CE]  cannot  find  symbol  bytes	31	None	replace
610	[BUG]  [BUGGY]  nid  =  NID.bytes();  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytes();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytes();	  nid    =    NID.bytes;    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
611	[BUG]  [BUGGY]  nid  =  NID.bytes  ||  nid  <  SIGNATURE_HEADER_SIZE;  [CE]  cannot  find  symbol  bytes  [FE]                  EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytes  ||  nid  <  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytes  ||  nid  <  SIGNATURE_HEADER_SIZE;	  nid    =    NID.bytes;    	non-compiled	[CE]  cannot  find  symbol  bytes	31	None	replace
612	[BUG]  [BUGGY]  nid  =  NID.bytes  ||  nid  ==  SIGNATURE_HEADER_SIZE;  [CE]  cannot  find  symbol  bytes  [FE]                    EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytes  ||  nid  ==  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytes  ||  nid  ==  SIGNATURE_HEADER_SIZE;	  nid    =    NID.bytes;    	non-compiled	[CE]  cannot  find  symbol  bytes	31	None	replace
613	[BUG]  [BUGGY]  nid  =  NID.bytes  |  SIGNNATURE_HEADER_SIZE;  [CE]  cannot  find  symbol  bytes  [FE]                      EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytes  |  SIGNNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytes  |  SIGNNATURE_HEADER_SIZE;	  nid    =    NID.bytes;    	non-compiled	[CE]  cannot  find  symbol  bytes	31	None	replace
614	[BUG]  [BUGGY]  nid  =  NID.bytes  ||  nid  ==  NID.bytes;  [CE]  cannot  find  symbol  bytes  [FE]                        EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytes  ||  nid  ==  NID.bytes;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytes  ||  nid  ==  NID.bytes;	  nid    =    NID.bytes;    	non-compiled	[CE]  cannot  find  symbol  bytes	31	None	replace
615	[BUG]  [BUGGY]  archive.folders  =  new  LinkedList  <  Folder>();  [CE]  incompatible  types  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  LinkedList  <  Folder>();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  LinkedList  <  Folder>();	          archive.folders    =    new    ArrayList    <    Folder>();    	non-compiled	[CE]  incompatible  types	9	None	replace
616	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(1);  [CE]  incompatible  types  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(1);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList  <  Folder>(1);	          archive.folders    =    new    ArrayList    <    Folder>();    	non-compiled	[CE]  incompatible  types	9	None	replace
617	[BUG]  [BUGGY]  archive.folders  =  new  TreeSet  <  Folder>();  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  TreeSet  <  Folder>();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  TreeSet  <  Folder>();	          archive.folders    =    new    ArrayList    <    Folder>();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
618	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(2);  [CE]  incompatible  types  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(2);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList  <  Folder>(2);	          archive.folders    =    new    ArrayList    <    Folder>();    	non-compiled	[CE]  incompatible  types	9	None	replace
619	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo.readUnsignedByte(header,  archive.folders);  [CE]  int  cannot  be  dereferenced  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo.readUnsignedByte(header,  archive.folders);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo.readUnsignedByte(header,  archive.folders);	  nid    =    NID.kUnpackInfo.readUnsignedByte(header);    	non-compiled	[CE]  int  cannot  be  dereferenced	77	None	replace
620	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo.readUnsignedByte(currentFolderIndex);  [CE]  int  cannot  be  dereferenced  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo.readUnsignedByte(currentFolderIndex);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo.readUnsignedByte(currentFolderIndex);	  nid    =    NID.kUnpackInfo.readUnsignedByte(header);    	non-compiled	[CE]  int  cannot  be  dereferenced	77	None	replace
621	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo.readUnsignedByte(fileName);  [CE]  int  cannot  be  dereferenced  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo.readUnsignedByte(fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo.readUnsignedByte(fileName);	  nid    =    NID.kUnpackInfo.readUnsignedByte(header);    	non-compiled	[CE]  int  cannot  be  dereferenced	77	None	replace
622	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo;  this.deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  assign  a  value  to  final  variable  deferredBlockStreams  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  this.deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo;  this.deferredBlockStreams  =  new  ArrayList  <  String>();	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    this.deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  deferredBlockStreams	104	None	replace
623	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  archive.deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  deferredBlockStreams  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  archive.deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  archive.deferredBlockStreams  =  new  ArrayList  <  String>();	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    this.deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol  deferredBlockStreams	104	None	replace
624	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  fileName);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  fileName);	  nid    =    header.readUnsignedByte(nid,    NID.kPackInfo);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	6	None	replace
625	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte(header,  NID.kPackInfo);  [CE]  cannot  find  symbol  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte(header,  NID.kPackInfo);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte(header,  NID.kPackInfo);	  nid    =    header.readUnsignedByte(nid,    NID.kPackInfo);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
626	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  archive.folders);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  archive.folders);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  archive.folders);	  nid    =    header.readUnsignedByte(nid,    NID.kPackInfo);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	6	None	replace
627	[BUG]  [BUGGY]  nid  =  NID.kPackInfo.readUnsignedByte(header,  archive);  [CE]  int  cannot  be  dereferenced  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kPackInfo.readUnsignedByte(header,  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kPackInfo.readUnsignedByte(header,  archive);	  nid    =    header.readUnsignedByte(nid,    NID.kPackInfo);    	non-compiled	[CE]  int  cannot  be  dereferenced	6	None	replace
628	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(NID.kPackInfo,  nid);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(NID.kPackInfo,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(NID.kPackInfo,  nid);	  nid    =    header.readUnsignedByte(nid,    NID.kPackInfo);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	6	None	replace
629	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(header,  NID.kPackInfo);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(header,  NID.kPackInfo);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(header,  NID.kPackInfo);	  nid    =    header.readUnsignedByte(nid,    NID.kPackInfo);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	6	None	replace
630	[BUG]  [BUGGY]  nid  =  NID.kPackInfo.readUnsignedByte(header,  NID.kPackInfo);  [CE]  int  cannot  be  dereferenced  [FE]                                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kPackInfo.readUnsignedByte(header,  NID.kPackInfo);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kPackInfo.readUnsignedByte(header,  NID.kPackInfo);	  nid    =    header.readUnsignedByte(nid,    NID.kPackInfo);    	non-compiled	[CE]  int  cannot  be  dereferenced	6	None	replace
631	[BUG]  [BUGGY]  nid  =  reader.readUnsignedInt();  [CE]  cannot  find  symbol  reader  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  reader.readUnsignedInt();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  reader.readUnsignedInt();	  nid    =    nid.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol  reader	170	None	replace
632	[BUG]  [BUGGY]  [FE]  IOException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  2;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  NID.kUnpackInfo  +  2;	  nid    =    NID.kUnpackInfo    +    1;    	compilable	  [FE]  IOException  	69	12	replace
633	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  +  2;  [FE]  IOException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  2;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo  +  2;	  nid    =    NID.kUnpackInfo    +    1;    	compilable	  [FE]  IOException  	69	12	replace
634	[BUG]  [BUGGY]  [FE]  IOException  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  3;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  NID.kUnpackInfo  +  3;	  nid    =    NID.kUnpackInfo    +    1;    	compilable	  [FE]  IOException  	69	12	replace
635	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  +  3;  [FE]  IOException  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  3;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo  +  3;	  nid    =    NID.kUnpackInfo    +    1;    	compilable	  [FE]  IOException  	69	12	replace
636	[BUG]  [BUGGY]  [FE]  IOException  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  4;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  NID.kUnpackInfo  +  4;	  nid    =    NID.kUnpackInfo    +    1;    	compilable	  [FE]  IOException  	69	12	replace
637	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  +  4;  [FE]  IOException  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  4;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo  +  4;	  nid    =    NID.kUnpackInfo    +    1;    	compilable	  [FE]  IOException  	69	12	replace
638	[BUG]  [BUGGY]  [FE]  IOException  [FE]          EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  *  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  NID.kUnpackInfo  *  1;	  nid    =    NID.kUnpackInfo    +    1;    	compilable	  [FE]  IOException  	69	12	replace
639	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  *  1;  [FE]  IOException  [FE]          EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  *  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo  *  1;	  nid    =    NID.kUnpackInfo    +    1;    	compilable	  [FE]  IOException  	69	12	replace
640	[BUG]  [BUGGY]  InputStream  nid  =  NID.kUnpackInfo;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  InputStream  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	InputStream  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    InputStream    nid    =    NID.kUnpackInfo;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	102	None	replace
641	[BUG]  [BUGGY]  int  nid  =  NID.kUnpackInfo;  InputStream  nid  =  NID.kUnpackInfo;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  NID.kUnpackInfo;  InputStream  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  NID.kUnpackInfo;  InputStream  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    InputStream    nid    =    NID.kUnpackInfo;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	102	None	replace
642	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	                if(nid    ==    SIGNATURE_HEADER_SIZE)    {    archive.folders    =    new    Folder[1];    }    if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  NoClassDefFoundError  	112	12	add
643	[BUG]  [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	                if(nid    ==    SIGNATURE_HEADER_SIZE)    {    archive.folders    =    new    Folder[1];    }    if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  NoClassDefFoundError  	112	12	add
644	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	                if(nid    ==    SIGNATURE_HEADER_SIZE)    {    archive.folders    =    new    Folder[1];    }    if(nid  >=  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  NoClassDefFoundError  	112	12	add
645	[BUG]  [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  if(nid  >=  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	                if(nid    ==    SIGNATURE_HEADER_SIZE)    {    archive.folders    =    new    Folder[1];    }    if(nid  >=  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  NoClassDefFoundError  	112	12	add
646	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  if(nid!=  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	                if(nid    ==    SIGNATURE_HEADER_SIZE)    {    archive.folders    =    new    Folder[1];    }    if(nid!=  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  NullPointerException  	112	12	add
647	[BUG]  [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  if(nid!=  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  [FE]  NullPointerException  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  if(nid!=  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	                if(nid    ==    SIGNATURE_HEADER_SIZE)    {    archive.folders    =    new    Folder[1];    }    if(nid!=  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  NullPointerException  	112	12	add
648	[BUG]  [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  If(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  [CE]  ';'  expected  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  If(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	                if(nid    ==    SIGNATURE_HEADER_SIZE)    {    archive.folders    =    new    Folder[1];    }    If(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }	  	non-compiled	[CE]  ';'  expected	112	None	add
649	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[2];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	                if(nid    ==    SIGNATURE_HEADER_SIZE)    {    archive.folders    =    new    Folder[1];    }    if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[2];  }	  	compilable	  [FE]  NoClassDefFoundError  	112	12	add
650	[BUG]  [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[2];  }  [FE]  NoClassDefFoundError  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[2];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	                if(nid    ==    SIGNATURE_HEADER_SIZE)    {    archive.folders    =    new    Folder[1];    }    if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[2];  }	  	compilable	  [FE]  NoClassDefFoundError  	112	12	add
651	[BUG]  [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  if(nid  ==  SIGNATURE_HEAFDER_SIZE)  {  archive.folders  =  new  Folder[1];  }  [CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  if(nid  ==  SIGNATURE_HEAFDER_SIZE)  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	                if(nid    ==    SIGNATURE_HEADER_SIZE)    {    archive.folders    =    new    Folder[1];    }    if(nid  ==  SIGNATURE_HEAFDER_SIZE)  {  archive.folders  =  new  Folder[1];  }	  	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEAFDER_SIZE	112	None	add
652	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(NID.kUnpackInfo,  header);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(NID.kUnpackInfo,  header);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(NID.kUnpackInfo,  header);	  nid    =    header.readUnsignedByte(header);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	78	None	replace
653	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(NID.kPackInfo);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(NID.kPackInfo);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(NID.kPackInfo);	  nid    =    header.readUnsignedByte(header);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	78	None	replace
654	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nID,  header);  [CE]  cannot  find  symbol  nID  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nID,  header);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(nID,  header);	  nid    =    header.readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol  nID	78	None	replace
655	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  nid  =  nid;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid    =    nid;    nid  =  nid;	  	compilable	  [FE]  NoClassDefFoundError  	128	12	add
656	[BUG]  [BUGGY]  nid  =  nid;  nid  =  nid;  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  nid  =  nid;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    nid;    nid  =  nid;	  	compilable	  [FE]  NoClassDefFoundError  	128	12	add
657	[BUG]  [BUGGY]  nid  =  nid;  ((  RandomAccessFile)nid).copyCurrentStructure(fileName);  nid  =  nid;  [CE]  inconvertible  types  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  ((  RandomAccessFile)nid).copyCurrentStructure(fileName);  nid  =  nid;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    nid;    ((  RandomAccessFile)nid).copyCurrentStructure(fileName);  nid  =  nid;	  	non-compiled	[CE]  inconvertible  types	128	None	add
658	[BUG]  [BUGGY]  nid  =  nid;  ((  RandomAccessFile)nid).copyCurrentSize(fileName);  nid  =  nid;  [CE]  inconvertible  types  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  ((  RandomAccessFile)nid).copyCurrentSize(fileName);  nid  =  nid;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    nid;    ((  RandomAccessFile)nid).copyCurrentSize(fileName);  nid  =  nid;	  	non-compiled	[CE]  inconvertible  types	128	None	add
659	[BUG]  [BUGGY]  nid  =  nid;  fileName  =  header.readUnsignedByte();  nid  =  nid;  [CE]  cannot  assign  a  value  to  final  variable  fileName  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  fileName  =  header.readUnsignedByte();  nid  =  nid;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    nid;    fileName  =  header.readUnsignedByte();  nid  =  nid;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  fileName	128	None	add
660	[BUG]  [BUGGY]  nid  =  nid;  ((  RandomAccessFile)nid).setDataInput(fileName);  nid  =  nid;  [CE]  inconvertible  types  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  ((  RandomAccessFile)nid).setDataInput(fileName);  nid  =  nid;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    nid;    ((  RandomAccessFile)nid).setDataInput(fileName);  nid  =  nid;	  	non-compiled	[CE]  inconvertible  types	128	None	add
661	[BUG]  [BUGGY]  nid  =  nid;  ((  RandomAccessFile)nid).setInputStream(inputStreamStack,  fileName);  nid  =  nid;  [CE]  cannot  find  symbol  inputStreamStack  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  ((  RandomAccessFile)nid).setInputStream(inputStreamStack,  fileName);  nid  =  nid;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    nid;    ((  RandomAccessFile)nid).setInputStream(inputStreamStack,  fileName);  nid  =  nid;	  	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	128	None	add
662	[BUG]  [BUGGY]  nid  =  nid;  int  nid  =  nid;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  int  nid  =  nid;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    nid;    int  nid  =  nid;	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	128	None	add
663	[BUG]  [BUGGY]  nid  =  nid;  ((  RandomAccessFile)nid).setValue(fileName);  nid  =  nid;  [CE]  inconvertible  types  [FE]                  IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  ((  RandomAccessFile)nid).setValue(fileName);  nid  =  nid;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    nid;    ((  RandomAccessFile)nid).setValue(fileName);  nid  =  nid;	  	non-compiled	[CE]  inconvertible  types	128	None	add
664	[BUG]  [BUGGY]  nid  =  NID.substring(0,  nid  +  1);  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.substring(0,  nid  +  1);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.substring(0,  nid  +  1);	  nid    =    NID.substring(0,    nid);    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
665	[BUG]  [BUGGY]  nid  =  NID.substring(0,  nid).trim();  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.substring(0,  nid).trim();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.substring(0,  nid).trim();	  nid    =    NID.substring(0,    nid);    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
666	[BUG]  [BUGGY]  NID  nid  =  NID.substring(0,  nid);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID  nid  =  NID.substring(0,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID  nid  =  NID.substring(0,  nid);	  nid    =    NID.substring(0,    nid);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	168	None	replace
667	[BUG]  [BUGGY]  nid  =  NID.substring(0,  nid-1);  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.substring(0,  nid-1);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.substring(0,  nid-1);	  nid    =    NID.substring(0,    nid);    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
668	[BUG]  [BUGGY]  nid  =  NID.substring(0,  nid  +  2);  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.substring(0,  nid  +  2);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.substring(0,  nid  +  2);	  nid    =    NID.substring(0,    nid);    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
669	[BUG]  [BUGGY]  nid  =  UID.substring(0,  nid);  [CE]  cannot  find  symbol  UID  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  UID.substring(0,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  UID.substring(0,  nid);	  nid    =    NID.substring(0,    nid);    	non-compiled	[CE]  cannot  find  symbol  UID	168	None	replace
670	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(header,  nid);  [CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;  [FE]        EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte(header,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte(header,  nid);	  nid    =    file.readUnsignedByte(nid);    	non-compiled	[CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;	151	None	replace
671	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(nid,  NID.kUnpackInfo);  [CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte(nid,  NID.kUnpackInfo);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte(nid,  NID.kUnpackInfo);	  nid    =    file.readUnsignedByte(nid);    	non-compiled	[CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;	151	None	replace
672	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(nid,  archive.folders);  [CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte(nid,  archive.folders);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte(nid,  archive.folders);	  nid    =    file.readUnsignedByte(nid);    	non-compiled	[CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;	151	None	replace
673	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(NID.kUnpackInfo,  nid);  [CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte(NID.kUnpackInfo,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte(NID.kUnpackInfo,  nid);	  nid    =    file.readUnsignedByte(nid);    	non-compiled	[CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;	151	None	replace
674	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(inputStreamStack,  nid);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte(inputStreamStack,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte(inputStreamStack,  nid);	  nid    =    file.readUnsignedByte(nid);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	151	None	replace
675	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(nid,  NID.kPackInfo);  [CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;  [FE]                  EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte(nid,  NID.kPackInfo);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte(nid,  NID.kPackInfo);	  nid    =    file.readUnsignedByte(nid);    	non-compiled	[CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;	151	None	replace
676	[BUG]  [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.peek();  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.peek();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.peek();  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.peek();    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
677	[BUG]  [BUGGY]  InputStream  file  =  currentFolderInputStream.peek();  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  InputStream  file  =  currentFolderInputStream.peek();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	InputStream  file  =  currentFolderInputStream.peek();  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.peek();    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
678	[BUG]  [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.peek();  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.peek();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.peek();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.peek();    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
679	[BUG]  [BUGGY]  InputStream  nid  =  NID.kSubStreamsInfo;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  InputStream  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	InputStream  nid  =  NID.kSubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    InputStream    nid    =    NID.kSubStreamsInfo;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	80	None	replace
680	[BUG]  [BUGGY]  int  nid  =  NID.kSubStreamsInfo;  InputStream  nid  =  NID.kSubStreamsInfo;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  NID.kSubStreamsInfo;  InputStream  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  NID.kSubStreamsInfo;  InputStream  nid  =  NID.kSubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    InputStream    nid    =    NID.kSubStreamsInfo;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	80	None	replace
681	[BUG]  [BUGGY]  Nid  nid  =  NID.kSubStreamsInfo;  [CE]  cannot  find  symbol  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  Nid  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	Nid  nid  =  NID.kSubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    InputStream    nid    =    NID.kSubStreamsInfo;    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
682	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	152	12	add
683	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	152	12	add
684	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  int  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  int  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    int  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	152	None	add
685	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  InputStream  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  InputStream  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    InputStream  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	152	None	add
686	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  nid  =  NID.kUnpackInfo;  if(nid!=  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    nid  =  NID.kUnpackInfo;  if(nid!=  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	152	12	add
687	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  nid  =  NID.kUnpackInfo;  if(nid!=  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  nid  =  NID.kUnpackInfo;  if(nid!=  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    nid  =  NID.kUnpackInfo;  if(nid!=  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	152	12	add
688	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  DataInput  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  DataInput  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    DataInput  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	152	None	add
689	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]              java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	152	12	add
690	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]              java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	152	12	add
691	[BUG]  [BUGGY]  nid  =  inputStreamStack.readUnsignedByte(NID.kUnpackInfo);  [CE]  cannot  find  symbol  inputStreamStack  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  inputStreamStack.readUnsignedByte(NID.kUnpackInfo);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  inputStreamStack.readUnsignedByte(NID.kUnpackInfo);	  nid    =    header.readUnsignedByte(NID.kUnpackInfo);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	2	None	replace
692	[BUG]  [BUGGY]  ((  RandomAccessFile)file).folders.add(nid);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  folders  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  ((  RandomAccessFile)file).folders.add(nid);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	((  RandomAccessFile)file).folders.add(nid);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    ((    RandomAccessFile)file).folders.add(nid);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  folders	45	None	replace
693	[BUG]  [BUGGY]  int  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid);  nid  =  file.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    ((    RandomAccessFile)file).folders.add(nid);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	45	None	replace
694	[BUG]  [BUGGY]  Integer  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid);  nid  =  file.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                  EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  Integer  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	Integer  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    ((    RandomAccessFile)file).folders.add(nid);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	45	None	replace
695	[BUG]  [BUGGY]  NID.kSubStreamsInfo  =  file.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid);  nid  =  file.readUnsignedByte();  [CE]  cannot  assign  a  value  to  final  variable  kSubStreamsInfo  [FE]                    EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID.kSubStreamsInfo  =  file.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID.kSubStreamsInfo  =  file.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    ((    RandomAccessFile)file).folders.add(nid);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  kSubStreamsInfo	45	None	replace
696	[BUG]  [BUGGY]  ((  RandomAccessFile)file).folders.add(nid,  NID.kUnpackInfo);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  folders  [FE]                      EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  ((  RandomAccessFile)file).folders.add(nid,  NID.kUnpackInfo);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	((  RandomAccessFile)file).folders.add(nid,  NID.kUnpackInfo);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    ((    RandomAccessFile)file).folders.add(nid);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  folders	45	None	replace
697	[BUG]  [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  cannot  find  symbol  bytesInfo  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol  bytesInfo	144	None	replace
698	[BUG]  [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [CE]  cannot  find  symbol  bytesInfo  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol  bytesInfo	144	None	replace
699	[BUG]  [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[  [CE]  illegal  start  of  expression  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
700	[BUG]  [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  [CE]  'else'  without  'if'  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  'else'  without  'if'	144	None	replace
701	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Fold  [CE]  '('  or  '['  expected  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Fold  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Fold	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  '('  or  '['  expected	144	None	replace
702	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  cannot  find  symbol  [FE]              java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
703	[BUG]  [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0]  [CE]  ';'  expected  [FE]                java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0]  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0]	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  ';'  expected	144	None	replace
704	[BUG]  [BUGGY]  int  nid  =  NID.kUnpackInfo(header);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  NID.kUnpackInfo(header);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  NID.kUnpackInfo(header);	  int    nid    =    NID.kUnpackInfo();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	52	None	replace
705	[BUG]  [BUGGY]  int  nid  =  NID.readUnpackInfo();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  NID.readUnpackInfo();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  NID.readUnpackInfo();	  int    nid    =    NID.kUnpackInfo();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	52	None	replace
706	[BUG]  [BUGGY]  int  nid  =  NID.kUnpackInfo(fileName);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  NID.kUnpackInfo(fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  NID.kUnpackInfo(fileName);	  int    nid    =    NID.kUnpackInfo();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	52	None	replace
707	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  NID.kSubStreamsInfo;  nid  =  NID.kSubStreamsInfo;  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        nid    =    NID.kSubStreamsInfo;    nid  =  NID.kSubStreamsInfo;  nid  =  NID.kSubStreamsInfo;	  	compilable	  [FE]  NoClassDefFoundError  	33	12	add
708	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  NID.kSubStreamsInfo;  nid  =  NID.kSubStreamsInfo;  nid  =  NID.kSubStreamsInfo;  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  NID.kSubStreamsInfo;  nid  =  NID.kSubStreamsInfo;  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        nid    =    NID.kSubStreamsInfo;    nid  =  NID.kSubStreamsInfo;  nid  =  NID.kSubStreamsInfo;	  	compilable	  [FE]  NoClassDefFoundError  	33	12	add
709	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  NID.kSubStreamsInfo;  int  nid  =  NID.kSubStreamsInfo;  nid  =  NID.kSubStreamsInfo;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  NID.kSubStreamsInfo;  int  nid  =  NID.kSubStreamsInfo;  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        nid    =    NID.kSubStreamsInfo;    int  nid  =  NID.kSubStreamsInfo;  nid  =  NID.kSubStreamsInfo;	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	33	None	add
710	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  NID.kSubStreamsInfo;  nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        nid    =    NID.kSubStreamsInfo;    nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kSubStreamsInfo;	  	compilable	  [FE]  NoClassDefFoundError  	33	12	add
711	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  NID.kSubStreamsInfo;  nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kSubStreamsInfo;  [FE]  NoClassDefFoundError  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  NID.kSubStreamsInfo;  nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        nid    =    NID.kSubStreamsInfo;    nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kSubStreamsInfo;	  	compilable	  [FE]  NoClassDefFoundError  	33	12	add
712	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  NID.kSubStreamsInfo;  nid  =  NID.kSubStreamsInfo;  nid  =  NID.ksubStreamsInfo;  [CE]  cannot  find  symbol  ksubStreamsInfo  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  NID.kSubStreamsInfo;  nid  =  NID.kSubStreamsInfo;  nid  =  NID.ksubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        nid    =    NID.kSubStreamsInfo;    nid  =  NID.kSubStreamsInfo;  nid  =  NID.ksubStreamsInfo;	  	non-compiled	[CE]  cannot  find  symbol  ksubStreamsInfo	33	None	add
713	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  NID.kSubStreamsInfo;  nid  =  NID.ksubStreamsInfo;  nid  =  NID.kSubStreamsInfo;  [CE]  cannot  find  symbol  ksubStreamsInfo  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  NID.kSubStreamsInfo;  nid  =  NID.ksubStreamsInfo;  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        nid    =    NID.kSubStreamsInfo;    nid  =  NID.ksubStreamsInfo;  nid  =  NID.kSubStreamsInfo;	  	non-compiled	[CE]  cannot  find  symbol  ksubStreamsInfo	33	None	add
714	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  NID.kSubStreamsInfo;  nid  =  NID.kSubStreamsINFO;  nid  =  NID.kSubStreamsInfo;  [CE]  cannot  find  symbol  kSubStreamsINFO  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  NID.kSubStreamsInfo;  nid  =  NID.kSubStreamsINFO;  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        nid    =    NID.kSubStreamsInfo;    nid  =  NID.kSubStreamsINFO;  nid  =  NID.kSubStreamsInfo;	  	non-compiled	[CE]  cannot  find  symbol  kSubStreamsINFO	33	None	add
715	[BUG]  [BUGGY]  nid  =  NID.bytesUnpackInfo.length;  [CE]  cannot  find  symbol  bytesUnpackInfo  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesUnpackInfo.length;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesUnpackInfo.length;	  nid    =    NID.bytesUnpackInfo;    	non-compiled	[CE]  cannot  find  symbol  bytesUnpackInfo	89	None	replace
716	[BUG]  [BUGGY]  nid  =  NID.bytesUnpackInfo  +  1;  [CE]  cannot  find  symbol  bytesUnpackInfo  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesUnpackInfo  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesUnpackInfo  +  1;	  nid    =    NID.bytesUnpackInfo;    	non-compiled	[CE]  cannot  find  symbol  bytesUnpackInfo	89	None	replace
717	[BUG]  [BUGGY]  archive.folders  =  new  LinkedList  <  String>();  [CE]  incompatible  types  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  LinkedList  <  String>();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  LinkedList  <  String>();	          archive.folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  incompatible  types	16	None	replace
718	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  String>(nid);  [CE]  incompatible  types  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList  <  String>(nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList  <  String>(nid);	          archive.folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  incompatible  types	16	None	replace
719	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  String>(1);  [CE]  incompatible  types  [FE]                        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList  <  String>(1);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList  <  String>(1);	          archive.folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  incompatible  types	16	None	replace
720	[BUG]  [BUGGY]  archive.folders  =  new  TreeSet  <  String>();  [CE]  cannot  find  symbol  [FE]                          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  TreeSet  <  String>();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  TreeSet  <  String>();	          archive.folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
721	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  String>(2);  [CE]  incompatible  types  [FE]                            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList  <  String>(2);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList  <  String>(2);	          archive.folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  incompatible  types	16	None	replace
722	[BUG]  [BUGGY]  nid  =  archive.readUnpackInfo(header,  NID);  [CE]  cannot  find  symbol  NID  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  archive.readUnpackInfo(header,  NID);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  archive.readUnpackInfo(header,  NID);	  nid    =    NID.readUnpackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  NID	66	None	replace
723	[BUG]  [BUGGY]  nid  =  NID.readUnpackInfo(header,  archive).folders;  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnpackInfo(header,  archive).folders;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnpackInfo(header,  archive).folders;	  nid    =    NID.readUnpackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
724	[BUG]  [BUGGY]  nid  =  header.readUnpackInfo(NID.kUnpackInfo);  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnpackInfo(NID.kUnpackInfo);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnpackInfo(NID.kUnpackInfo);	  nid    =    NID.readUnpackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
725	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE  +  1;	  nid    =    NID.kUnpackInfo;    nid    =    SIGNATURE_HEADER_SIZE;    	compilable	  [FE]  IOException  	24	12	replace
726	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE  +  1;  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE  +  1;	  nid    =    NID.kUnpackInfo;    nid    =    SIGNATURE_HEADER_SIZE;    	compilable	  [FE]  IOException  	24	12	replace
727	[BUG]  [BUGGY]  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  -  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  NID.kUnpackInfo  -  SIGNATURE_HEADER_SIZE;	  nid    =    NID.kUnpackInfo;    nid    =    SIGNATURE_HEADER_SIZE;    	compilable	  [FE]  IOException  	24	12	replace
728	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  -  SIGNATURE_HEADER_SIZE;  [FE]  IOException  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  -  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo  -  SIGNATURE_HEADER_SIZE;	  nid    =    NID.kUnpackInfo;    nid    =    SIGNATURE_HEADER_SIZE;    	compilable	  [FE]  IOException  	24	12	replace
729	[BUG]  [BUGGY]  [FE]  IOException  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE  +  2;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE  +  2;	  nid    =    NID.kUnpackInfo;    nid    =    SIGNATURE_HEADER_SIZE;    	compilable	  [FE]  IOException  	24	12	replace
730	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE  +  2;  [FE]  IOException  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE  +  2;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE  +  2;	  nid    =    NID.kUnpackInfo;    nid    =    SIGNATURE_HEADER_SIZE;    	compilable	  [FE]  IOException  	24	12	replace
731	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo;  System.arraycopy(currentFolder,  0,  nid);  [CE]  cannot  find  symbol  currentFolder  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  System.arraycopy(currentFolder,  0,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo;  System.arraycopy(currentFolder,  0,  nid);	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    System.arraycopy(currentFolder,    0,    nid);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	26	None	replace
732	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo;  System.arraycopy(nid,  0,  nid);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  System.arraycopy(nid,  0,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo;  System.arraycopy(nid,  0,  nid);	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    System.arraycopy(currentFolder,    0,    nid);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	26	None	replace
733	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo;  System.arraycopy(header,  0,  nid);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  System.arraycopy(header,  0,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo;  System.arraycopy(header,  0,  nid);	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    System.arraycopy(currentFolder,    0,    nid);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	26	None	replace
734	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo;  System.arraycopy(fileName,  0,  nid);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  System.arraycopy(fileName,  0,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo;  System.arraycopy(fileName,  0,  nid);	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    System.arraycopy(currentFolder,    0,    nid);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	26	None	replace
735	[BUG]  [BUGGY]  NID  nid  =  NID.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID  nid  =  NID.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID  nid  =  NID.readUnsignedByte();	  NID    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	54	None	replace
736	[BUG]  [BUGGY]  NID  nid  =  header.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID  nid  =  header.readUnsignedByte()  +  1;	  NID    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	54	None	replace
737	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    ((    RandomAccessFile)file).readUnsignedByte();    nid    =    file.readUnsignedByte();    	compilable	  [FE]  EOFException  	124	12	replace
738	[BUG]  [BUGGY]  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    ((    RandomAccessFile)file).readUnsignedByte();    nid    =    file.readUnsignedByte();    	compilable	  [FE]  EOFException  	124	12	replace
739	[BUG]  [BUGGY]  int  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    ((    RandomAccessFile)file).readUnsignedByte();    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	124	None	replace
740	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  header.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    ((    RandomAccessFile)file).readUnsignedByte();    nid    =    file.readUnsignedByte();    	compilable	  [FE]  EOFException  	124	12	replace
741	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    ((    RandomAccessFile)file).readUnsignedByte();    nid    =    file.readUnsignedByte();    	compilable	  [FE]  EOFException  	124	12	replace
742	[BUG]  [BUGGY]  [FE]  EOFException  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;	  nid    =    header.readUnsignedByte()    +    1;    nid    =    head.readUnsignedByte()    +    1;    	compilable	  [FE]  EOFException  	98	12	replace
743	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;  [FE]  EOFException  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;	  nid    =    header.readUnsignedByte()    +    1;    nid    =    head.readUnsignedByte()    +    1;    	compilable	  [FE]  EOFException  	98	12	replace
744	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;  [CE]  int  cannot  be  dereferenced  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;	  nid    =    header.readUnsignedByte()    +    1;    nid    =    head.readUnsignedByte()    +    1;    	non-compiled	[CE]  int  cannot  be  dereferenced	98	None	replace
745	[BUG]  [BUGGY]  nid  =  head.readUnsignedByte();  nid  =  header.readUnsignedByte();  [CE]  cannot  find  symbol  head  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  head.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  head.readUnsignedByte();  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    nid    =    head.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol  head	98	None	replace
746	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo.readUnsignedByte();  nid  =  header.readUnsignedByte();  [CE]  int  cannot  be  dereferenced  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo.readUnsignedByte();  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    nid    =    head.readUnsignedByte()    +    1;    	non-compiled	[CE]  int  cannot  be  dereferenced	98	None	replace
747	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  reader.readUnsignedByte();  [CE]  cannot  find  symbol  reader  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  reader.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte();  nid  =  reader.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    nid    =    head.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol  reader	98	None	replace
748	[BUG]  [BUGGY]  nid  =  archive.kUnpackInfo(header,  NID);  [CE]  cannot  find  symbol  NID  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  archive.kUnpackInfo(header,  NID);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  archive.kUnpackInfo(header,  NID);	  nid    =    NID.kUnpackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  NID	165	None	replace
749	[BUG]  [BUGGY]  nid  =  header.kUnpackInfo(NID.kUnpackInfo(nid,  archive);  [CE]  ')'  expected  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.kUnpackInfo(NID.kUnpackInfo(nid,  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.kUnpackInfo(NID.kUnpackInfo(nid,  archive);	  nid    =    NID.kUnpackInfo(header,    archive);    	non-compiled	[CE]  ')'  expected	165	None	replace
750	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo(header,  archive).folders;  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo(header,  archive).folders;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo(header,  archive).folders;	  nid    =    NID.kUnpackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	165	None	replace
751	[BUG]  [BUGGY]  NID  nid  =  NID.kUnpackInfo(header,  archive);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID  nid  =  NID.kUnpackInfo(header,  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID  nid  =  NID.kUnpackInfo(header,  archive);	  nid    =    NID.kUnpackInfo(header,    archive);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	165	None	replace
752	[BUG]  [BUGGY]  nid  =  NID.SIGNATURE_HEADER_SIZE;  [CE]  cannot  find  symbol  SIGNATURE_HEADER_SIZE  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.SIGNATURE_HEADER_SIZE;	  nid    =    NID.fileName;    	non-compiled	[CE]  cannot  find  symbol  SIGNATURE_HEADER_SIZE	88	None	replace
753	[BUG]  [BUGGY]  nid  =  NID.symbol;  [CE]  cannot  find  symbol  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.symbol;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.symbol;	  nid    =    NID.fileName;    	non-compiled	[CE]  cannot  find  symbol  symbol	88	None	replace
754	[BUG]  [BUGGY]  nid  =  NID.byteValue;  [CE]  cannot  find  symbol  byteValue  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.byteValue;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.byteValue;	  nid    =    NID.fileName;    	non-compiled	[CE]  cannot  find  symbol  byteValue	88	None	replace
755	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  NoClassDefFoundError  	149	12	add
756	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  NoClassDefFoundError  	149	12	add
757	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  NoClassDefFoundError  	149	12	add
758	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  NoClassDefFoundError  	149	12	add
759	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  int  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  int  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    int  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	149	None	add
760	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid!=  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid!=  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	149	12	add
761	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid!=  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid!=  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid!=  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	149	12	add
762	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[  [CE]  ']'  expected  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[	  	non-compiled	[CE]  ']'  expected	149	None	add
763	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Fold  [CE]  '('  or  '['  expected  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Fold  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Fold	  	non-compiled	[CE]  '('  or  '['  expected	149	None	add
764	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]                NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[2];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[2];  }	  	compilable	  [FE]  NoClassDefFoundError  	149	12	add
765	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[2];  }  [FE]  NoClassDefFoundError  [FE]                NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[2];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[2];  }	  	compilable	  [FE]  NoClassDefFoundError  	149	12	add
766	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  DataInput  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                  NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  DataInput  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    DataInput  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	149	None	add
767	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  header.readUnsignedByte();  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    	compilable	  [FE]  EOFException  	155	12	replace
768	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  EOFException  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte();  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    	compilable	  [FE]  EOFException  	155	12	replace
769	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  header.readUnsignedByte();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	155	12	replace
770	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	155	12	replace
771	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[  [CE]  illegal  start  of  expression  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte();  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte();  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
772	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kPackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  cannot  find  symbol  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kPackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kPackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
773	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    	compilable	  [FE]  EOFException  	138	12	replace
774	[BUG]  [BUGGY]  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    	compilable	  [FE]  EOFException  	138	12	replace
775	[BUG]  [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [CE]  cannot  find  symbol  bytesInfo  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    	non-compiled	[CE]  cannot  find  symbol  bytesInfo	138	None	replace
776	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  [CE]  cannot  find  symbol  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte();  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte();  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
777	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  readStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  [CE]  cannot  find  symbol  [FE]          EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte();  readStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte();  readStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
778	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kPackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  NID.kPackInfo;	  nid    =    nid;    	compilable	  [FE]  IOException  	129	12	replace
779	[BUG]  [BUGGY]  nid  =  NID.kPackInfo;  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kPackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kPackInfo;	  nid    =    nid;    	compilable	  [FE]  IOException  	129	12	replace
780	[BUG]  [BUGGY]  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSize;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  NID.kSize;	  nid    =    nid;    	compilable	  [FE]  IOException  	129	12	replace
781	[BUG]  [BUGGY]  nid  =  NID.kSize;  [FE]  IOException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSize;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSize;	  nid    =    nid;    	compilable	  [FE]  IOException  	129	12	replace
782	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  nid  +  1;	  nid    =    nid;    	compilable	  [FE]  EOFException  	129	12	replace
783	[BUG]  [BUGGY]  nid  =  nid  +  1;  [FE]  EOFException  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  nid  +  1;	  nid    =    nid;    	compilable	  [FE]  EOFException  	129	12	replace
784	[BUG]  [BUGGY]  nid  =  NID.deferredByte();  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.deferredByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.deferredByte();	  nid    =    NID.deferredBlockInfo.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
785	[BUG]  [BUGGY]  nid  =  NID.kDeferredBlockInfo.readUnsignedByte();  [CE]  cannot  find  symbol  kDeferredBlockInfo  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kDeferredBlockInfo.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kDeferredBlockInfo.readUnsignedByte();	  nid    =    NID.deferredBlockInfo.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  kDeferredBlockInfo	87	None	replace
786	[BUG]  [BUGGY]  nid  =  NID.byteArrayInfo.readUnsignedByte();  [CE]  cannot  find  symbol  byteArrayInfo  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.byteArrayInfo.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.byteArrayInfo.readUnsignedByte();	  nid    =    NID.deferredBlockInfo.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  byteArrayInfo	87	None	replace
787	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  ((  NID.kUnpackInfo  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  NID.kUnpackInfo  +  1;  [CE]  not  a  statement  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  ((  NID.kUnpackInfo  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  NID.kUnpackInfo  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    NID.kUnpackInfo    +    1;    ((  NID.kUnpackInfo  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  NID.kUnpackInfo  +  1;	  	non-compiled	[CE]  not  a  statement	68	None	add
788	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  ((  NID.kUnpackInfo  +  1)  ==  NID.kUnpackInfo));  nid  =  NID.kUnpackInfo  +  1;  [CE]  not  a  statement  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  ((  NID.kUnpackInfo  +  1)  ==  NID.kUnpackInfo));  nid  =  NID.kUnpackInfo  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    NID.kUnpackInfo    +    1;    ((  NID.kUnpackInfo  +  1)  ==  NID.kUnpackInfo));  nid  =  NID.kUnpackInfo  +  1;	  	non-compiled	[CE]  not  a  statement	68	None	add
789	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  int  nid  =  NID.kUnpackInfo  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  int  nid  =  NID.kUnpackInfo  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    NID.kUnpackInfo    +    1;    int  nid  =  NID.kUnpackInfo  +  1;	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	68	None	add
790	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  ((  NID.kUnpackInfo  +  1)!=  NID.kUnpackInfo));  nid  =  NID.kUnpackInfo  +  1;  [CE]  not  a  statement  [FE]          EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  ((  NID.kUnpackInfo  +  1)!=  NID.kUnpackInfo));  nid  =  NID.kUnpackInfo  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    NID.kUnpackInfo    +    1;    ((  NID.kUnpackInfo  +  1)!=  NID.kUnpackInfo));  nid  =  NID.kUnpackInfo  +  1;	  	non-compiled	[CE]  not  a  statement	68	None	add
791	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  ((  NID.kUnpackInfo  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  SIGNATURE_HEADER_SIZE);  [CE]  not  a  statement  [FE]            EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  ((  NID.kUnpackInfo  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  SIGNATURE_HEADER_SIZE);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    NID.kUnpackInfo    +    1;    ((  NID.kUnpackInfo  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  SIGNATURE_HEADER_SIZE);	  	non-compiled	[CE]  not  a  statement	68	None	add
792	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  ((  NID.kUnpackInfo  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  SIGNATURE_HEADER_SIZE;  [CE]  not  a  statement  [FE]              EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  ((  NID.kUnpackInfo  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    NID.kUnpackInfo    +    1;    ((  NID.kUnpackInfo  +  1)  ==  NID.kUnpackInfo)?  header.readUnsignedByte()  :  SIGNATURE_HEADER_SIZE;	  	non-compiled	[CE]  not  a  statement	68	None	add
793	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  ((  NID.kUnpackInfo  +  1)  ==  NID.kUnpackInfo)?  NID.kUnpackInfo  +  1  :  NID.kUnpackInfo;  [CE]  not  a  statement  [FE]                EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  ((  NID.kUnpackInfo  +  1)  ==  NID.kUnpackInfo)?  NID.kUnpackInfo  +  1  :  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    NID.kUnpackInfo    +    1;    ((  NID.kUnpackInfo  +  1)  ==  NID.kUnpackInfo)?  NID.kUnpackInfo  +  1  :  NID.kUnpackInfo;	  	non-compiled	[CE]  not  a  statement	68	None	add
794	[BUG]  [BUGGY]  InputStream  file  =  currentFolderInputStream.get(nid  +  1);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  InputStream  file  =  currentFolderInputStream.get(nid  +  1);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	InputStream  file  =  currentFolderInputStream.get(nid  +  1);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.get(currentFolderIndex    +    1);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
795	[BUG]  [BUGGY]  InputStream  file  =  inputStreamStack.get(currentFolderIndex  +  1);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  inputStreamStack  [FE]                    EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  InputStream  file  =  inputStreamStack.get(currentFolderIndex  +  1);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	InputStream  file  =  inputStreamStack.get(currentFolderIndex  +  1);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.get(currentFolderIndex    +    1);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	126	None	replace
796	[BUG]  [BUGGY]  InputStream  file  =  currentFolderInputStream.get(nid  +  1);  [CE]  cannot  find  symbol  [FE]                      EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  InputStream  file  =  currentFolderInputStream.get(nid  +  1);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	InputStream  file  =  currentFolderInputStream.get(nid  +  1);	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.get(currentFolderIndex    +    1);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
797	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUn  [CE]  ';'  expected  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUn  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUn	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  ';'  expected	157	None	replace
798	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.fold  [CE]  not  a  statement  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.fold  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.fold	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  not  a  statement	157	None	replace
799	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Fold  [CE]  '('  or  '['  expected  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Fold  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Fold	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  '('  or  '['  expected	157	None	replace
800	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.  [CE]  <identifier>  expected  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  <identifier>  expected	157	None	replace
801	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  ni  [CE]  not  a  statement  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  ni  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  ni	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  not  a  statement	157	None	replace
802	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo  [CE]  ';'  expected  [FE]              java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  ';'  expected	157	None	replace
803	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  [CE]  not  a  statement  [FE]                java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  not  a  statement	157	None	replace
804	[BUG]  [BUGGY]  nid  =  nID.readUnsignedInt();  [CE]  cannot  find  symbol  nID  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nID.readUnsignedInt();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  nID.readUnsignedInt();	  nid    =    nid.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol  nID	170	None	replace
805	[BUG]  [BUGGY]  nid  =  inputStreamStack.readUnsignedInt();  [CE]  cannot  find  symbol  inputStreamStack  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  inputStreamStack.readUnsignedInt();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  inputStreamStack.readUnsignedInt();	  nid    =    nid.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	170	None	replace
806	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolder,  fileName,  nid);  [CE]  cannot  find  symbol  currentFolder  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolder,  fileName,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(currentFolder,  fileName,  nid);	  nid    =    header.readUnsignedByte(fileName,    nid);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	106	None	replace
807	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(data,  fileName,  nid);  [CE]  cannot  find  symbol  data  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(data,  fileName,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(data,  fileName,  nid);	  nid    =    header.readUnsignedByte(fileName,    nid);    	non-compiled	[CE]  cannot  find  symbol  data	106	None	replace
808	[BUG]  [BUGGY]  NID  nid  =  header.readUnsignedInt()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID  nid  =  header.readUnsignedInt()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID  nid  =  header.readUnsignedInt()  +  1;	  nid    =    header.readUnsignedInt()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	100	None	replace
809	[BUG]  [BUGGY]  nid  =  source.readUnsignedInt()  +  1;  [CE]  cannot  find  symbol  source  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  source.readUnsignedInt()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  source.readUnsignedInt()  +  1;	  nid    =    header.readUnsignedInt()    +    1;    	non-compiled	[CE]  cannot  find  symbol  source	100	None	replace
810	[BUG]  [BUGGY]  nid  =  nid;  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  System.arraycopy(fileName,  0,  nid,  SIGNATURE_HEADER_SIZE,  SIGNATURE_HEADER_SIZE);  [CE]  'else'  without  'if'  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  System.arraycopy(fileName,  0,  nid,  SIGNATURE_HEADER_SIZE,  SIGNATURE_HEADER_SIZE);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    nid;    nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  System.arraycopy(fileName,  0,  nid,  SIGNATURE_HEADER_SIZE,  SIGNATURE_HEADER_SIZE);	  	non-compiled	[CE]  'else'  without  'if'	128	None	add
811	[BUG]  [BUGGY]  nid  =  nid;  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  System.arraycopy(fileName,  0,  nid,  SIGNATURE_HEADER_SIZE,  SIGNATURE_HEADER_SIZE);  fileName  =  NID.  [CE]  'else'  without  'if'  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  System.arraycopy(fileName,  0,  nid,  SIGNATURE_HEADER_SIZE,  SIGNATURE_HEADER_SIZE);  fileName  =  NID.  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    nid;    nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  System.arraycopy(fileName,  0,  nid,  SIGNATURE_HEADER_SIZE,  SIGNATURE_HEADER_SIZE);  fileName  =  NID.	  	non-compiled	[CE]  'else'  without  'if'	128	None	add
812	[BUG]  [BUGGY]  nid  =  nid;  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  System.arraycopy(fileName,  0,  nid,  SIGNATURE_HEADER_SIZE,  SIGNATURE_HEADER_SIZE);  currentFolderIndex  =  inputStreamStack.size();  [CE]  'else'  without  'if'  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  System.arraycopy(fileName,  0,  nid,  SIGNATURE_HEADER_SIZE,  SIGNATURE_HEADER_SIZE);  currentFolderIndex  =  inputStreamStack.size();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    nid;    nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  System.arraycopy(fileName,  0,  nid,  SIGNATURE_HEADER_SIZE,  SIGNATURE_HEADER_SIZE);  currentFolderIndex  =  inputStreamStack.size();	  	non-compiled	[CE]  'else'  without  'if'	128	None	add
813	[BUG]  [BUGGY]  nid  =  nid;  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  System.arraycopy(fileName,  0,  nid,  SIGNATURE_HEADER_SIZE,  SIGNATURE_HEADER_SIZE);  currentFolderIndex  =  inputStreamStack.  [CE]  'else'  without  'if'  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  System.arraycopy(fileName,  0,  nid,  SIGNATURE_HEADER_SIZE,  SIGNATURE_HEADER_SIZE);  currentFolderIndex  =  inputStreamStack.  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    nid;    nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  System.arraycopy(fileName,  0,  nid,  SIGNATURE_HEADER_SIZE,  SIGNATURE_HEADER_SIZE);  currentFolderIndex  =  inputStreamStack.	  	non-compiled	[CE]  'else'  without  'if'	128	None	add
814	[BUG]  [BUGGY]  nid  =  nid;  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  System.arraycopy(fileName,  0,  nid,  SIGNATURE_HEADER_SIZE,  SIGNATURE_HEADER_SIZE);  currentFolderIndex  =  inputStreamStack.peek();  [CE]  'else'  without  'if'  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  System.arraycopy(fileName,  0,  nid,  SIGNATURE_HEADER_SIZE,  SIGNATURE_HEADER_SIZE);  currentFolderIndex  =  inputStreamStack.peek();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    nid;    nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  System.arraycopy(fileName,  0,  nid,  SIGNATURE_HEADER_SIZE,  SIGNATURE_HEADER_SIZE);  currentFolderIndex  =  inputStreamStack.peek();	  	non-compiled	[CE]  'else'  without  'if'	128	None	add
815	[BUG]  [BUGGY]  nid  =  nid;  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  System.arraycopy(fileName,  0,  nid,  SIGNATURE_HEADER_SIZE,  SIGNATURE_HEADER_SIZE);  currentFolderIndex  =  firstPackStreamIndex;  [CE]  'else'  without  'if'  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  System.arraycopy(fileName,  0,  nid,  SIGNATURE_HEADER_SIZE,  SIGNATURE_HEADER_SIZE);  currentFolderIndex  =  firstPackStreamIndex;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    nid;    nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  System.arraycopy(fileName,  0,  nid,  SIGNATURE_HEADER_SIZE,  SIGNATURE_HEADER_SIZE);  currentFolderIndex  =  firstPackStreamIndex;	  	non-compiled	[CE]  'else'  without  'if'	128	None	add
816	[BUG]  [BUGGY]  nid  =  nid;  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  System.arraycopy(fileName,  0,  nid,  SIGNATURE_HEADER_SIZE,  SIGNATURE_HEADER_SIZE);  deferredBlockStreams  =  new  [CE]  '('  or  '['  expected  [FE]                IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  System.arraycopy(fileName,  0,  nid,  SIGNATURE_HEADER_SIZE,  SIGNATURE_HEADER_SIZE);  deferredBlockStreams  =  new  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    nid;    nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  System.arraycopy(fileName,  0,  nid,  SIGNATURE_HEADER_SIZE,  SIGNATURE_HEADER_SIZE);  deferredBlockStreams  =  new	  	non-compiled	[CE]  '('  or  '['  expected	128	None	add
817	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  NID.kSubStreamsInfo;  nid  =  NID.kSubStreamsinfo;  nid  =  NID.kSubStreamsInfo;  [CE]  cannot  find  symbol  kSubStreamsinfo  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  NID.kSubStreamsInfo;  nid  =  NID.kSubStreamsinfo;  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        nid    =    NID.kSubStreamsInfo;    nid  =  NID.kSubStreamsinfo;  nid  =  NID.kSubStreamsInfo;	  	non-compiled	[CE]  cannot  find  symbol  kSubStreamsinfo	33	None	add
818	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  NID.kSubStreamsInfo;  nid  =  NID.kSubStreamsInfo;  nid  =  NID.kSubStreamsINFO;  [CE]  cannot  find  symbol  kSubStreamsINFO  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  NID.kSubStreamsInfo;  nid  =  NID.kSubStreamsInfo;  nid  =  NID.kSubStreamsINFO;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        nid    =    NID.kSubStreamsInfo;    nid  =  NID.kSubStreamsInfo;  nid  =  NID.kSubStreamsINFO;	  	non-compiled	[CE]  cannot  find  symbol  kSubStreamsINFO	33	None	add
819	[BUG]  [BUGGY]  int  nid  =  file.readUnsignedInt();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  file.readUnsignedInt();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  file.readUnsignedInt();	  int    nid    =    header.readUnsignedInt();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	73	None	replace
820	[BUG]  [BUGGY]  [FE]  IOException  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    System.arraycopy(currentFolder,    0,    nid,    currentFolderIndex);    	compilable	  [FE]  IOException  	63	12	replace
821	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  [FE]  IOException  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    System.arraycopy(currentFolder,    0,    nid,    currentFolderIndex);    	compilable	  [FE]  IOException  	63	12	replace
822	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  System.arra  [CE]  not  a  statement  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  System.arra  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  System.arra	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    System.arraycopy(currentFolder,    0,    nid,    currentFolderIndex);    	non-compiled	[CE]  not  a  statement	63	None	replace
823	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  System.  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  System.  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  System.	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    System.arraycopy(currentFolder,    0,    nid,    currentFolderIndex);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
824	[BUG]  [BUGGY]  [FE]  IOException  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    System.arraycopy(currentFolder,    0,    nid,    currentFolderIndex);    	compilable	  [FE]  IOException  	63	12	replace
825	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  [FE]  IOException  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    System.arraycopy(currentFolder,    0,    nid,    currentFolderIndex);    	compilable	  [FE]  IOException  	63	12	replace
826	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  System.  [CE]  <identifier>  expected  [FE]                        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  System.  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  System.	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    System.arraycopy(currentFolder,    0,    nid,    currentFolderIndex);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
827	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  fileName);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(currentFolderIndex,  fileName);	  nid    =    header.readUnsignedByte(currentFolderIndex);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	79	None	replace
828	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(fileName,  currentFolderIndex);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(fileName,  currentFolderIndex);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(fileName,  currentFolderIndex);	  nid    =    header.readUnsignedByte(currentFolderIndex);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	79	None	replace
829	[BUG]  [BUGGY]  nid  =  UID.bytesUnpackInfo();  [CE]  cannot  find  symbol  UID  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  UID.bytesUnpackInfo();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  UID.bytesUnpackInfo();	  nid    =    NID.bytesUnpackInfo();    	non-compiled	[CE]  cannot  find  symbol  UID	94	None	replace
830	[BUG]  [BUGGY]  nid  =  JID.bytesUnpackInfo();  [CE]  cannot  find  symbol  JID  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  JID.bytesUnpackInfo();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  JID.bytesUnpackInfo();	  nid    =    NID.bytesUnpackInfo();    	non-compiled	[CE]  cannot  find  symbol  JID	94	None	replace
831	[BUG]  [BUGGY]  nid  =  NID.bytes[0];  [CE]  cannot  find  symbol  bytes  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytes[0];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytes[0];	  nid    =    NID.bytes;    	non-compiled	[CE]  cannot  find  symbol  bytes	31	None	replace
832	[BUG]  [BUGGY]  nid  =  NID.bytes  +  1;  [CE]  cannot  find  symbol  bytes  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytes  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytes  +  1;	  nid    =    NID.bytes;    	non-compiled	[CE]  cannot  find  symbol  bytes	31	None	replace
833	[BUG]  [BUGGY]  nid  =  NID.bytes  |  NID.bytes;  [CE]  cannot  find  symbol  bytes  [FE]                  EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytes  |  NID.bytes;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytes  |  NID.bytes;	  nid    =    NID.bytes;    	non-compiled	[CE]  cannot  find  symbol  bytes	31	None	replace
834	[BUG]  [BUGGY]  nid  =  UID.kUnpackInfo(header,  archive);  [CE]  cannot  find  symbol  UID  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  UID.kUnpackInfo(header,  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  UID.kUnpackInfo(header,  archive);	  nid    =    NID.kUnpackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  UID	165	None	replace
835	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo(header,  archives);  [CE]  cannot  find  symbol  archives  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo(header,  archives);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo(header,  archives);	  nid    =    NID.kUnpackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  archives	165	None	replace
836	[BUG]  [BUGGY]  nid  =  NID.bytesUnpackInfo;  nid  =  NID.kUnpackInfo;  [CE]  cannot  find  symbol  bytesUnpackInfo  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesUnpackInfo;  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesUnpackInfo;  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    	non-compiled	[CE]  cannot  find  symbol  bytesUnpackInfo	25	None	replace
837	[BUG]  [BUGGY]  nid  =  NID.bytesUnderSize;  nid  =  NID.kUnpackInfo;  [CE]  cannot  find  symbol  bytesUnderSize  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesUnderSize;  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesUnderSize;  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    	non-compiled	[CE]  cannot  find  symbol  bytesUnderSize	25	None	replace
838	[BUG]  [BUGGY]  nid  =  NID.byteArray;  nid  =  NID.kUnpackInfo;  [CE]  cannot  find  symbol  byteArray  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.byteArray;  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.byteArray;  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    	non-compiled	[CE]  cannot  find  symbol  byteArray	25	None	replace
839	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte();  file.folders  =  new  ArrayList  <  RandomAccessFile>(NID.folders);  [CE]  cannot  find  symbol  folders  [FE]                  EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte();  file.folders  =  new  ArrayList  <  RandomAccessFile>(NID.folders);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte();  file.folders  =  new  ArrayList  <  RandomAccessFile>(NID.folders);	  nid    =    file.readUnsignedByte();    file.folders    =    new    ArrayList    <    RandomAccessFile>(nid);    	non-compiled	[CE]  cannot  find  symbol  folders	47	None	replace
840	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte();  file.folders  =  new  ArrayList  <  RandomAccessFile>(NID.folder);  [CE]  cannot  find  symbol  folders  [FE]                    EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte();  file.folders  =  new  ArrayList  <  RandomAccessFile>(NID.folder);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte();  file.folders  =  new  ArrayList  <  RandomAccessFile>(NID.folder);	  nid    =    file.readUnsignedByte();    file.folders    =    new    ArrayList    <    RandomAccessFile>(nid);    	non-compiled	[CE]  cannot  find  symbol  folders	47	None	replace
841	[BUG]  [BUGGY]  int  nid  =  NID.kUnpackInfo  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  NID.kUnpackInfo  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  NID.kUnpackInfo  +  1;	  nid    =    NID.kUnpackInfo;    int    nid    =    NID.kUnpackInfo;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	20	None	replace
842	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  String>(8);  [CE]  incompatible  types  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList  <  String>(8);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList  <  String>(8);	          archive.folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  incompatible  types	16	None	replace
843	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  String>(4);  [CE]  incompatible  types  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList  <  String>(4);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList  <  String>(4);	          archive.folders    =    new    ArrayList    <    String>();    	non-compiled	[CE]  incompatible  types	16	None	replace
844	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    Integer    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	96	None	replace
845	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte();  Integer  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    Integer    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	96	None	replace
846	[BUG]  [BUGGY]  nid  =  nid.length;  [CE]  int  cannot  be  dereferenced  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid.length;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  nid.length;	  nid    =    NID.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	133	None	replace
847	[BUG]  [BUGGY]  nid  =  NID.length  +  1;  [CE]  cannot  find  symbol  length  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.length  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.length  +  1;	  nid    =    NID.length;    	non-compiled	[CE]  cannot  find  symbol  length	133	None	replace
848	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(header,  1);  [CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte(header,  1);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte(header,  1);	  nid    =    file.readUnsignedByte(1);    	non-compiled	[CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;	118	None	replace
849	[BUG]  [BUGGY]  nid  =  inputStreamStack.peek();  [CE]  cannot  find  symbol  inputStreamStack  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  inputStreamStack.peek();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  inputStreamStack.peek();	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	155	None	replace
850	[BUG]  [BUGGY]  nid  =  encodeStreams(archive.kUnpackInfo());  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  encodeStreams(archive.kUnpackInfo());  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  encodeStreams(archive.kUnpackInfo());	  nid    =    archive.kUnpackInfo();    	non-compiled	[CE]  cannot  find  symbol	166	None	replace
851	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(NID.kUnpackInfo,  NID.kPackInfo);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(NID.kUnpackInfo,  NID.kPackInfo);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(NID.kUnpackInfo,  NID.kPackInfo);	  nid    =    header.readUnsignedByte(NID.kUnpackInfo);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	2	None	replace
852	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(NID.kUnpackInfo,  fileName);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(NID.kUnpackInfo,  fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(NID.kUnpackInfo,  fileName);	  nid    =    header.readUnsignedByte(NID.kUnpackInfo);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	2	None	replace
853	[BUG]  [BUGGY]  nid  =  NID.folders  |  SIGNATURE_HEADER_SIZE;  [CE]  cannot  find  symbol  folders  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.folders  |  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.folders  |  SIGNATURE_HEADER_SIZE;	  nid    =    NID.folders;    	non-compiled	[CE]  cannot  find  symbol  folders	29	None	replace
854	[BUG]  [BUGGY]  nid  =  NID.folders  ||  nid  ==  SIGNATURE_HEADER_SIZE;  [CE]  cannot  find  symbol  folders  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.folders  ||  nid  ==  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.folders  ||  nid  ==  SIGNATURE_HEADER_SIZE;	  nid    =    NID.folders;    	non-compiled	[CE]  cannot  find  symbol  folders	29	None	replace
855	[BUG]  [BUGGY]  nid  =  file.getUnsignedByte();  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.getUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.getUnsignedByte();  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
856	[BUG]  [BUGGY]  nid  =  file.getName();  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.getName();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.getName();  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
857	[BUG]  [BUGGY]  nid  =  NID.folders;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  }  [CE]  cannot  find  symbol  folders  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.folders;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.folders;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    	non-compiled	[CE]  cannot  find  symbol  folders	164	None	replace
858	[BUG]  [BUGGY]  nid  =  NID.folders;  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  [CE]  cannot  find  symbol  folders  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.folders;  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.folders;  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    	non-compiled	[CE]  cannot  find  symbol  folders	164	None	replace
859	[BUG]  [BUGGY]  nid  =  NID.folders;  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  [CE]  cannot  find  symbol  folders  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.folders;  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.folders;  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    	non-compiled	[CE]  cannot  find  symbol  folders	164	None	replace
860	[BUG]  [BUGGY]  nid  =  NID.folderSize;  if(nid  ==  NID.folders)  {  readUnpackInfo(header,  archive);  }  [CE]  cannot  find  symbol  folderSize  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.folderSize;  if(nid  ==  NID.folders)  {  readUnpackInfo(header,  archive);  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.folderSize;  if(nid  ==  NID.folders)  {  readUnpackInfo(header,  archive);  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    	non-compiled	[CE]  cannot  find  symbol  folderSize	164	None	replace
861	[BUG]  [BUGGY]  nid  =  NID.folderSize;  if(nid  ==  NID.folderInfo)  {  readUnpackInfo(header,  archive);  }  [CE]  cannot  find  symbol  folderSize  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.folderSize;  if(nid  ==  NID.folderInfo)  {  readUnpackInfo(header,  archive);  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.folderSize;  if(nid  ==  NID.folderInfo)  {  readUnpackInfo(header,  archive);  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    	non-compiled	[CE]  cannot  find  symbol  folderSize	164	None	replace
862	[BUG]  [BUGGY]  nid  =  NID.folders;  if(nid  ==  NID.folders)  {  readUnpackInfo(header,  archive);  }  [CE]  cannot  find  symbol  folders  [FE]              java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.folders;  if(nid  ==  NID.folders)  {  readUnpackInfo(header,  archive);  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.folders;  if(nid  ==  NID.folders)  {  readUnpackInfo(header,  archive);  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    	non-compiled	[CE]  cannot  find  symbol  folders	164	None	replace
863	[BUG]  [BUGGY]  nid  =  NID.folders;  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  [CE]  ';'  expected  [FE]                java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.folders;  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.folders;  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    	non-compiled	[CE]  ';'  expected	164	None	replace
864	[BUG]  [BUGGY]  int  nid  =  file.readUnsignedByte();  Integer  nid  =  file.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  file.readUnsignedByte();  Integer  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  file.readUnsignedByte();  Integer  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    Integer    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	136	None	replace
865	[BUG]  [BUGGY]  nid  =  UID.KUnpackInfo();  [CE]  cannot  find  symbol  UID  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  UID.KUnpackInfo();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  UID.KUnpackInfo();	  nid    =    NID.KUnpackInfo();    	non-compiled	[CE]  cannot  find  symbol  UID	93	None	replace
866	[BUG]  [BUGGY]  nid  =  NID.KindPackInfo();  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.KindPackInfo();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.KindPackInfo();	  nid    =    NID.KUnpackInfo();    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
867	[BUG]  [BUGGY]  byte  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  byte  nid  =  header.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	byte  nid  =  header.readUnsignedByte();	          int    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	11	None	replace
868	[BUG]  [BUGGY]  nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolderIndex,  nid,  0,  archive.folders);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                  EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolderIndex,  nid,  0,  archive.folders);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolderIndex,  nid,  0,  archive.folders);	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    System.arraycopy(currentFolderIndex,    nid,    0,    archive.folders);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	39	None	replace
869	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo  +  1;  System.arraycopy(currentFolderIndex,  nid,  0,  archive.folders);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                    EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo  +  1;  System.arraycopy(currentFolderIndex,  nid,  0,  archive.folders);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo  +  1;  System.arraycopy(currentFolderIndex,  nid,  0,  archive.folders);	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    System.arraycopy(currentFolderIndex,    nid,    0,    archive.folders);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	39	None	replace
870	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo;  currentFolderIndex  =  nid;  System.arraycopy(currentFolderIndex,  nid,  0,  archive.folders);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                      EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo;  currentFolderIndex  =  nid;  System.arraycopy(currentFolderIndex,  nid,  0,  archive.folders);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo;  currentFolderIndex  =  nid;  System.arraycopy(currentFolderIndex,  nid,  0,  archive.folders);	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    System.arraycopy(currentFolderIndex,    nid,    0,    archive.folders);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	39	None	replace
871	[BUG]  [BUGGY]  nid  =  NID.folders;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  cannot  find  symbol  folders  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.folders;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.folders;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol  folders	142	None	replace
872	[BUG]  [BUGGY]  nid  =  NID.folders;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  cannot  find  symbol  folders  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.folders;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.folders;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol  folders	142	None	replace
873	[BUG]  [BUGGY]  nid  =  NID.folders;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[  [CE]  illegal  start  of  expression  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.folders;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.folders;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
874	[BUG]  [BUGGY]  nid  =  NID.inputStreamSize;  if(nid  ==  NID.inputStreamSize)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.inputStreamSize;  }  [CE]  cannot  find  symbol  inputStreamSize  [FE]          EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.inputStreamSize;  if(nid  ==  NID.inputStreamSize)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.inputStreamSize;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.inputStreamSize;  if(nid  ==  NID.inputStreamSize)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.inputStreamSize;  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol  inputStreamSize	142	None	replace
875	[BUG]  [BUGGY]  nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  InputStream  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  InputStream  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        file.readUnsignedByte();        nid    =    file.readUnsignedByte();    InputStream  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	41	None	add
876	[BUG]  [BUGGY]  nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  Integer  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  Integer  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        file.readUnsignedByte();        nid    =    file.readUnsignedByte();    Integer  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	41	None	add
877	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        file.readUnsignedByte();        nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();	  	compilable	  [FE]  EOFException  	41	12	add
878	[BUG]  [BUGGY]  nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        file.readUnsignedByte();        nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();	  	compilable	  [FE]  EOFException  	41	12	add
879	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  System.arraycopy(header,  0,  nid);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  System.arraycopy(header,  0,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  System.arraycopy(header,  0,  nid);	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    System.arraycopy(currentFolder,    0,    nid);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	26	None	replace
880	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  System.arraycopy(fileName,  0,  nid);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  System.arraycopy(fileName,  0,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  System.arraycopy(fileName,  0,  nid);	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    System.arraycopy(currentFolder,    0,    nid);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	26	None	replace
881	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  System.arraycopy(file,  0,  nid);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  System.arraycopy(file,  0,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  System.arraycopy(file,  0,  nid);	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    System.arraycopy(currentFolder,    0,    nid);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	26	None	replace
882	[BUG]  [BUGGY]  nid  =  header.readUnpackInfo(NID.readUnpackInfo(header,  archive);  [CE]  ')'  expected  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnpackInfo(NID.readUnpackInfo(header,  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnpackInfo(NID.readUnpackInfo(header,  archive);	  nid    =    NID.readUnpackInfo(header,    archive);    	non-compiled	[CE]  ')'  expected	66	None	replace
883	[BUG]  [BUGGY]  nid  =  header.readUnpackInfo(NID.readUnpackInfo(archive);  [CE]  ')'  expected  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnpackInfo(NID.readUnpackInfo(archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnpackInfo(NID.readUnpackInfo(archive);	  nid    =    NID.readUnpackInfo(header,    archive);    	non-compiled	[CE]  ')'  expected	66	None	replace
884	[BUG]  [BUGGY]  nid  =  UID.readUnpackInfo(header,  archive);  [CE]  cannot  find  symbol  UID  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  UID.readUnpackInfo(header,  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  UID.readUnpackInfo(header,  archive);	  nid    =    NID.readUnpackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  UID	66	None	replace
885	[BUG]  [BUGGY]  nid  =  header.readUnpackInfo(NID.readUnpackInfo(base,  archive);  [CE]  ')'  expected  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnpackInfo(NID.readUnpackInfo(base,  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnpackInfo(NID.readUnpackInfo(base,  archive);	  nid    =    NID.readUnpackInfo(header,    archive);    	non-compiled	[CE]  ')'  expected	66	None	replace
886	[BUG]  [BUGGY]  nid  =  currentFolder.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  currentFolder  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  currentFolder.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  currentFolder.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    ((    RandomAccessFile)file).folders.add(nid);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  currentFolder	45	None	replace
887	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  folders  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    ((    RandomAccessFile)file).folders.add(nid);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  folders	45	None	replace
888	[BUG]  [BUGGY]  nid  =  NID.byteSize;  [CE]  cannot  find  symbol  byteSize  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.byteSize;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.byteSize;	  nid    =    NID.fileName;    	non-compiled	[CE]  cannot  find  symbol  byteSize	88	None	replace
889	[BUG]  [BUGGY]  nid  =  source.intValue();  [CE]  cannot  find  symbol  source  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  source.intValue();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  source.intValue();	  nid    =    nid.intValue();    	non-compiled	[CE]  cannot  find  symbol  source	169	None	replace
890	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.get(fileName);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]        EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.get(fileName);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.get(fileName);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.get(fileName);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
891	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(header,  nid);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(header,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(header,  nid);	  nid    =    header.readUnsignedByte(inputStreamStack,    nid);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	105	None	replace
892	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolder,  nid);  [CE]  cannot  find  symbol  currentFolder  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolder,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(currentFolder,  nid);	  nid    =    header.readUnsignedByte(inputStreamStack,    nid);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	105	None	replace
893	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte(header,  archive);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte(header,  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte(header,  archive);	  nid    =    header.readUnsignedByte(nid,    NID.kUnpackInfo);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
894	[BUG]  [BUGGY]  nid  =  inputStreamStack.readUnsignedByte(header,  NID.kUnpackInfo);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  inputStreamStack.readUnsignedByte(header,  NID.kUnpackInfo);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  inputStreamStack.readUnsignedByte(header,  NID.kUnpackInfo);	  nid    =    header.readUnsignedByte(nid,    NID.kUnpackInfo);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	5	None	replace
895	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[4];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[4];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	161	12	add
896	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[4];  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[4];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[4];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	161	12	add
897	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(header);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  inputStreamStack  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(header);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(header);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.get(header);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	125	None	replace
898	[BUG]  [BUGGY]  nid  =  source.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(header);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  source  [FE]                  EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  source.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(header);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  source.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(header);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.get(header);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  source	125	None	replace
899	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.ksubStreamsInfo;  }  [CE]  cannot  find  symbol  ksubStreamsInfo  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.ksubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.ksubStreamsInfo;  }	  	non-compiled	[CE]  cannot  find  symbol  ksubStreamsInfo	139	None	add
900	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  InputStream  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  InputStream  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        nid    =    NID.kUnpackInfo;    InputStream  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	18	None	add
901	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  NID  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  [CE]  cannot  find  symbol  NID  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  NID  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        nid    =    NID.kUnpackInfo;    NID  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;	  	non-compiled	[CE]  cannot  find  symbol  NID	18	None	add
902	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  (nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  [CE]  ')'  expected  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  (nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        nid    =    NID.kUnpackInfo;    (nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo;	  	non-compiled	[CE]  ')'  expected	18	None	add
903	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kPackInfo)  {  writeUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kPackInfo)  {  writeUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kPackInfo)  {  writeUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    writeUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
904	[BUG]  [BUGGY]  nid  =  NID.KUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  writeUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [CE]  cannot  find  symbol  KUnpackInfo  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.KUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  writeUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.KUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  writeUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    writeUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    	non-compiled	[CE]  cannot  find  symbol  KUnpackInfo	160	None	replace
905	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.KUnpackInfo)  {  writeUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [CE]  cannot  find  symbol  KUnpackInfo  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.KUnpackInfo)  {  writeUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo;  if(nid  ==  NID.KUnpackInfo)  {  writeUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    writeUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    	non-compiled	[CE]  cannot  find  symbol  KUnpackInfo	160	None	replace
906	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.zUnpackInfo)  {  writeUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [CE]  cannot  find  symbol  zUnpackInfo  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.zUnpackInfo)  {  writeUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo;  if(nid  ==  NID.zUnpackInfo)  {  writeUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    writeUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    	non-compiled	[CE]  cannot  find  symbol  zUnpackInfo	160	None	replace
907	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(NID.kUnpackInfo,  NID.kUnpack);  [CE]  cannot  find  symbol  kUnpack  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(NID.kUnpackInfo,  NID.kUnpack);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(NID.kUnpackInfo,  NID.kUnpack);	  nid    =    header.readUnsignedByte(NID.kUnpackInfo,    nid);    	non-compiled	[CE]  cannot  find  symbol  kUnpack	107	None	replace
908	[BUG]  [BUGGY]  nid  =  NID.folders;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [CE]  cannot  find  symbol  folders  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.folders;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.folders;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    	non-compiled	[CE]  cannot  find  symbol  folders	138	None	replace
909	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [CE]  cannot  find  symbol  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
910	[BUG]  [BUGGY]  nid  =  NID.folders;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnsignedBlockInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [CE]  cannot  find  symbol  folders  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.folders;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnsignedBlockInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.folders;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnsignedBlockInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    	non-compiled	[CE]  cannot  find  symbol  folders	138	None	replace
911	[BUG]  [BUGGY]  nid  =  NID.folders;  if(nid  ==  NID.folders)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.folders;  }  [CE]  cannot  find  symbol  folders  [FE]          EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.folders;  if(nid  ==  NID.folders)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.folders;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.folders;  if(nid  ==  NID.folders)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.folders;  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    	non-compiled	[CE]  cannot  find  symbol  folders	138	None	replace
912	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  int  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  int  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    int  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	141	None	add
913	[BUG]  [BUGGY]  nid  =  0L;  [CE]  possible  loss  of  precision  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  0L;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  0L;	  nid    =    0;    	non-compiled	[CE]  possible  loss  of  precision	132	None	replace
914	[BUG]  [BUGGY]  nid  =  JsonDeserializer.SIGNATURE_HEADER_SIZE;  [CE]  cannot  find  symbol  JsonDeserializer  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  JsonDeserializer.SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  JsonDeserializer.SIGNATURE_HEADER_SIZE;	  nid    =    0;    	non-compiled	[CE]  cannot  find  symbol  JsonDeserializer	132	None	replace
915	[BUG]  [BUGGY]  nid  =  JsonDeserializer.DEFAULT_SIGNATURE_HEADER_SIZE;  [CE]  cannot  find  symbol  JsonDeserializer  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  JsonDeserializer.DEFAULT_SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  JsonDeserializer.DEFAULT_SIGNATURE_HEADER_SIZE;	  nid    =    0;    	non-compiled	[CE]  cannot  find  symbol  JsonDeserializer	132	None	replace
916	[BUG]  [BUGGY]  nid  =  JsonDeserializer.decodeJsonDeserializer(null,  header);  [CE]  cannot  find  symbol  JsonDeserializer  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  JsonDeserializer.decodeJsonDeserializer(null,  header);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  JsonDeserializer.decodeJsonDeserializer(null,  header);	  nid    =    0;    	non-compiled	[CE]  cannot  find  symbol  JsonDeserializer	132	None	replace
917	[BUG]  [BUGGY]  [FE]  EOFException  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo  +  1;  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  NID.kSubStreamsInfo  +  1;  nid  =  NID.kSubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  EOFException  	36	12	replace
918	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo  +  1;  nid  =  NID.kSubStreamsInfo;  [FE]  EOFException  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo  +  1;  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo  +  1;  nid  =  NID.kSubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  EOFException  	36	12	replace
919	[BUG]  [BUGGY]  [FE]  IOException  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo;  nid  =  NID.kPackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  NID.kSubStreamsInfo;  nid  =  NID.kPackInfo;	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.ksubStreamsInfo;    	compilable	  [FE]  IOException  	84	12	replace
920	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo;  nid  =  NID.kPackInfo;  [FE]  IOException  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo;  nid  =  NID.kPackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo;  nid  =  NID.kPackInfo;	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.ksubStreamsInfo;    	compilable	  [FE]  IOException  	84	12	replace
921	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo  +  1;  nid  =  NID.ksubStreamsInfo;  [CE]  cannot  find  symbol  ksubStreamsInfo  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo  +  1;  nid  =  NID.ksubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo  +  1;  nid  =  NID.ksubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.ksubStreamsInfo;    	non-compiled	[CE]  cannot  find  symbol  ksubStreamsInfo	84	None	replace
922	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo;  nid  =  NID.ksubStreamsInfo;  [CE]  cannot  find  symbol  ksubStreamsInfo  [FE]                  EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  nid  =  NID.ksubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo;  nid  =  NID.ksubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.ksubStreamsInfo;    	non-compiled	[CE]  cannot  find  symbol  ksubStreamsInfo	84	None	replace
923	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  InputStream  inputStreamStack  =  inputStreamStack.values().iterator().next();  nid  =  NID.kUnpackInfo  +  1;  [CE]  cannot  find  symbol  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  InputStream  inputStreamStack  =  inputStreamStack.values().iterator().next();  nid  =  NID.kUnpackInfo  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    NID.kUnpackInfo    +    1;    InputStream  inputStreamStack  =  inputStreamStack.values().iterator().next();  nid  =  NID.kUnpackInfo  +  1;	  	non-compiled	[CE]  cannot  find  symbol	68	None	add
924	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  InputStreamReader[inputStreamStack.size()  ]);  int  nid  =  NID.kUnpackInfo  +  1;  [CE]  cannot  find  symbol  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  InputStreamReader[inputStreamStack.size()  ]);  int  nid  =  NID.kUnpackInfo  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    NID.kUnpackInfo    +    1;    InputStream  inputStreamStack  =  inputStreamStack.toArray(new  InputStreamReader[inputStreamStack.size()  ]);  int  nid  =  NID.kUnpackInfo  +  1;	  	non-compiled	[CE]  cannot  find  symbol	68	None	add
925	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  InputStream  nid  =  NID.kUnpackInfo  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  InputStream  nid  =  NID.kUnpackInfo  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    NID.kUnpackInfo    +    1;    InputStream  nid  =  NID.kUnpackInfo  +  1;	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	68	None	add
926	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  ((  NID.kUnpackInfo  +  1)  ==  nid)?  NID.kUnpackInfo  +  1  :  SIGNATURE_HEADER_SIZE;  [CE]  not  a  statement  [FE]          EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  ((  NID.kUnpackInfo  +  1)  ==  nid)?  NID.kUnpackInfo  +  1  :  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    NID.kUnpackInfo    +    1;    ((  NID.kUnpackInfo  +  1)  ==  nid)?  NID.kUnpackInfo  +  1  :  SIGNATURE_HEADER_SIZE;	  	non-compiled	[CE]  not  a  statement	68	None	add
927	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  Integer  nid  =  NID.kUnpackInfo  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  Integer  nid  =  NID.kUnpackInfo  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    NID.kUnpackInfo    +    1;    Integer  nid  =  NID.kUnpackInfo  +  1;	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	68	None	add
928	[BUG]  [BUGGY]  nid  =  receiver.readUnsignedInt();  [CE]  cannot  find  symbol  receiver  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  receiver.readUnsignedInt();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  receiver.readUnsignedInt();	  nid    =    path.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol  receiver	171	None	replace
929	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(fileName,  header);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(fileName,  header);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(fileName,  header);	  nid    =    header.readUnsignedByte(nid,    fileName);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	7	None	replace
930	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolder,  fileName);  [CE]  cannot  find  symbol  currentFolder  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolder,  fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(currentFolder,  fileName);	  nid    =    header.readUnsignedByte(nid,    fileName);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	7	None	replace
931	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(fileName,  null);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(fileName,  null);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(fileName,  null);	  nid    =    header.readUnsignedByte(nid,    fileName);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	7	None	replace
932	[BUG]  [BUGGY]  nid  =  NID.deferredBlockStreams;  nid  =  SIGNATURE_HEADER_SIZE;  [CE]  cannot  find  symbol  deferredBlockStreams  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.deferredBlockStreams;  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.deferredBlockStreams;  nid  =  SIGNATURE_HEADER_SIZE;	  nid    =    NID.kSubStreamsInfo;    nid    =    SIGNATURE_HEADER_SIZE;    	non-compiled	[CE]  cannot  find  symbol  deferredBlockStreams	82	None	replace
933	[BUG]  [BUGGY]  nid  =  NID.bytesInfo;  nid  =  SIGNATURE_HEADER_SIZE;  [CE]  cannot  find  symbol  bytesInfo  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesInfo;  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesInfo;  nid  =  SIGNATURE_HEADER_SIZE;	  nid    =    NID.kSubStreamsInfo;    nid    =    SIGNATURE_HEADER_SIZE;    	non-compiled	[CE]  cannot  find  symbol  bytesInfo	82	None	replace
934	[BUG]  [BUGGY]  [FE]  IOException  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo  +  1;  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  NID.kSubStreamsInfo  +  1;  nid  =  SIGNATURE_HEADER_SIZE;	  nid    =    NID.kSubStreamsInfo;    nid    =    SIGNATURE_HEADER_SIZE;    	compilable	  [FE]  IOException  	82	12	replace
935	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo  +  1;  nid  =  SIGNATURE_HEADER_SIZE;  [FE]  IOException  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo  +  1;  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo  +  1;  nid  =  SIGNATURE_HEADER_SIZE;	  nid    =    NID.kSubStreamsInfo;    nid    =    SIGNATURE_HEADER_SIZE;    	compilable	  [FE]  IOException  	82	12	replace
936	[BUG]  [BUGGY]  nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolderIndex,  nid,  0,  nid);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                    EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolderIndex,  nid,  0,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolderIndex,  nid,  0,  nid);	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    System.arraycopy(currentFolderIndex,    nid,    0,    nid);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	40	None	replace
937	[BUG]  [BUGGY]  NID  nid  =  NID.kUnpackInfo(currentFolderIndex);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID  nid  =  NID.kUnpackInfo(currentFolderIndex);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID  nid  =  NID.kUnpackInfo(currentFolderIndex);	  NID    nid    =    NID.kUnpackInfo();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	49	None	replace
938	[BUG]  [BUGGY]  Integer  nid  =  header.readUnsignedByte();  ((  File)nid).readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  Integer  nid  =  header.readUnsignedByte();  ((  File)nid).readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	Integer  nid  =  header.readUnsignedByte();  ((  File)nid).readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    ((    File)nid).readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	134	None	replace
939	[BUG]  [BUGGY]  NID  nid  =  header.readUnsignedByte();  ((  File)nid).readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID  nid  =  header.readUnsignedByte();  ((  File)nid).readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID  nid  =  header.readUnsignedByte();  ((  File)nid).readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    ((    File)nid).readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	134	None	replace
940	[BUG]  [BUGGY]  nid  =  NID.deferredBlockStreams;  nid  =  NID.deferredBlockStreams;  [CE]  cannot  find  symbol  deferredBlockStreams  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.deferredBlockStreams;  nid  =  NID.deferredBlockStreams;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.deferredBlockStreams;  nid  =  NID.deferredBlockStreams;	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    	non-compiled	[CE]  cannot  find  symbol  deferredBlockStreams	34	None	replace
941	[BUG]  [BUGGY]  nid  =  NID.folders;  nid  =  NID.kSubStreamsInfo;  [CE]  cannot  find  symbol  folders  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.folders;  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.folders;  nid  =  NID.kSubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    	non-compiled	[CE]  cannot  find  symbol  folders	34	None	replace
942	[BUG]  [BUGGY]  nid  =  NID.inputStreamSize;  nid  =  NID.inputStreamSize;  [CE]  cannot  find  symbol  inputStreamSize  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.inputStreamSize;  nid  =  NID.inputStreamSize;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.inputStreamSize;  nid  =  NID.inputStreamSize;	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    	non-compiled	[CE]  cannot  find  symbol  inputStreamSize	34	None	replace
943	[BUG]  [BUGGY]  nid  =  NID.subStreamsInfo;  nid  =  NID.subStreamsInfo;  [CE]  cannot  find  symbol  subStreamsInfo  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.subStreamsInfo;  nid  =  NID.subStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.subStreamsInfo;  nid  =  NID.subStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    	non-compiled	[CE]  cannot  find  symbol  subStreamsInfo	34	None	replace
944	[BUG]  [BUGGY]  nid  =  NID.deferredBlockStreams;  nid  =  NID.kSubStreamsInfo;  [CE]  cannot  find  symbol  deferredBlockStreams  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.deferredBlockStreams;  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.deferredBlockStreams;  nid  =  NID.kSubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    	non-compiled	[CE]  cannot  find  symbol  deferredBlockStreams	34	None	replace
945	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  InputStream  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  InputStream  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[1];    }    InputStream  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	158	None	add
946	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[4];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[4];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	158	12	add
947	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[4];  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[4];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[4];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	158	12	add
948	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  [CE]  'else'  without  'if'  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];	  	non-compiled	[CE]  'else'  without  'if'	154	None	add
949	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  int  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  int  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    int  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	154	None	add
950	[BUG]  [BUGGY]  [FE]  IOException  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  NID.kSubStreamsInfo  +  1;	  nid    =    NID.kSubStreamsInfo;    int    nid    =    NID.kSubStreamsInfo;    	compilable	  [FE]  IOException  	35	12	replace
951	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo  +  1;  [FE]  IOException  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo  +  1;	  nid    =    NID.kSubStreamsInfo;    int    nid    =    NID.kSubStreamsInfo;    	compilable	  [FE]  IOException  	35	12	replace
952	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  System  [CE]  not  a  statement  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  System  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  System	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    System.arraycopy(fileName,    0,    nid,    0,    nid);    	non-compiled	[CE]  not  a  statement	64	None	replace
953	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  System  [CE]  not  a  statement  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  System  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  System	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    System.arraycopy(fileName,    0,    nid,    0,    nid);    	non-compiled	[CE]  not  a  statement	64	None	replace
954	[BUG]  [BUGGY]  NID.kUnpackInfo  =  nid  +  header.readUnsignedByte();  [CE]  cannot  assign  a  value  to  final  variable  kUnpackInfo  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID.kUnpackInfo  =  nid  +  header.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID.kUnpackInfo  =  nid  +  header.readUnsignedByte();	  NID.kUnpackInfo    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  kUnpackInfo	55	None	replace
955	[BUG]  [BUGGY]  NID.kUnpackInfo  =  header.readUnsignedByte(nid);  [CE]  cannot  assign  a  value  to  final  variable  kUnpackInfo  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID.kUnpackInfo  =  header.readUnsignedByte(nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID.kUnpackInfo  =  header.readUnsignedByte(nid);	  NID.kUnpackInfo    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  kUnpackInfo	55	None	replace
956	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  Integer  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  Integer  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    Integer  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	163	None	add
957	[BUG]  [BUGGY]  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  NID.kUnpackInfo  +  1;  nid  =  SIGNATURE_HEADER_SIZE;	  nid    =    NID.kUnpackInfo;    nid    =    SIGNATURE_HEADER_SIZE;    	compilable	  [FE]  IOException  	24	12	replace
958	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  nid  =  SIGNATURE_HEADER_SIZE;  [FE]  IOException  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo  +  1;  nid  =  SIGNATURE_HEADER_SIZE;	  nid    =    NID.kUnpackInfo;    nid    =    SIGNATURE_HEADER_SIZE;    	compilable	  [FE]  IOException  	24	12	replace
959	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  nid  =  0;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  NID.kUnpackInfo;  nid  =  0;	  nid    =    NID.kUnpackInfo;    nid    =    SIGNATURE_HEADER_SIZE;    	compilable	  [FE]  NoClassDefFoundError  	24	12	replace
960	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo;  nid  =  0;  [FE]  NoClassDefFoundError  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  nid  =  0;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo;  nid  =  0;	  nid    =    NID.kUnpackInfo;    nid    =    SIGNATURE_HEADER_SIZE;    	compilable	  [FE]  NoClassDefFoundError  	24	12	replace
961	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(header);  [CE]  no  suitable  constructor  found  for  ArrayList(DataInput)  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(header);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList  <  Folder>(header);	          archive.folders    =    new    ArrayList    <    Folder>(length);    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(DataInput)	14	None	replace
962	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(inputStreamStack);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(inputStreamStack);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList  <  Folder>(inputStreamStack);	          archive.folders    =    new    ArrayList    <    Folder>(length);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	14	None	replace
963	[BUG]  [BUGGY]  nid  =  NID.folders;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [CE]  cannot  find  symbol  folders  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.folders;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.folders;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    	non-compiled	[CE]  cannot  find  symbol  folders	140	None	replace
964	[BUG]  [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [CE]  cannot  find  symbol  bytesInfo  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesInfo;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    	non-compiled	[CE]  cannot  find  symbol  bytesInfo	140	None	replace
965	[BUG]  [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [CE]  cannot  find  symbol  bytesInfo  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    	non-compiled	[CE]  cannot  find  symbol  bytesInfo	140	None	replace
966	[BUG]  [BUGGY]  nid  =  NID.folders;  if(nid  ==  NID.folders)  {  readUnpackInfo(header,  archive);  nid  =  NID.folders;  }  [CE]  cannot  find  symbol  folders  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.folders;  if(nid  ==  NID.folders)  {  readUnpackInfo(header,  archive);  nid  =  NID.folders;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.folders;  if(nid  ==  NID.folders)  {  readUnpackInfo(header,  archive);  nid  =  NID.folders;  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    	non-compiled	[CE]  cannot  find  symbol  folders	140	None	replace
967	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  nid,  archive);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  nid,  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(inputStreamStack,  nid,  archive);	  nid    =    header.readUnsignedByte(nid,    archive);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	3	None	replace
968	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(fileName,  archive);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(fileName,  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(fileName,  archive);	  nid    =    header.readUnsignedByte(nid,    archive);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	3	None	replace
969	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(new  NID(header,  archive));  [CE]  constructor  NID  in  class  NID  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(new  NID(header,  archive));  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(new  NID(header,  archive));	  nid    =    header.readUnsignedByte(nid,    archive);    	non-compiled	[CE]  constructor  NID  in  class  NID  cannot  be  applied  to  given  types;	3	None	replace
970	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(header,  nid);  [CE]  cannot  find  symbol  folders  [FE]                    EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(header,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(header,  nid);	  nid    =    file.readUnsignedByte();    ((    RandomAccessFile)file).folders.add(nid);    	non-compiled	[CE]  cannot  find  symbol  folders	48	None	replace
971	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(header,  archive.folders);  [CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte(header,  archive.folders);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte(header,  archive.folders);	  nid    =    header.readUnsignedByte(nid,    archive.folders);    	non-compiled	[CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;	4	None	replace
972	[BUG]  [BUGGY]  nid  =  inputStreamStack.readUnsignedByte(header,  archive.folders);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  inputStreamStack.readUnsignedByte(header,  archive.folders);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  inputStreamStack.readUnsignedByte(header,  archive.folders);	  nid    =    header.readUnsignedByte(nid,    archive.folders);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	4	None	replace
973	[BUG]  [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  Integer  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  Integer  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        header.readUnsignedByte()        +        1;        nid    =    header.readUnsignedByte()    +    1;    Integer  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	58	None	add
974	[BUG]  [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  NID  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [CE]  cannot  find  symbol  NID  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    header.readUnsignedByte()    +    1;    nid  =  header.readUnsignedByte()  +  1;  NID  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        header.readUnsignedByte()        +        1;        nid    =    header.readUnsignedByte()    +    1;    NID  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;	  	non-compiled	[CE]  cannot  find  symbol  NID	58	None	add
975	[BUG]  [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  cannot  find  symbol  bytesInfo  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol  bytesInfo	146	None	replace
976	[BUG]  [BUGGY]  nid  =  reader.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  cannot  find  symbol  reader  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  reader.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  reader.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol  reader	146	None	replace
977	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	                if(nid    ==    SIGNATURE_HEADER_SIZE)    {    archive.folders    =    new    Folder[1];    }    if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  NoClassDefFoundError  	112	12	add
978	[BUG]  [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[1];  }  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	                if(nid    ==    SIGNATURE_HEADER_SIZE)    {    archive.folders    =    new    Folder[1];    }    if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  NoClassDefFoundError  	112	12	add
979	[BUG]  [BUGGY]  Nid  nid  =  NID.kUnpackInfo;  ((  RandomAccessFile)nid).readUnpackInfo();  nid  =  NID.kUnpackInfo;  [CE]  cannot  find  symbol  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  Nid  nid  =  NID.kUnpackInfo;  ((  RandomAccessFile)nid).readUnpackInfo();  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	Nid  nid  =  NID.kUnpackInfo;  ((  RandomAccessFile)nid).readUnpackInfo();  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    ((    RandomAccessFile)nid).readUnpackInfo();    nid    =    NID.kUnpackInfo;    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
980	[BUG]  [BUGGY]  nid  =  NID.substring(0,  nid).toLowerCase();  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.substring(0,  nid).toLowerCase();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.substring(0,  nid).toLowerCase();	  nid    =    NID.substring(0,    nid);    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
981	[BUG]  [BUGGY]  nid  =  NID.substring(0,  nid).length();  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.substring(0,  nid).length();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.substring(0,  nid).length();	  nid    =    NID.substring(0,    nid);    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
982	[BUG]  [BUGGY]  nid  =  NID.fileName.length;  [CE]  cannot  find  symbol  fileName  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.fileName.length;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.fileName.length;	  nid    =    NID.subStreamsInfo.length;    	non-compiled	[CE]  cannot  find  symbol  fileName	32	None	replace
983	[BUG]  [BUGGY]  nid  =  NID.fileName.subStreamsInfo.length;  [CE]  cannot  find  symbol  fileName  [FE]                  EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.fileName.subStreamsInfo.length;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.fileName.subStreamsInfo.length;	  nid    =    NID.subStreamsInfo.length;    	non-compiled	[CE]  cannot  find  symbol  fileName	32	None	replace
984	[BUG]  [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(currentFolderIndex  +  1);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(currentFolderIndex  +  1);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(currentFolderIndex  +  1);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.get(currentFolderIndex    +    1);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
985	[BUG]  [BUGGY]  nid  =  currentFolderIndex.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(currentFolderIndex  +  1);  nid  =  file.readUnsignedByte();  [CE]  int  cannot  be  dereferenced  [FE]                    EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderIndex.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(currentFolderIndex  +  1);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  currentFolderIndex.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(currentFolderIndex  +  1);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.get(currentFolderIndex    +    1);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  int  cannot  be  dereferenced	126	None	replace
986	[BUG]  [BUGGY]          archive.folders  =  new  Folder[1];  Archives.folders  =  new  Folder[1];  [CE]  cannot  find  symbol  Archives  [FE]    NullPointerException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          archive.folders  =  new  Folder[1];  Archives.folders  =  new  Folder[1];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	                archive.folders    =    new    Folder[1];    Archives.folders  =  new  Folder[1];	  	non-compiled	[CE]  cannot  find  symbol  Archives	110	None	add
987	[BUG]  [BUGGY]  Nid  nid  =  encodeStreams(header.readUnsignedByte());  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  Nid  nid  =  encodeStreams(header.readUnsignedByte());  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	Nid  nid  =  encodeStreams(header.readUnsignedByte());	  Nid    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
988	[BUG]  [BUGGY]  Nid  nid  =  source.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  Nid  nid  =  source.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	Nid  nid  =  source.readUnsignedByte();	  Nid    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
989	[BUG]  [BUGGY]  nid  =  inputStreamStack.kUnpackInfo();  [CE]  cannot  find  symbol  inputStreamStack  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  inputStreamStack.kUnpackInfo();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  inputStreamStack.kUnpackInfo();	  nid    =    header.kUnpackInfo();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	50	None	replace
990	[BUG]  [BUGGY]  nid  =  NID.folders;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [CE]  cannot  find  symbol  folders  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.folders;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.folders;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    	non-compiled	[CE]  cannot  find  symbol  folders	153	None	replace
991	[BUG]  [BUGGY]  [FE]  IOException  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  SIGNATURE_HEADER_SIZE;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  SIGNATURE_HEADER_SIZE;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    	compilable	  [FE]  IOException  	153	12	replace
992	[BUG]  [BUGGY]  nid  =  SIGNATURE_HEADER_SIZE;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [FE]  IOException  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  SIGNATURE_HEADER_SIZE;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  SIGNATURE_HEADER_SIZE;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    	compilable	  [FE]  IOException  	153	12	replace
993	[BUG]  [BUGGY]  [FE]  IOException  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  SIGNATURE_HEADER_SIZE;  if(nid  ==  NID.kPackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  SIGNATURE_HEADER_SIZE;  if(nid  ==  NID.kPackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    	compilable	  [FE]  IOException  	153	12	replace
994	[BUG]  [BUGGY]  nid  =  SIGNATURE_HEADER_SIZE;  if(nid  ==  NID.kPackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [FE]  IOException  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  SIGNATURE_HEADER_SIZE;  if(nid  ==  NID.kPackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  SIGNATURE_HEADER_SIZE;  if(nid  ==  NID.kPackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    	compilable	  [FE]  IOException  	153	12	replace
995	[BUG]  [BUGGY]  nid  =  NID.folderSize;  if(nid  ==  NID.folders)  {  readUnpackInfo(header,  archive);  nid  =  NID.folders;  }  [CE]  cannot  find  symbol  folderSize  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.folderSize;  if(nid  ==  NID.folders)  {  readUnpackInfo(header,  archive);  nid  =  NID.folders;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.folderSize;  if(nid  ==  NID.folders)  {  readUnpackInfo(header,  archive);  nid  =  NID.folders;  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    	non-compiled	[CE]  cannot  find  symbol  folderSize	153	None	replace
996	[BUG]  [BUGGY]  nid  =  NID.folders;  nid  =  NID.kUnpackInfo;  [CE]  cannot  find  symbol  folders  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.folders;  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.folders;  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    	non-compiled	[CE]  cannot  find  symbol  folders	153	None	replace
997	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  NID.kUnpackInfo  +  1;  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	21	12	replace
998	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  nid  =  NID.kUnpackInfo;  [FE]  IOException  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo  +  1;  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	21	12	replace
999	[BUG]  [BUGGY]  Integer  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  Integer  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	Integer  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    ((    RandomAccessFile)file).readUnsignedByte();    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	124	None	replace
1000	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid  +  5);  [CE]  incompatible  types  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(nid  +  5);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList  <  Folder>(nid  +  5);	          archive.folders    =    new    ArrayList    <    Folder>(nid    +    7ZSignature);    	non-compiled	[CE]  incompatible  types	15	None	replace
1001	[BUG]  [BUGGY]  nid  =  currentFolderIndex.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(currentFolderIndex);  nid  =  file.readUnsignedByte();  [CE]  int  cannot  be  dereferenced  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderIndex.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(currentFolderIndex);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  currentFolderIndex.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(currentFolderIndex);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.get(currentFolderIndex);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  int  cannot  be  dereferenced	121	None	replace
1002	[BUG]  [BUGGY]  nid  =  currentFolder.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(currentFolderIndex);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  currentFolder  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  currentFolder.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(currentFolderIndex);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  currentFolder.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(currentFolderIndex);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.get(currentFolderIndex);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  currentFolder	121	None	replace
1003	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(5);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(5);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(5);	  nid    =    header.readUnsignedByte(4);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	167	None	replace
1004	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.getInputStream();  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.getInputStream();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.getInputStream();  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.getInputStream();    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
1005	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  InputStream  file  =  inputStreamStack.peek();  nid  =  file.readUnsignedByte()  +  1;  [CE]  cannot  find  symbol  inputStreamStack  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  InputStream  file  =  inputStreamStack.peek();  nid  =  file.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    file.readUnsignedByte()    +    1;    InputStream  file  =  inputStreamStack.peek();  nid  =  file.readUnsignedByte()  +  1;	  	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	116	None	add
1006	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  InputStream  file  =  inputStreamStack.get(fileName);  nid  =  file.readUnsignedByte()  +  1;  [CE]  cannot  find  symbol  inputStreamStack  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  InputStream  file  =  inputStreamStack.get(fileName);  nid  =  file.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    file.readUnsignedByte()    +    1;    InputStream  file  =  inputStreamStack.get(fileName);  nid  =  file.readUnsignedByte()  +  1;	  	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	116	None	add
1007	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  Integer  nid  =  file.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  Integer  nid  =  file.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    file.readUnsignedByte()    +    1;    Integer  nid  =  file.readUnsignedByte()  +  1;	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	116	None	add
1008	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  InputStream  nid  =  file.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  InputStream  nid  =  file.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    file.readUnsignedByte()    +    1;    InputStream  nid  =  file.readUnsignedByte()  +  1;	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	116	None	add
1009	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  ((  RandomAccessFile)file).readUnsignedByte()  +  1;  [CE]  not  a  statement  [FE]            EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  ((  RandomAccessFile)file).readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    file.readUnsignedByte()    +    1;    ((  RandomAccessFile)file).readUnsignedByte()  +  1;	  	non-compiled	[CE]  not  a  statement	116	None	add
1010	[BUG]  [BUGGY]  nid  =  NID.bytesByte;  [CE]  cannot  find  symbol  bytesByte  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesByte;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesByte;	  nid    =    NID.bytesUnpackInfo;    	non-compiled	[CE]  cannot  find  symbol  bytesByte	89	None	replace
1011	[BUG]  [BUGGY]  nid  =  NID.bytesSize;  [CE]  cannot  find  symbol  bytesSize  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesSize;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesSize;	  nid    =    NID.bytesUnpackInfo;    	non-compiled	[CE]  cannot  find  symbol  bytesSize	89	None	replace
1012	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(4);  [CE]  incompatible  types  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(4);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList  <  Folder>(4);	          archive.folders    =    new    ArrayList    <    Folder>();    	non-compiled	[CE]  incompatible  types	9	None	replace
1013	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(8);  [CE]  incompatible  types  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(8);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList  <  Folder>(8);	          archive.folders    =    new    ArrayList    <    Folder>();    	non-compiled	[CE]  incompatible  types	9	None	replace
1014	[BUG]  [BUGGY]  nid  =  file.getUnsignedByte();  [CE]  cannot  find  symbol  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.getUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.getUnsignedByte();	  nid    =    file.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
1015	[BUG]  [BUGGY]  nid  =  NID.KSubStreamsInfo;  nid  =  NID.kSubStreamsInfo;  this.inputStreamStack.push(new  FileInputStream(fileName));  [CE]  cannot  find  symbol  KSubStreamsInfo  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.KSubStreamsInfo;  nid  =  NID.kSubStreamsInfo;  this.inputStreamStack.push(new  FileInputStream(fileName));  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.KSubStreamsInfo;  nid  =  NID.kSubStreamsInfo;  this.inputStreamStack.push(new  FileInputStream(fileName));	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    this.inputStreamStack.push(new    FileInputStream(fileName));    	non-compiled	[CE]  cannot  find  symbol  KSubStreamsInfo	38	None	replace
1016	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo;  nid  =  NID.kUnpackInfo;  this.inputStreamStack.push(new  FileInputStream(fileName));  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo;  nid  =  NID.kUnpackInfo;  this.inputStreamStack.push(new  FileInputStream(fileName));  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo;  nid  =  NID.kUnpackInfo;  this.inputStreamStack.push(new  FileInputStream(fileName));	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    this.inputStreamStack.push(new    FileInputStream(fileName));    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
1017	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  signature);  [CE]  cannot  find  symbol  signature  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  signature);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  signature);	  nid    =    header.readUnsignedByte(nid,    NID.kPackInfo);    	non-compiled	[CE]  cannot  find  symbol  signature	6	None	replace
1018	[BUG]  [BUGGY]  nid  =  inputStreamStack.readUnsignedByte(header,  NID.kPackInfo);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  inputStreamStack.readUnsignedByte(header,  NID.kPackInfo);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  inputStreamStack.readUnsignedByte(header,  NID.kPackInfo);	  nid    =    header.readUnsignedByte(nid,    NID.kPackInfo);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	6	None	replace
1019	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  nid  =  NID.kUnpackInfo;  this.deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  assign  a  value  to  final  variable  deferredBlockStreams  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  nid  =  NID.kUnpackInfo;  this.deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo  +  1;  nid  =  NID.kUnpackInfo;  this.deferredBlockStreams  =  new  ArrayList  <  String>();	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    this.deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  deferredBlockStreams	104	None	replace
1020	[BUG]  [BUGGY]  nid  =  NID.bytesUnpackInfo;  nid  =  NID.kUnpackInfo;  this.deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  bytesUnpackInfo  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesUnpackInfo;  nid  =  NID.kUnpackInfo;  this.deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesUnpackInfo;  nid  =  NID.kUnpackInfo;  this.deferredBlockStreams  =  new  ArrayList  <  String>();	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    this.deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol  bytesUnpackInfo	104	None	replace
1021	[BUG]  [BUGGY]  nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kUnpackInfo;  this.deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  assign  a  value  to  final  variable  deferredBlockStreams  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kUnpackInfo;  this.deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kUnpackInfo;  this.deferredBlockStreams  =  new  ArrayList  <  String>();	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    this.deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  deferredBlockStreams	104	None	replace
1022	[BUG]  [BUGGY]  nid  =  NID.sIGNATURE_HEADER_SIZE;  nid  =  NID.kUnpackInfo;  this.deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  sIGNATURE_HEADER_SIZE  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.sIGNATURE_HEADER_SIZE;  nid  =  NID.kUnpackInfo;  this.deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.sIGNATURE_HEADER_SIZE;  nid  =  NID.kUnpackInfo;  this.deferredBlockStreams  =  new  ArrayList  <  String>();	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    this.deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol  sIGNATURE_HEADER_SIZE	104	None	replace
1023	[BUG]  [BUGGY]  nid  =  NID.zUnpackInfo;  nid  =  NID.kUnpackInfo;  this.deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  zUnpackInfo  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.zUnpackInfo;  nid  =  NID.kUnpackInfo;  this.deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.zUnpackInfo;  nid  =  NID.kUnpackInfo;  this.deferredBlockStreams  =  new  ArrayList  <  String>();	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    this.deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  find  symbol  zUnpackInfo	104	None	replace
1024	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(currentFolder,  nid);  [CE]  cannot  find  symbol  currentFolder  [FE]        EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte(currentFolder,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte(currentFolder,  nid);	  nid    =    file.readUnsignedByte(nid);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	151	None	replace
1025	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(header,  NID.kUnpackInfo);  [CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte(header,  NID.kUnpackInfo);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte(header,  NID.kUnpackInfo);	  nid    =    file.readUnsignedByte(nid);    	non-compiled	[CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;	151	None	replace
1026	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(header,  null);  [CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte(header,  null);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte(header,  null);	  nid    =    file.readUnsignedByte(nid);    	non-compiled	[CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;	151	None	replace
1027	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(parent,  nid);  [CE]  cannot  find  symbol  parent  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte(parent,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte(parent,  nid);	  nid    =    file.readUnsignedByte(nid);    	non-compiled	[CE]  cannot  find  symbol  parent	151	None	replace
1028	[BUG]  [BUGGY]  nid  =  files.readUnsignedInt();  [CE]  cannot  find  symbol  files  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  files.readUnsignedInt();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  files.readUnsignedInt();	  nid    =    file.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol  files	99	None	replace
1029	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  head.readUnsignedByte();  [CE]  cannot  find  symbol  head  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  head.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte();  nid  =  head.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    nid    =    head.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol  head	98	None	replace
1030	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  receiver.readUnsignedByte();  [CE]  cannot  find  symbol  receiver  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte();  nid  =  receiver.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte();  nid  =  receiver.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    nid    =    head.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol  receiver	98	None	replace
1031	[BUG]  [BUGGY]  nid  =  source.readUnsignedByte();  nid  =  source.readUnsignedByte();  [CE]  cannot  find  symbol  source  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  source.readUnsignedByte();  nid  =  source.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  source.readUnsignedByte();  nid  =  source.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    nid    =    head.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol  source	98	None	replace
1032	[BUG]  [BUGGY]  nid  =  NID.bindings[0];  [CE]  cannot  find  symbol  bindings  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bindings[0];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bindings[0];	  nid    =    NID.bindings;    	non-compiled	[CE]  cannot  find  symbol  bindings	92	None	replace
1033	[BUG]  [BUGGY]  nid  =  NID.bindings  ||  nid  ==  SIGNATURE_HEADER_SIZE;  [CE]  cannot  find  symbol  bindings  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bindings  ||  nid  ==  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bindings  ||  nid  ==  SIGNATURE_HEADER_SIZE;	  nid    =    NID.bindings;    	non-compiled	[CE]  cannot  find  symbol  bindings	92	None	replace
1034	[BUG]  [BUGGY]  nid  =  NID.bindings  ||  fileName.length()  ==  SIGNATURE_HEADER_SIZE;  [CE]  cannot  find  symbol  bindings  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bindings  ||  fileName.length()  ==  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bindings  ||  fileName.length()  ==  SIGNATURE_HEADER_SIZE;	  nid    =    NID.bindings;    	non-compiled	[CE]  cannot  find  symbol  bindings	92	None	replace
1035	[BUG]  [BUGGY]  nid  =  NID.zUnpackInfo  +  1;  [CE]  cannot  find  symbol  zUnpackInfo  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.zUnpackInfo  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.zUnpackInfo  +  1;	  nid    =    NID.kUnpackInfo    +    1;    	non-compiled	[CE]  cannot  find  symbol  zUnpackInfo	69	None	replace
1036	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  +  1L;  [CE]  possible  loss  of  precision  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  1L;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo  +  1L;	  nid    =    NID.kUnpackInfo    +    1;    	non-compiled	[CE]  possible  loss  of  precision	69	None	replace
1037	[BUG]  [BUGGY]  nid  =  NID.bytesInfo[0];  [CE]  cannot  find  symbol  bytesInfo  [FE]        EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesInfo[0];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesInfo[0];	  nid    =    NID.bytesInfo;    	non-compiled	[CE]  cannot  find  symbol  bytesInfo	28	None	replace
1038	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    file.readUnsignedByte();    ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        file.readUnsignedByte();        ((    RandomAccessFile)file).readUnsignedByte();    nid    =    file.readUnsignedByte();    ((  RandomAccessFile)file).readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();	  	compilable	  [FE]  EOFException  	123	12	add
1039	[BUG]  [BUGGY]  nid    =    file.readUnsignedByte();    ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    file.readUnsignedByte();    ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        file.readUnsignedByte();        ((    RandomAccessFile)file).readUnsignedByte();    nid    =    file.readUnsignedByte();    ((  RandomAccessFile)file).readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();	  	compilable	  [FE]  EOFException  	123	12	add
1040	[BUG]  [BUGGY]  nid    =    file.readUnsignedByte();    ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  InputStream  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    file.readUnsignedByte();    ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  InputStream  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        file.readUnsignedByte();        ((    RandomAccessFile)file).readUnsignedByte();    nid    =    file.readUnsignedByte();    InputStream  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	123	None	add
1041	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [CE]  illegal  start  of  expression  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;	  	non-compiled	[CE]  illegal  start  of  expression	156	None	add
1042	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(fileName,  header,  archive);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(fileName,  header,  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(fileName,  header,  archive);	  nid    =    header.readUnsignedByte(header,    archive);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	8	None	replace
1043	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(data,  header,  archive);  [CE]  cannot  find  symbol  data  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(data,  header,  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(data,  header,  archive);	  nid    =    header.readUnsignedByte(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  data	8	None	replace
1044	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  header,  archive);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  header,  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(inputStreamStack,  header,  archive);	  nid    =    header.readUnsignedByte(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	8	None	replace
1045	[BUG]  [BUGGY]  nid  =  NID.KUnpackInfo;  nid  =  NID.kUnpackInfo;  this.inputStreamStack.push(new  FileInputStream(fileName));  [CE]  cannot  find  symbol  KUnpackInfo  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.KUnpackInfo;  nid  =  NID.kUnpackInfo;  this.inputStreamStack.push(new  FileInputStream(fileName));  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.KUnpackInfo;  nid  =  NID.kUnpackInfo;  this.inputStreamStack.push(new  FileInputStream(fileName));	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    this.inputStreamStack.push(new    FileInputStream(fileName));    	non-compiled	[CE]  cannot  find  symbol  KUnpackInfo	103	None	replace
1046	[BUG]  [BUGGY]  nid  =  fileName.kUnpackInfo;  nid  =  NID.kUnpackInfo;  this.inputStreamStack.push(new  FileInputStream(fileName));  [CE]  cannot  find  symbol  kUnpackInfo  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  fileName.kUnpackInfo;  nid  =  NID.kUnpackInfo;  this.inputStreamStack.push(new  FileInputStream(fileName));  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  fileName.kUnpackInfo;  nid  =  NID.kUnpackInfo;  this.inputStreamStack.push(new  FileInputStream(fileName));	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    this.inputStreamStack.push(new    FileInputStream(fileName));    	non-compiled	[CE]  cannot  find  symbol  kUnpackInfo	103	None	replace
1047	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	59	None	replace
1048	[BUG]  [BUGGY]  int  nid  =  NID.kUnpackInfo(header,  archive);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  NID.kUnpackInfo(header,  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  NID.kUnpackInfo(header,  archive);	  int    nid    =    NID.kUnpackInfo();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	52	None	replace
1049	[BUG]  [BUGGY]  int  nid  =  NID.kUnpackInfo()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  NID.kUnpackInfo()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  NID.kUnpackInfo()  +  1;	  int    nid    =    NID.kUnpackInfo();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	52	None	replace
1050	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  Integer  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  Integer  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    Integer  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	152	None	add
1051	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [CE]  illegal  start  of  expression  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;	  	non-compiled	[CE]  illegal  start  of  expression	152	None	add
1052	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(0,  nid,  NID.bytes);  [CE]  cannot  find  symbol  bytes  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(0,  nid,  NID.bytes);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(0,  nid,  NID.bytes);	  nid    =    header.readUnsignedByte(0,    nid);    	non-compiled	[CE]  cannot  find  symbol  bytes	119	None	replace
1053	[BUG]  [BUGGY]  nid  =  currentFolder.readUnsignedByte();  InputStream  file  =  inputStreamStack.peek();  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  currentFolder  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  currentFolder.readUnsignedByte();  InputStream  file  =  inputStreamStack.peek();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  currentFolder.readUnsignedByte();  InputStream  file  =  inputStreamStack.peek();  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.peek();    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  currentFolder	122	None	replace
1054	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  SIGNATURE_HEADER_SIZE;  NID  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE;  [CE]  cannot  find  symbol  NID  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  SIGNATURE_HEADER_SIZE;  NID  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        nid    =    SIGNATURE_HEADER_SIZE;    NID  =  NID.kUnpackInfo;  nid  =  SIGNATURE_HEADER_SIZE;	  	non-compiled	[CE]  cannot  find  symbol  NID	23	None	add
1055	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[2];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	                if(nid    ==    SIGNATURE_HEADER_SIZE)    {    archive.folders    =    new    Folder[0];    }    if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[2];  }	  	compilable	  [FE]  NoClassDefFoundError  	108	12	add
1056	[BUG]  [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[2];  }  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[0];  }  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[2];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	                if(nid    ==    SIGNATURE_HEADER_SIZE)    {    archive.folders    =    new    Folder[0];    }    if(nid  ==  SIGNATURE_HEADER_SIZE)  {  archive.folders  =  new  Folder[2];  }	  	compilable	  [FE]  NoClassDefFoundError  	108	12	add
1057	[BUG]  [BUGGY]  nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolder,  0,  nid,  currentFolderIndex);  [CE]  cannot  find  symbol  currentFolder  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolder,  0,  nid,  currentFolderIndex);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  SIGNATURE_HEADER_SIZE;  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolder,  0,  nid,  currentFolderIndex);	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    System.arraycopy(currentFolder,    0,    nid,    currentFolderIndex);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	37	None	replace
1058	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo;  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolder,  0,  nid,  currentFolderIndex);  [CE]  cannot  find  symbol  currentFolder  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolder,  0,  nid,  currentFolderIndex);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo;  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolder,  0,  nid,  currentFolderIndex);	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    System.arraycopy(currentFolder,    0,    nid,    currentFolderIndex);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	37	None	replace
1059	[BUG]  [BUGGY]  nid  =  NID.kSize;  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolder,  0,  nid,  currentFolderIndex);  [CE]  cannot  find  symbol  currentFolder  [FE]                  EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSize;  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolder,  0,  nid,  currentFolderIndex);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSize;  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolder,  0,  nid,  currentFolderIndex);	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    System.arraycopy(currentFolder,    0,    nid,    currentFolderIndex);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	37	None	replace
1060	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo;  nid  =  NID.kUnpackInfo;  System.arraycopy(currentFolder,  0,  nid,  currentFolderIndex);  [CE]  cannot  find  symbol  currentFolder  [FE]                    EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo;  nid  =  NID.kUnpackInfo;  System.arraycopy(currentFolder,  0,  nid,  currentFolderIndex);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo;  nid  =  NID.kUnpackInfo;  System.arraycopy(currentFolder,  0,  nid,  currentFolderIndex);	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    System.arraycopy(currentFolder,    0,    nid,    currentFolderIndex);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	37	None	replace
1061	[BUG]  [BUGGY]  nid  =  inputStreamStack.size();  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolder,  0,  nid,  currentFolderIndex);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                      EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  inputStreamStack.size();  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolder,  0,  nid,  currentFolderIndex);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  inputStreamStack.size();  nid  =  NID.kSubStreamsInfo;  System.arraycopy(currentFolder,  0,  nid,  currentFolderIndex);	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    System.arraycopy(currentFolder,    0,    nid,    currentFolderIndex);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	37	None	replace
1062	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo;  nid  =  NID.kSubStreamsINFO;  [CE]  cannot  find  symbol  kSubStreamsINFO  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  nid  =  NID.kSubStreamsINFO;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo;  nid  =  NID.kSubStreamsINFO;	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsINFO;    	non-compiled	[CE]  cannot  find  symbol  kSubStreamsINFO	83	None	replace
1063	[BUG]  [BUGGY]  NID  nid  =  NID.kSubStreamsInfo.length;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID  nid  =  NID.kSubStreamsInfo.length;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID  nid  =  NID.kSubStreamsInfo.length;	  nid    =    NID.kSubStreamsInfo.length;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	30	None	replace
1064	[BUG]  [BUGGY]  nid  =  NID.KSubStreamsInfo.length;  [CE]  cannot  find  symbol  KSubStreamsInfo  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.KSubStreamsInfo.length;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.KSubStreamsInfo.length;	  nid    =    NID.kSubStreamsInfo.length;    	non-compiled	[CE]  cannot  find  symbol  KSubStreamsInfo	30	None	replace
1065	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo.length  +  1;  [CE]  int  cannot  be  dereferenced  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo.length  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo.length  +  1;	  nid    =    NID.kSubStreamsInfo.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	30	None	replace
1066	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsinfo.length;  [CE]  cannot  find  symbol  kSubStreamsinfo  [FE]                  EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsinfo.length;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsinfo.length;	  nid    =    NID.kSubStreamsInfo.length;    	non-compiled	[CE]  cannot  find  symbol  kSubStreamsinfo	30	None	replace
1067	[BUG]  [BUGGY]  nid  =  NID.readUnpackInfo(currentFolderIndex);  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnpackInfo(currentFolderIndex);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnpackInfo(currentFolderIndex);	  nid    =    NID.readUnpackInfo();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
1068	[BUG]  [BUGGY]  nid  =  reader.readUnpackInfo();  [CE]  cannot  find  symbol  reader  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  reader.readUnpackInfo();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  reader.readUnpackInfo();	  nid    =    NID.readUnpackInfo();    	non-compiled	[CE]  cannot  find  symbol  reader	67	None	replace
1069	[BUG]  [BUGGY]  nid  =  0;  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  InputStreamReader[inputStreamStack.size()  ]);  archive.folders  =  inputStreamStack.toArray(new  Folder[inputStreamStack.size()  ]);  [CE]  cannot  find  symbol  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  0;  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  InputStreamReader[inputStreamStack.size()  ]);  archive.folders  =  inputStreamStack.toArray(new  Folder[inputStreamStack.size()  ]);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    0;    InputStream  inputStreamStack  =  inputStreamStack.toArray(new  InputStreamReader[inputStreamStack.size()  ]);  archive.folders  =  inputStreamStack.toArray(new  Folder[inputStreamStack.size()  ]);	  	non-compiled	[CE]  cannot  find  symbol	131	None	add
1070	[BUG]  [BUGGY]  nid  =  0;  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  InputStreamReader[inputStreamStack.size()  ]);  archive.folders  =  inputStreamStack.toArray(new  String[inputStreamStack.size()  ]);  [CE]  cannot  find  symbol  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  0;  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  InputStreamReader[inputStreamStack.size()  ]);  archive.folders  =  inputStreamStack.toArray(new  String[inputStreamStack.size()  ]);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    0;    InputStream  inputStreamStack  =  inputStreamStack.toArray(new  InputStreamReader[inputStreamStack.size()  ]);  archive.folders  =  inputStreamStack.toArray(new  String[inputStreamStack.size()  ]);	  	non-compiled	[CE]  cannot  find  symbol	131	None	add
1071	[BUG]  [BUGGY]  nid  =  0;  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  InputStreamReader[inputStreamStack.size()  ]);  fileName  =  inputStreamStack.toArray(new  String[fileName.length()  ]);  [CE]  cannot  find  symbol  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  0;  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  InputStreamReader[inputStreamStack.size()  ]);  fileName  =  inputStreamStack.toArray(new  String[fileName.length()  ]);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    0;    InputStream  inputStreamStack  =  inputStreamStack.toArray(new  InputStreamReader[inputStreamStack.size()  ]);  fileName  =  inputStreamStack.toArray(new  String[fileName.length()  ]);	  	non-compiled	[CE]  cannot  find  symbol	131	None	add
1072	[BUG]  [BUGGY]  nid  =  0;  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  InputStreamReader[inputStreamStack.size()  ]);  fileName  =  inputStreamStack.toArray(new  FileName[inputStreamStack.size()  ]);  [CE]  cannot  find  symbol  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  0;  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  InputStreamReader[inputStreamStack.size()  ]);  fileName  =  inputStreamStack.toArray(new  FileName[inputStreamStack.size()  ]);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    0;    InputStream  inputStreamStack  =  inputStreamStack.toArray(new  InputStreamReader[inputStreamStack.size()  ]);  fileName  =  inputStreamStack.toArray(new  FileName[inputStreamStack.size()  ]);	  	non-compiled	[CE]  cannot  find  symbol	131	None	add
1073	[BUG]  [BUGGY]  nid  =  0;  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  InputStreamReader[inputStreamStack.size()  ]);  fileName  =  inputStreamStack.toArray(new  FileName[fileName.length()  ]);  [CE]  cannot  find  symbol  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  0;  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  InputStreamReader[inputStreamStack.size()  ]);  fileName  =  inputStreamStack.toArray(new  FileName[fileName.length()  ]);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    0;    InputStream  inputStreamStack  =  inputStreamStack.toArray(new  InputStreamReader[inputStreamStack.size()  ]);  fileName  =  inputStreamStack.toArray(new  FileName[fileName.length()  ]);	  	non-compiled	[CE]  cannot  find  symbol	131	None	add
1074	[BUG]  [BUGGY]  nid  =  0;  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  InputStreamReader[inputStreamStack.size()  ]);  fileName  =  inputStreamStack.toArray(new  String[inputStreamStack.size()  ]);  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  0;  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  InputStreamReader[inputStreamStack.size()  ]);  fileName  =  inputStreamStack.toArray(new  String[inputStreamStack.size()  ]);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    0;    InputStream  inputStreamStack  =  inputStreamStack.toArray(new  InputStreamReader[inputStreamStack.size()  ]);  fileName  =  inputStreamStack.toArray(new  String[inputStreamStack.size()  ]);	  	non-compiled	[CE]  cannot  find  symbol	131	None	add
1075	[BUG]  [BUGGY]  nid  =  0;  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  InputStreamReader[inputStreamStack.size()  ]);  int  nid  =  0;  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  0;  InputStream  inputStreamStack  =  inputStreamStack.toArray(new  InputStreamReader[inputStreamStack.size()  ]);  int  nid  =  0;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    0;    InputStream  inputStreamStack  =  inputStreamStack.toArray(new  InputStreamReader[inputStreamStack.size()  ]);  int  nid  =  0;	  	non-compiled	[CE]  cannot  find  symbol	131	None	add
1076	[BUG]  [BUGGY]  nid  =  receiver.readUnsignedByte();  [CE]  cannot  find  symbol  receiver  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  receiver.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  receiver.readUnsignedByte();	  nid    =    head.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  receiver	53	None	replace
1077	[BUG]  [BUGGY]  Int  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  Int  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	Int  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    int    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
1078	[BUG]  [BUGGY]  nid  =  encodeStreams(archive.readUnsignedInt());  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  encodeStreams(archive.readUnsignedInt());  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  encodeStreams(archive.readUnsignedInt());	  nid    =    archive.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
1079	[BUG]  [BUGGY]  nid  =  NID.readUnpackInfo(header,  source);  [CE]  cannot  find  symbol  source  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnpackInfo(header,  source);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnpackInfo(header,  source);	  nid    =    NID.readUnpackInfo(header);    	non-compiled	[CE]  cannot  find  symbol  source	70	None	replace
1080	[BUG]  [BUGGY]  nid  =  NID.readUnpackInfo(header,  fileName);  [CE]  cannot  find  symbol  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnpackInfo(header,  fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnpackInfo(header,  fileName);	  nid    =    NID.readUnpackInfo(header);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
1081	[BUG]  [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.getInputStream(fileName);  [CE]  cannot  find  symbol  [FE]        EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.getInputStream(fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.getInputStream(fileName);	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.getInputStream(fileName);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
1082	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.getInputStream(fileName);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.getInputStream(fileName);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.getInputStream(fileName);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.getInputStream(fileName);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
1083	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  Integer  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  Integer  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    Integer  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	145	None	add
1084	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  InputStream  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  InputStream  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    InputStream  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	145	None	add
1085	[BUG]  [BUGGY]  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }	  	compilable	  [FE]  EOFException  	145	12	add
1086	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  [FE]  EOFException  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }	  	compilable	  [FE]  EOFException  	145	12	add
1087	[BUG]  [BUGGY]  nid  =  NID.folders;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [CE]  cannot  find  symbol  folders  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.folders;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.folders;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  cannot  find  symbol  folders	148	None	replace
1088	[BUG]  [BUGGY]  nid  =  NID.folders;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [CE]  cannot  find  symbol  folders  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.folders;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.folders;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  cannot  find  symbol  folders	148	None	replace
1089	[BUG]  [BUGGY]  nid  =  NID.folderSize;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [CE]  cannot  find  symbol  folderSize  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.folderSize;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.folderSize;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  cannot  find  symbol  folderSize	148	None	replace
1090	[BUG]  [BUGGY]  nid  =  UID.kUnpackInfo.readUnsignedByte();  [CE]  package  UID  does  not  exist  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  UID.kUnpackInfo.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  UID.kUnpackInfo.readUnsignedByte();	  nid    =    NID.kUnpackInfo.readUnsignedByte()    +    1;    	non-compiled	[CE]  package  UID  does  not  exist	127	None	replace
1091	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  Integer  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  Integer  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    Integer  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	137	None	add
1092	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }	  	compilable	  [FE]  EOFException  	137	12	add
1093	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }	  	compilable	  [FE]  EOFException  	137	12	add
1094	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  header);  [CE]  cannot  find  symbol  inputStreamStack  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  header);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(inputStreamStack,  header);	  nid    =    header.readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	78	None	replace
1095	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  header);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  header);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(nid,  header);	  nid    =    header.readUnsignedByte(header);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	78	None	replace
1096	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(data,  header);  [CE]  cannot  find  symbol  data  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(data,  header);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(data,  header);	  nid    =    header.readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol  data	78	None	replace
1097	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(new  File(header),  archive);  [CE]  no  suitable  constructor  found  for  File(DataInput)  [FE]        EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte(new  File(header),  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte(new  File(header),  archive);	  nid    =    file.readUnsignedByte(header);    	non-compiled	[CE]  no  suitable  constructor  found  for  File(DataInput)	114	None	replace
1098	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(header,  archives);  [CE]  cannot  find  symbol  archives  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte(header,  archives);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte(header,  archives);	  nid    =    file.readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol  archives	114	None	replace
1099	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(new  File(header,  archive));  [CE]  no  suitable  constructor  found  for  File(DataInput,Archive)  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte(new  File(header,  archive));  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte(new  File(header,  archive));	  nid    =    file.readUnsignedByte(header);    	non-compiled	[CE]  no  suitable  constructor  found  for  File(DataInput,Archive)	114	None	replace
1100	[BUG]  [BUGGY]  NID  nid  =  header.readUnsignedByte(nid);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID  nid  =  header.readUnsignedByte(nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID  nid  =  header.readUnsignedByte(nid);	  NID    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	54	None	replace
1101	[BUG]  [BUGGY]  nid  =  encodeStreams(archive.readUnsignedByte());  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  encodeStreams(archive.readUnsignedByte());  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  encodeStreams(archive.readUnsignedByte());	  nid    =    archive.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
1102	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.getInputStream(nid);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.getInputStream(nid);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.getInputStream(nid);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.getInputStream(nid);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
1103	[BUG]  [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.getInputStream(nid);  [CE]  cannot  find  symbol  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.getInputStream(nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  inputStreamStack.getInputStream(nid);	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.getInputStream(nid);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
1104	[BUG]  [BUGGY]  nid  =  NID.bytesToIntByteArray  +  1;  [CE]  cannot  find  symbol  bytesToIntByteArray  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesToIntByteArray  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesToIntByteArray  +  1;	  nid    =    NID.bytesToIntByteArray;    	non-compiled	[CE]  cannot  find  symbol  bytesToIntByteArray	90	None	replace
1105	[BUG]  [BUGGY]  nid  =  NID.bytesReadUnsignedByte();  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesReadUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesReadUnsignedByte();	  nid    =    NID.deferredBlockInfo.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
1106	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	61	12	replace
1107	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  IOException  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	61	12	replace
1108	[BUG]  [BUGGY]  [FE]  IOException  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	61	12	replace
1109	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  IOException  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	61	12	replace
1110	[BUG]  [BUGGY]  [FE]  IOException  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	61	12	replace
1111	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  IOException  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	61	12	replace
1112	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo(header,  source);  [CE]  cannot  find  symbol  source  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo(header,  source);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo(header,  source);	  nid    =    NID.kUnpackInfo(header);    	non-compiled	[CE]  cannot  find  symbol  source	51	None	replace
1113	[BUG]  [BUGGY]  nid  =  NID.folders;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  cannot  find  symbol  folders  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.folders;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.folders;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol  folders	150	None	replace
1114	[BUG]  [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  cannot  find  symbol  bytesInfo  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesInfo;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesInfo;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol  bytesInfo	150	None	replace
1115	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  cannot  find  symbol  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
1116	[BUG]  [BUGGY]  nid  =  NID.deferredBlockStreams;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  cannot  find  symbol  deferredBlockStreams  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.deferredBlockStreams;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.deferredBlockStreams;  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol  deferredBlockStreams	150	None	replace
1117	[BUG]  [BUGGY]  nid  =  NID.KUnpackInfo.readUnsignedByte(header);  [CE]  cannot  find  symbol  KUnpackInfo  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.KUnpackInfo.readUnsignedByte(header);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.KUnpackInfo.readUnsignedByte(header);	  nid    =    NID.KUnpackInfo.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  KUnpackInfo	76	None	replace
1118	[BUG]  [BUGGY]  nid  =  NID.KUnpackInfo.readUnsignedByte(0);  [CE]  cannot  find  symbol  KUnpackInfo  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.KUnpackInfo.readUnsignedByte(0);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.KUnpackInfo.readUnsignedByte(0);	  nid    =    NID.KUnpackInfo.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  KUnpackInfo	76	None	replace
1119	[BUG]  [BUGGY]  nid  =  NID.KUnpackInfo.readUnsignedByte()  +  1;  [CE]  cannot  find  symbol  KUnpackInfo  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.KUnpackInfo.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.KUnpackInfo.readUnsignedByte()  +  1;	  nid    =    NID.KUnpackInfo.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  KUnpackInfo	76	None	replace
1120	[BUG]  [BUGGY]  nid  =  inputStreamStack.readUnsignedByte()  +  1;  [CE]  cannot  find  symbol  inputStreamStack  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  inputStreamStack.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  inputStreamStack.readUnsignedByte()  +  1;	  nid    =    header.readUnsignedByte()    +    1;    InputStream    inputStreamStack    =    inputStreamStack.peek();    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	97	None	replace
1121	[BUG]  [BUGGY]  nid  =  inputStreamStack.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;  [CE]  cannot  find  symbol  inputStreamStack  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  inputStreamStack.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  inputStreamStack.readUnsignedByte();  nid  =  header.readUnsignedByte()  +  1;	  nid    =    header.readUnsignedByte()    +    1;    InputStream    inputStreamStack    =    inputStreamStack.peek();    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	97	None	replace
1122	[BUG]  [BUGGY]  [FE]  IOException  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  |  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  NID.kUnpackInfo  |  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    InputStream    nid    =    NID.kUnpackInfo;    	compilable	  [FE]  IOException  	102	12	replace
1123	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  |  NID.kUnpackInfo;  [FE]  IOException  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  |  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo  |  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    InputStream    nid    =    NID.kUnpackInfo;    	compilable	  [FE]  IOException  	102	12	replace
1124	[BUG]  [BUGGY]  Archive.folders  =  new  Folder[1];  [CE]  non-static  variable  folders  cannot  be  referenced  from  a  static  context  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  Archive.folders  =  new  Folder[1];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	Archive.folders  =  new  Folder[1];	          if(nid    ==    SIGNATURE_HEADER_SIZE)    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  non-static  variable  folders  cannot  be  referenced  from  a  static  context	113	None	replace
1125	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  Integer  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  Integer  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    Integer  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	149	None	add
1126	[BUG]  [BUGGY]  nid  =  NID.0;  nid  =  NID.kUnpackInfo;  [CE]  ';'  expected  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.0;  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.0;  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    	non-compiled	[CE]  ';'  expected	19	None	replace
1127	[BUG]  [BUGGY]  nid  =  NID.bytes;  nid  =  NID.kUnpackInfo;  [CE]  cannot  find  symbol  bytes  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytes;  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytes;  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    	non-compiled	[CE]  cannot  find  symbol  bytes	19	None	replace
1128	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(currentFolderIndex);  [CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte(currentFolderIndex);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte(currentFolderIndex);	  nid    =    file.readUnsignedByte(0);    	non-compiled	[CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;	115	None	replace
1129	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo.readUnsignedByte(header,  source);  [CE]  cannot  find  symbol  source  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo.readUnsignedByte(header,  source);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo.readUnsignedByte(header,  source);	  nid    =    NID.kUnpackInfo.readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol  source	77	None	replace
1130	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte(header);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte(header);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte(header);	  nid    =    NID.kUnpackInfo.readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
1131	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo.readUnsignedByte(header,  fileName);  [CE]  int  cannot  be  dereferenced  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo.readUnsignedByte(header,  fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo.readUnsignedByte(header,  fileName);	  nid    =    NID.kUnpackInfo.readUnsignedByte(header);    	non-compiled	[CE]  int  cannot  be  dereferenced	77	None	replace
1132	[BUG]  [BUGGY]  InputStream  file  =  inputStreamStack.get(fileName);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  inputStreamStack  [FE]        EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  InputStream  file  =  inputStreamStack.get(fileName);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	InputStream  file  =  inputStreamStack.get(fileName);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.get(fileName);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	120	None	replace
1133	[BUG]  [BUGGY]  nid  =  source.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(fileName);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  source  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  source.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(fileName);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  source.readUnsignedByte();  InputStream  file  =  inputStreamStack.get(fileName);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.get(fileName);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  source	120	None	replace
1134	[BUG]  [BUGGY]  InputStream  file  =  inputStreamStack.getInputStream();  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  inputStreamStack  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  InputStream  file  =  inputStreamStack.getInputStream();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	InputStream  file  =  inputStreamStack.getInputStream();  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.getInputStream();    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	46	None	replace
1135	[BUG]  [BUGGY]  InputStream  file  =  header.getInputStream();  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                  EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  InputStream  file  =  header.getInputStream();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	InputStream  file  =  header.getInputStream();  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.getInputStream();    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
1136	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  int  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  int  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    int  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	147	None	add
1137	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  EOFException  	147	12	add
1138	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  EOFException  	147	12	add
1139	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1]  [CE]  ';'  expected  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1]  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1]	  	non-compiled	[CE]  ';'  expected	147	None	add
1140	[BUG]  [BUGGY]  nid  =  NID.inputStream();  [CE]  cannot  find  symbol  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.inputStream();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.inputStream();	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
1141	[BUG]  [BUGGY]  nid  =  NID.delete();  [CE]  cannot  find  symbol  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.delete();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.delete();	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
1142	[BUG]  [BUGGY]  nid  =  NID.inputStreamSize;  [CE]  cannot  find  symbol  inputStreamSize  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.inputStreamSize;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.inputStreamSize;	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol  inputStreamSize	142	None	replace
1143	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  System.arra  [CE]  not  a  statement  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  System.arra  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  System.arra	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    System.arraycopy(nid,    0,    archive.folders,    0,    nid);    	non-compiled	[CE]  not  a  statement	62	None	replace
1144	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  System.arraycopy(n  [CE]  ')'  expected  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  System.arraycopy(n  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  System.arraycopy(n	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    System.arraycopy(nid,    0,    archive.folders,    0,    nid);    	non-compiled	[CE]  ')'  expected	62	None	replace
1145	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  System.arra  [CE]  not  a  statement  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  System.arra  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  System.arra	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    System.arraycopy(nid,    0,    archive.folders,    0,    nid);    	non-compiled	[CE]  not  a  statement	62	None	replace
1146	[BUG]  [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  System.  [CE]  <identifier>  expected  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  <  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  System.  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  <  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  System.	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    System.arraycopy(nid,    0,    archive.folders,    0,    nid);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
1147	[BUG]  [BUGGY]  nid  =  nid.length();  [CE]  int  cannot  be  dereferenced  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid.length();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  nid.length();	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  int  cannot  be  dereferenced	155	None	replace
1148	[BUG]  [BUGGY]  nid  =  nextHeaderSizeInt.readUnsignedInt();  [CE]  cannot  find  symbol  nextHeaderSizeInt  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nextHeaderSizeInt.readUnsignedInt();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  nextHeaderSizeInt.readUnsignedInt();	  nid    =    UID.readUnsignedInt();    	non-compiled	[CE]  cannot  find  symbol  nextHeaderSizeInt	74	None	replace
1149	[BUG]  [BUGGY]  int  nid  =  NID.kSubStreamsInfo;  NID  =  NID.kSubStreamsInfo;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  NID.kSubStreamsInfo;  NID  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  NID.kSubStreamsInfo;  NID  =  NID.kSubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    NID    =    NID.kSubStreamsInfo;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	85	None	replace
1150	[BUG]  [BUGGY]  nid  =  NID.bytes.length;  [CE]  cannot  find  symbol  bytes  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytes.length;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytes.length;	  nid    =    NID.subStreamsInfo.length;    	non-compiled	[CE]  cannot  find  symbol  bytes	32	None	replace
1151	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  nid,  NID.kUnpackInfo);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  nid,  NID.kUnpackInfo);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(inputStreamStack,  nid,  NID.kUnpackInfo);	  nid    =    header.readUnsignedByte(nid,    NID.kUnpackInfo);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	5	None	replace
1152	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kUnpackInfo,  NID.kUnpackInfo);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kUnpackInfo,  NID.kUnpackInfo);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(nid,  NID.kUnpackInfo,  NID.kUnpackInfo);	  nid    =    header.readUnsignedByte(nid,    NID.kUnpackInfo);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	5	None	replace
1153	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  SIGNATURE_HEADER_SIZE;  NID  =  NID.kSubStreamsInfo;  nid  =  SIGNATURE_HEADER_SIZE;  [CE]  cannot  find  symbol  NID  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  SIGNATURE_HEADER_SIZE;  NID  =  NID.kSubStreamsInfo;  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        nid    =    SIGNATURE_HEADER_SIZE;    NID  =  NID.kSubStreamsInfo;  nid  =  SIGNATURE_HEADER_SIZE;	  	non-compiled	[CE]  cannot  find  symbol  NID	81	None	add
1154	[BUG]  [BUGGY]  nid  =  NID.decode(fileName);  [CE]  cannot  find  symbol  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.decode(fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.decode(fileName);	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
1155	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  nid,  NID.kPackInfo);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(inputStreamStack,  nid,  NID.kPackInfo);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(inputStreamStack,  nid,  NID.kPackInfo);	  nid    =    header.readUnsignedByte(nid,    NID.kPackInfo);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	6	None	replace
1156	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  header);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  header);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(nid,  NID.kPackInfo,  header);	  nid    =    header.readUnsignedByte(nid,    NID.kPackInfo);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	6	None	replace
1157	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInt;  nid  =  NID.kSubStreamsInt;  [CE]  cannot  find  symbol  kSubStreamsInt  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInt;  nid  =  NID.kSubStreamsInt;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInt;  nid  =  NID.kSubStreamsInt;	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsINFO;    	non-compiled	[CE]  cannot  find  symbol  kSubStreamsInt	83	None	replace
1158	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo  ||  nid  =  NID.kSubStreamsInfo;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo  ||  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo  ||  nid  =  NID.kSubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsINFO;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	83	None	replace
1159	[BUG]  [BUGGY]  int  nid  =  file.readUnsignedByte();  file.folders  =  new  ArrayList  <  RandomAccessFile>(nid);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                  EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  file.readUnsignedByte();  file.folders  =  new  ArrayList  <  RandomAccessFile>(nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  file.readUnsignedByte();  file.folders  =  new  ArrayList  <  RandomAccessFile>(nid);	  nid    =    file.readUnsignedByte();    file.folders    =    new    ArrayList    <    RandomAccessFile>(nid);    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	47	None	replace
1160	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte();  file.folders  =  new  ArrayList  <  RandomAccessFile>(nid,  archive);  [CE]  cannot  find  symbol  folders  [FE]                    EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte();  file.folders  =  new  ArrayList  <  RandomAccessFile>(nid,  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte();  file.folders  =  new  ArrayList  <  RandomAccessFile>(nid,  archive);	  nid    =    file.readUnsignedByte();    file.folders    =    new    ArrayList    <    RandomAccessFile>(nid);    	non-compiled	[CE]  cannot  find  symbol  folders	47	None	replace
1161	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }	  	compilable	  [FE]  EOFException  	137	12	add
1162	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }	  	compilable	  [FE]  EOFException  	137	12	add
1163	[BUG]  [BUGGY]  Nid  nid  =  header.readUnsignedInt();  [CE]  cannot  find  symbol  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  Nid  nid  =  header.readUnsignedInt();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	Nid  nid  =  header.readUnsignedInt();	  nid    =    header.readUnsignedInt()    +    1;    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
1164	[BUG]  [BUGGY]  nid  =  archive.readUnsignedInt()  +  1;  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  archive.readUnsignedInt()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  archive.readUnsignedInt()  +  1;	  nid    =    header.readUnsignedInt()    +    1;    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
1165	[BUG]  [BUGGY]  nid  =  NID.deferredBlockStreams  ||  nid  <  SIGNATURE_HEADER_SIZE;  [CE]  cannot  find  symbol  deferredBlockStreams  [FE]        EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.deferredBlockStreams  ||  nid  <  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.deferredBlockStreams  ||  nid  <  SIGNATURE_HEADER_SIZE;	  nid    =    NID.deferredBlockStreams;    	non-compiled	[CE]  cannot  find  symbol  deferredBlockStreams	91	None	replace
1166	[BUG]  [BUGGY]  nid  =  NID.deferredBlockStreams  ||  nid  ==  NID.deferredBlockStreams;  [CE]  cannot  find  symbol  deferredBlockStreams  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.deferredBlockStreams  ||  nid  ==  NID.deferredBlockStreams;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.deferredBlockStreams  ||  nid  ==  NID.deferredBlockStreams;	  nid    =    NID.deferredBlockStreams;    	non-compiled	[CE]  cannot  find  symbol  deferredBlockStreams	91	None	replace
1167	[BUG]  [BUGGY]  nid  =  NID.deferredBlockStreams  ||  nid!=  SIGNATURE_HEADER_SIZE;  [CE]  cannot  find  symbol  deferredBlockStreams  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.deferredBlockStreams  ||  nid!=  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.deferredBlockStreams  ||  nid!=  SIGNATURE_HEADER_SIZE;	  nid    =    NID.deferredBlockStreams;    	non-compiled	[CE]  cannot  find  symbol  deferredBlockStreams	91	None	replace
1168	[BUG]  [BUGGY]  nid  =  NID.deferredBlockStreams  ||  nid  >  SIGNATURE_HEADER_SIZE;  [CE]  cannot  find  symbol  deferredBlockStreams  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.deferredBlockStreams  ||  nid  >  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.deferredBlockStreams  ||  nid  >  SIGNATURE_HEADER_SIZE;	  nid    =    NID.deferredBlockStreams;    	non-compiled	[CE]  cannot  find  symbol  deferredBlockStreams	91	None	replace
1169	[BUG]  [BUGGY]  nid  =  path.readUnsignedByte();  [CE]  cannot  find  symbol  path  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  path.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  path.readUnsignedByte();	  nid    =    archive.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  path	57	None	replace
1170	[BUG]  [BUGGY]  nid  =  this.archive.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  this.archive.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  this.archive.readUnsignedByte();	  nid    =    archive.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
1171	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0]  [CE]  ';'  expected  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0]  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0]	  	non-compiled	[CE]  ';'  expected	143	None	add
1172	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  this.deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  assign  a  value  to  final  variable  deferredBlockStreams  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  this.deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo  +  1;  this.deferredBlockStreams  =  new  ArrayList  <  String>();	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    this.deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  deferredBlockStreams	104	None	replace
1173	[BUG]  [BUGGY]  this.deferredBlockStreams  =  new  ArrayList  <  String>();  [CE]  cannot  assign  a  value  to  final  variable  deferredBlockStreams  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  this.deferredBlockStreams  =  new  ArrayList  <  String>();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	this.deferredBlockStreams  =  new  ArrayList  <  String>();	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    this.deferredBlockStreams    =    new    ArrayList    <    String>();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  deferredBlockStreams	104	None	replace
1174	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  +  fileName;  nid  =  SIGNATURE_HEADER_SIZE;  [CE]  incompatible  types  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  fileName;  nid  =  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo  +  fileName;  nid  =  SIGNATURE_HEADER_SIZE;	  nid    =    NID.kUnpackInfo;    nid    =    SIGNATURE_HEADER_SIZE;    	non-compiled	[CE]  incompatible  types	24	None	replace
1175	[BUG]  [BUGGY]  InputStream  file  =  inputStreamStack.getInputStream(nid);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  inputStreamStack  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  InputStream  file  =  inputStreamStack.getInputStream(nid);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	InputStream  file  =  inputStreamStack.getInputStream(nid);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.getInputStream(nid);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	43	None	replace
1176	[BUG]  [BUGGY]  nid  =  source.readUnsignedByte();  InputStream  file  =  inputStreamStack.getInputStream(nid);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  source  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  source.readUnsignedByte();  InputStream  file  =  inputStreamStack.getInputStream(nid);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  source.readUnsignedByte();  InputStream  file  =  inputStreamStack.getInputStream(nid);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.getInputStream(nid);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  source	43	None	replace
1177	[BUG]  [BUGGY]  int  nid  =  NID.kUnpackInfo(currentFolderIndex);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                        NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  NID.kUnpackInfo(currentFolderIndex);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  NID.kUnpackInfo(currentFolderIndex);	  int    nid    =    NID.kUnpackInfo();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	52	None	replace
1178	[BUG]  [BUGGY]  int  nid  =  NID.deferredBlockInfo();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  NID.deferredBlockInfo();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  NID.deferredBlockInfo();	  int    nid    =    NID.kUnpackInfo();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	52	None	replace
1179	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  Integer  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  Integer  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    Integer  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	161	None	add
1180	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	161	12	add
1181	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	161	12	add
1182	[BUG]  [BUGGY]  nid  =  NID.packInfo  +  1;  [CE]  cannot  find  symbol  packInfo  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.packInfo  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.packInfo  +  1;	  nid    =    NID.kUnpackInfo    +    1;    	non-compiled	[CE]  cannot  find  symbol  packInfo	69	None	replace
1183	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo(fileName);  [CE]  cannot  find  symbol  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo(fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo(fileName);	  nid    =    NID.kUnpackInfo(header);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
1184	[BUG]  [BUGGY]  [FE]  IOException  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	36	12	replace
1185	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  IOException  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	36	12	replace
1186	[BUG]  [BUGGY]  [FE]  IOException  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	36	12	replace
1187	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  IOException  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  NID.kSubStreamsInfo  ||  nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	36	12	replace
1188	[BUG]  [BUGGY]  [FE]  IOException  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	36	12	replace
1189	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  [FE]  IOException  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	36	12	replace
1190	[BUG]  [BUGGY]  [FE]  IOException  [FE]                  EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	36	12	replace
1191	[BUG]  [BUGGY]  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [FE]  IOException  [FE]                  EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	36	12	replace
1192	[BUG]  [BUGGY]  int  nid  =  NID.kUnpackInfo;  ((  RandomAccessFile)nid).readUnpackInfo();  nid  =  NID.kUnpackInfo;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  NID.kUnpackInfo;  ((  RandomAccessFile)nid).readUnpackInfo();  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  NID.kUnpackInfo;  ((  RandomAccessFile)nid).readUnpackInfo();  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    ((    RandomAccessFile)nid).readUnpackInfo();    nid    =    NID.kUnpackInfo;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	22	None	replace
1193	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(length,  archive);  [CE]  cannot  find  symbol  length  [FE]            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(length,  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(length,  archive);	  nid    =    header.readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol  length	78	None	replace
1194	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(currentFolderIndex,  nid);  [CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;  [FE]        EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte(currentFolderIndex,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte(currentFolderIndex,  nid);	  nid    =    file.readUnsignedByte(nid);    	non-compiled	[CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;	151	None	replace
1195	[BUG]  [BUGGY]  [FE]  IOException  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	21	12	replace
1196	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  IOException  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  NID.kUnpackInfo  ||  nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	21	12	replace
1197	[BUG]  [BUGGY]  [FE]  IOException  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  }	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	21	12	replace
1198	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  }  [FE]  IOException  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  NID.kUnpackInfo)  {  nid  =  NID.kUnpackInfo;  }	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    	compilable	  [FE]  IOException  	21	12	replace
1199	[BUG]  [BUGGY]  nid  =  Archive.readUnpackInfo(header,  archive);  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  Archive.readUnpackInfo(header,  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  Archive.readUnpackInfo(header,  archive);	  nid    =    NID.readUnpackInfo(header,    archive);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
1200	[BUG]  [BUGGY]  nid  =  NID.subStreamsInfo.length;  nid  =  NID.kSubStreamsInfo;  [CE]  cannot  find  symbol  subStreamsInfo  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.subStreamsInfo.length;  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.subStreamsInfo.length;  nid  =  NID.kSubStreamsInfo;	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    	non-compiled	[CE]  cannot  find  symbol  subStreamsInfo	34	None	replace
1201	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(file!=  null)  {  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	if(file!=  null)  {  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  }	  nid    =    file.readUnsignedByte();    ((    RandomAccessFile)file).readUnsignedByte();    nid    =    file.readUnsignedByte();    	compilable	  [FE]  EOFException  	124	12	replace
1202	[BUG]  [BUGGY]  if(file!=  null)  {  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(file!=  null)  {  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(file!=  null)  {  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  }	  nid    =    file.readUnsignedByte();    ((    RandomAccessFile)file).readUnsignedByte();    nid    =    file.readUnsignedByte();    	compilable	  [FE]  EOFException  	124	12	replace
1203	[BUG]  [BUGGY]  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(file!=  null)  {  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	if(file!=  null)  {  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    file.readUnsignedByte();    ((    RandomAccessFile)file).readUnsignedByte();    nid    =    file.readUnsignedByte();    	compilable	  [FE]  EOFException  	124	12	replace
1204	[BUG]  [BUGGY]  if(file!=  null)  {  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  EOFException  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(file!=  null)  {  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(file!=  null)  {  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    file.readUnsignedByte();    ((    RandomAccessFile)file).readUnsignedByte();    nid    =    file.readUnsignedByte();    	compilable	  [FE]  EOFException  	124	12	replace
1205	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  NID.kSubStreamsInfo;  nid  =  NID.subStreamsInfo;  nid  =  NID.kSubStreamsInfo;  [CE]  cannot  find  symbol  subStreamsInfo  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    nid  =  NID.kSubStreamsInfo;  nid  =  NID.subStreamsInfo;  nid  =  NID.kSubStreamsInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        nid    =    NID.kSubStreamsInfo;    nid  =  NID.subStreamsInfo;  nid  =  NID.kSubStreamsInfo;	  	non-compiled	[CE]  cannot  find  symbol  subStreamsInfo	33	None	add
1206	[BUG]  [BUGGY]  nid  =  NID.bindBlocks;  [CE]  cannot  find  symbol  bindBlocks  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bindBlocks;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bindBlocks;	  nid    =    NID.bindings;    	non-compiled	[CE]  cannot  find  symbol  bindBlocks	92	None	replace
1207	[BUG]  [BUGGY]  nid  =  NID.bindings(fileName);  [CE]  cannot  find  symbol  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bindings(fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bindings(fileName);	  nid    =    NID.bindings;    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
1208	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  Integer  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  Integer  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    Integer  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	154	None	add
1209	[BUG]  [BUGGY]  nid  =  archive.bytesUnpackInfo();  [CE]  cannot  find  symbol  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  archive.bytesUnpackInfo();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  archive.bytesUnpackInfo();	  nid    =    NID.bytesUnpackInfo();    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
1210	[BUG]  [BUGGY]  Nid  nid  =  nid.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  Nid  nid  =  nid.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	Nid  nid  =  nid.readUnsignedByte();	  Nid    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
1211	[BUG]  [BUGGY]  Nid  nid  =  encodeStreams(header,  archive.readUnsignedByte());  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  Nid  nid  =  encodeStreams(header,  archive.readUnsignedByte());  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	Nid  nid  =  encodeStreams(header,  archive.readUnsignedByte());	  Nid    nid    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
1212	[BUG]  [BUGGY]  nid  =  nid.substring(0,  NID.kUnpackInfo);  [CE]  int  cannot  be  dereferenced  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid.substring(0,  NID.kUnpackInfo);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  nid.substring(0,  NID.kUnpackInfo);	  nid    =    NID.substring(0,    nid);    	non-compiled	[CE]  int  cannot  be  dereferenced	168	None	replace
1213	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  ((  RandomAccessFile)file).folders.add(new  File(nid,  fileName));  nid  =  file.readUnsignedByte()  +  1;  [CE]  no  suitable  constructor  found  for  File(int,String)  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  ((  RandomAccessFile)file).folders.add(new  File(nid,  fileName));  nid  =  file.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    file.readUnsignedByte()    +    1;    ((  RandomAccessFile)file).folders.add(new  File(nid,  fileName));  nid  =  file.readUnsignedByte()  +  1;	  	non-compiled	[CE]  no  suitable  constructor  found  for  File(int,String)	116	None	add
1214	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  ((  RandomAccessFile)file).folders.add(new  File(nid,  NID.name));  nid  =  file.readUnsignedByte()  +  1;  [CE]  cannot  find  symbol  name  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte()  +  1;  ((  RandomAccessFile)file).folders.add(new  File(nid,  NID.name));  nid  =  file.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    file.readUnsignedByte()    +    1;    ((  RandomAccessFile)file).folders.add(new  File(nid,  NID.name));  nid  =  file.readUnsignedByte()  +  1;	  	non-compiled	[CE]  cannot  find  symbol  name	116	None	add
1215	[BUG]  [BUGGY]  nid  =  NID.bytesToIntByte();  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesToIntByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesToIntByte();	  nid    =    NID.bytesToIntByteArray;    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
1216	[BUG]  [BUGGY]  nid  =  NID.bytesToIntByteArray  |  SIGNATURE_HEADER_SIZE;  [CE]  cannot  find  symbol  bytesToIntByteArray  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesToIntByteArray  |  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesToIntByteArray  |  SIGNATURE_HEADER_SIZE;	  nid    =    NID.bytesToIntByteArray;    	non-compiled	[CE]  cannot  find  symbol  bytesToIntByteArray	90	None	replace
1217	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte()  +  1;  InputStream  nid  =  header.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte()  +  1;  InputStream  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  header.readUnsignedByte()  +  1;  InputStream  nid  =  header.readUnsignedByte()  +  1;	  nid    =    header.readUnsignedByte()    +    1;    InputStream    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	95	None	replace
1218	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [CE]  cannot  find  symbol  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  cannot  find  symbol	148	None	replace
1219	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1]  [CE]  ';'  expected  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1]  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1]	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  ';'  expected	148	None	replace
1220	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[  [CE]  illegal  start  of  expression  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
1221	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1  [CE]  ']'  expected  [FE]          EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[1	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  ']'  expected	148	None	replace
1222	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  cannot  find  symbol  [FE]            EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  cannot  find  symbol	148	None	replace
1223	[BUG]  [BUGGY]  nid  =  NID.intValue;  nid  =  NID.intValue;  [CE]  cannot  find  symbol  intValue  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.intValue;  nid  =  NID.intValue;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.intValue;  nid  =  NID.intValue;	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    	non-compiled	[CE]  cannot  find  symbol  intValue	19	None	replace
1224	[BUG]  [BUGGY]  nid  =  NID.intValue;  nid  =  NID.kUnpackInfo;  [CE]  cannot  find  symbol  intValue  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.intValue;  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.intValue;  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    	non-compiled	[CE]  cannot  find  symbol  intValue	19	None	replace
1225	[BUG]  [BUGGY]  nid  =  NID.intValue();  nid  =  NID.kUnpackInfo;  [CE]  cannot  find  symbol  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.intValue();  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.intValue();  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
1226	[BUG]  [BUGGY]  nid  =  NID.bytesToIntByteArray();  nid  =  NID.kUnpackInfo;  [CE]  cannot  find  symbol  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesToIntByteArray();  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesToIntByteArray();  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
1227	[BUG]  [BUGGY]  int  nid  =  NID.kSubStreamsInfo  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  NID.kSubStreamsInfo  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  NID.kSubStreamsInfo  +  1;	  nid    =    NID.kSubStreamsInfo;    int    nid    =    NID.kSubStreamsInfo;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	35	None	replace
1228	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(currentFolder,  header);  [CE]  cannot  find  symbol  currentFolder  [FE]        EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte(currentFolder,  header);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte(currentFolder,  header);	  nid    =    file.readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	114	None	replace
1229	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(length,  header);  [CE]  cannot  find  symbol  length  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte(length,  header);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte(length,  header);	  nid    =    file.readUnsignedByte(header);    	non-compiled	[CE]  cannot  find  symbol  length	114	None	replace
1230	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo;  System.arraycopy(file,  0,  nid);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  System.arraycopy(file,  0,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo;  System.arraycopy(file,  0,  nid);	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    System.arraycopy(currentFolder,    0,    nid);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	26	None	replace
1231	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  System.arraycopy(currentFolder,  0,  nid);  [CE]  cannot  find  symbol  currentFolder  [FE]                      IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  System.arraycopy(currentFolder,  0,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo  +  1;  System.arraycopy(currentFolder,  0,  nid);	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    System.arraycopy(currentFolder,    0,    nid);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	26	None	replace
1232	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo;  System.arraycopy(inputStreamStack,  0,  nid);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  System.arraycopy(inputStreamStack,  0,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo;  System.arraycopy(inputStreamStack,  0,  nid);	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    System.arraycopy(currentFolder,    0,    nid);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	26	None	replace
1233	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  Integer  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  Integer  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[1];    }    Integer  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[1];  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	158	None	add
1234	[BUG]  [BUGGY]  nid  =  NID.bytes  ||  nid!=  SIGNATURE_HEADER_SIZE;  [CE]  cannot  find  symbol  bytes  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytes  ||  nid!=  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytes  ||  nid!=  SIGNATURE_HEADER_SIZE;	  nid    =    NID.bytes;    	non-compiled	[CE]  cannot  find  symbol  bytes	31	None	replace
1235	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(NID.folder);  [CE]  cannot  find  symbol  folder  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(NID.folder);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList  <  Folder>(NID.folder);	          archive.folders    =    new    ArrayList    <    Folder>(length);    	non-compiled	[CE]  cannot  find  symbol  folder	14	None	replace
1236	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(NID.folder_SIZE);  [CE]  cannot  find  symbol  folder_SIZE  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(NID.folder_SIZE);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList  <  Folder>(NID.folder_SIZE);	          archive.folders    =    new    ArrayList    <    Folder>(length);    	non-compiled	[CE]  cannot  find  symbol  folder_SIZE	14	None	replace
1237	[BUG]  [BUGGY]  InputStream  file  =  inputStreamStack.getInputStream(fileName);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  inputStreamStack  [FE]        EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  InputStream  file  =  inputStreamStack.getInputStream(fileName);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	InputStream  file  =  inputStreamStack.getInputStream(fileName);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.getInputStream(fileName);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	135	None	replace
1238	[BUG]  [BUGGY]  nid  =  source.readUnsignedByte();  InputStream  file  =  inputStreamStack.getInputStream(fileName);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  source  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  source.readUnsignedByte();  InputStream  file  =  inputStreamStack.getInputStream(fileName);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  source.readUnsignedByte();  InputStream  file  =  inputStreamStack.getInputStream(fileName);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.getInputStream(fileName);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  source	135	None	replace
1239	[BUG]  [BUGGY]  nid  =  NID.signature;  [CE]  cannot  find  symbol  signature  [FE]        IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.signature;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.signature;	  nid    =    NID.fileName;    	non-compiled	[CE]  cannot  find  symbol  signature	88	None	replace
1240	[BUG]  [BUGGY]  nid  =  SIGNATURE_HEADER_SIZE;  System.arraycopy(currentFolderIndex,  nid,  0,  archive.folders);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                  EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  SIGNATURE_HEADER_SIZE;  System.arraycopy(currentFolderIndex,  nid,  0,  archive.folders);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  SIGNATURE_HEADER_SIZE;  System.arraycopy(currentFolderIndex,  nid,  0,  archive.folders);	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    System.arraycopy(currentFolderIndex,    nid,    0,    archive.folders);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	39	None	replace
1241	[BUG]  [BUGGY]  System.arraycopy(currentFolderIndex,  nid,  0,  archive.folders);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                    EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  System.arraycopy(currentFolderIndex,  nid,  0,  archive.folders);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	System.arraycopy(currentFolderIndex,  nid,  0,  archive.folders);	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    System.arraycopy(currentFolderIndex,    nid,    0,    archive.folders);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	39	None	replace
1242	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  System.arraycopy(fileName  [CE]  ')'  expected  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  System.arraycopy(fileName  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  System.arraycopy(fileName	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    System.arraycopy(fileName,    0,    nid,    0,    nid);    	non-compiled	[CE]  ')'  expected	64	None	replace
1243	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  if  (nid  ==  NID.kPackInfo)  {  readUnpackInfo(header,  archive);  nid  =  nid;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid    =    nid;    if  (nid  ==  NID.kPackInfo)  {  readUnpackInfo(header,  archive);  nid  =  nid;  }	  	compilable	  [FE]  NoClassDefFoundError  	128	12	add
1244	[BUG]  [BUGGY]  nid  =  nid;  if  (nid  ==  NID.kPackInfo)  {  readUnpackInfo(header,  archive);  nid  =  nid;  }  [FE]  NoClassDefFoundError  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  if  (nid  ==  NID.kPackInfo)  {  readUnpackInfo(header,  archive);  nid  =  nid;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    nid;    if  (nid  ==  NID.kPackInfo)  {  readUnpackInfo(header,  archive);  nid  =  nid;  }	  	compilable	  [FE]  NoClassDefFoundError  	128	12	add
1245	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  if  (nid  ==  NID.kPackInfo)  {  readUnpackInfo(header,  archive);  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid    =    nid;    if  (nid  ==  NID.kPackInfo)  {  readUnpackInfo(header,  archive);  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	128	12	add
1246	[BUG]  [BUGGY]  nid  =  nid;  if  (nid  ==  NID.kPackInfo)  {  readUnpackInfo(header,  archive);  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  if  (nid  ==  NID.kPackInfo)  {  readUnpackInfo(header,  archive);  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    nid;    if  (nid  ==  NID.kPackInfo)  {  readUnpackInfo(header,  archive);  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	128	12	add
1247	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  nid;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid    =    nid;    if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  nid;  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	128	12	add
1248	[BUG]  [BUGGY]  nid  =  nid;  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  nid;  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]        IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  nid;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    nid;    if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  nid;  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	128	12	add
1249	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid    =    nid;    if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	128	12	add
1250	[BUG]  [BUGGY]  nid  =  nid;  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]          IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    nid;    if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	128	12	add
1251	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  if  (nid  <  0)  {  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid    =    nid;    if  (nid  <  0)  {  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	128	12	add
1252	[BUG]  [BUGGY]  nid  =  nid;  if  (nid  <  0)  {  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  ArrayIndexOutOfBoundsException  [FE]            IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  if  (nid  <  0)  {  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    nid;    if  (nid  <  0)  {  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	128	12	add
1253	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  if  (nid  ==  NID.kPackInfo)  {  readUnpackInfo(header,  archive);  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid    =    nid;    if  (nid  ==  NID.kPackInfo)  {  readUnpackInfo(header,  archive);  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  NullPointerException  	128	12	add
1254	[BUG]  [BUGGY]  nid  =  nid;  if  (nid  ==  NID.kPackInfo)  {  readUnpackInfo(header,  archive);  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[1];  }  [FE]  NullPointerException  [FE]              IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  if  (nid  ==  NID.kPackInfo)  {  readUnpackInfo(header,  archive);  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    nid;    if  (nid  ==  NID.kPackInfo)  {  readUnpackInfo(header,  archive);  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  NullPointerException  	128	12	add
1255	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  if  (nid  <  0)  {  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid    =    nid;    if  (nid  <  0)  {  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  NullPointerException  	128	12	add
1256	[BUG]  [BUGGY]  nid  =  nid;  if  (nid  <  0)  {  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[1];  }  [FE]  NullPointerException  [FE]                IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid;  if  (nid  <  0)  {  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    nid;    if  (nid  <  0)  {  nid  =  nid;  }  else  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  NullPointerException  	128	12	add
1257	[BUG]  [BUGGY]  nid  =  archive.readUnpackInfo();  [CE]  cannot  find  symbol  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  archive.readUnpackInfo();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  archive.readUnpackInfo();	  nid    =    NID.readUnpackInfo();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
1258	[BUG]  [BUGGY]  nid  =  file.readUnpackInfo();  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnpackInfo();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnpackInfo();	  nid    =    NID.readUnpackInfo();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
1259	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  EOFException  	145	12	add
1260	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    }    else    {    archive.folders    =    new    Folder[0];    }    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  EOFException  	145	12	add
1261	[BUG]  [BUGGY]  nid  =  inputStreamStack.size();  [CE]  cannot  find  symbol  inputStreamStack  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  inputStreamStack.size();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  inputStreamStack.size();	  nid    =    NID.kSubStreamsInfo;    if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	138	None	replace
1262	[BUG]  [BUGGY]  nid    =    file.readUnsignedByte();    ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  InputStream  file  =  inputStreamStack.peek();  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  inputStreamStack  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    file.readUnsignedByte();    ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  InputStream  file  =  inputStreamStack.peek();  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        file.readUnsignedByte();        ((    RandomAccessFile)file).readUnsignedByte();    nid    =    file.readUnsignedByte();    InputStream  file  =  inputStreamStack.peek();  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();	  	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	123	None	add
1263	[BUG]  [BUGGY]  nid    =    file.readUnsignedByte();    ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  InputStream  file  =  inputStreamStack.peek();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  inputStreamStack  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    file.readUnsignedByte();    ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  InputStream  file  =  inputStreamStack.peek();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        file.readUnsignedByte();        ((    RandomAccessFile)file).readUnsignedByte();    nid    =    file.readUnsignedByte();    InputStream  file  =  inputStreamStack.peek();  ((  RandomAccessFile)file).readUnsignedByte();  nid  =  file.readUnsignedByte();	  	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	123	None	add
1264	[BUG]  [BUGGY]  nid  =  inputStreamStack.readUnsignedByte(header,  fileName);  [CE]  cannot  find  symbol  inputStreamStack  [FE]                          NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  inputStreamStack.readUnsignedByte(header,  fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  inputStreamStack.readUnsignedByte(header,  fileName);	  nid    =    header.readUnsignedByte(nid,    fileName);    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	7	None	replace
1265	[BUG]  [BUGGY]  nid  =  fileName.readUnsignedByte(header,  archive);  [CE]  cannot  find  symbol  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  fileName.readUnsignedByte(header,  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  fileName.readUnsignedByte(header,  archive);	  nid    =    header.readUnsignedByte(nid,    fileName);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
1266	[BUG]  [BUGGY]  nid  =  file.readUnsignedByte(header,  fileName);  [CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  file.readUnsignedByte(header,  fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  file.readUnsignedByte(header,  fileName);	  nid    =    header.readUnsignedByte(nid,    fileName);    	non-compiled	[CE]  method  readUnsignedByte  in  class  RandomAccessFile  cannot  be  applied  to  given  types;	7	None	replace
1267	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(data,  fileName);  [CE]  cannot  find  symbol  data  [FE]                                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(data,  fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(data,  fileName);	  nid    =    header.readUnsignedByte(nid,    fileName);    	non-compiled	[CE]  cannot  find  symbol  data	7	None	replace
1268	[BUG]  [BUGGY]  nid  =  JsonStringEncoder.getInstance().encodeAsStream( "UTF-8 ");  [CE]  cannot  find  symbol  JsonStringEncoder  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  JsonStringEncoder.getInstance().encodeAsStream( "UTF-8 ");  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  JsonStringEncoder.getInstance().encodeAsStream( "UTF-8 ");	  nid    =    0;    	non-compiled	[CE]  cannot  find  symbol  JsonStringEncoder	132	None	replace
1269	[BUG]  [BUGGY]  nid  =  JsonStringEncoder.getInstance().encodeAsBlock(fileName);  [CE]  cannot  find  symbol  JsonStringEncoder  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  JsonStringEncoder.getInstance().encodeAsBlock(fileName);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  JsonStringEncoder.getInstance().encodeAsBlock(fileName);	  nid    =    0;    	non-compiled	[CE]  cannot  find  symbol  JsonStringEncoder	132	None	replace
1270	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  nid  =  SIGNATURE_HEADER_SIZE  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid    =    NID.kUnpackInfo    +    1;    nid  =  SIGNATURE_HEADER_SIZE  +  1;	  	compilable	  [FE]  NoClassDefFoundError  	68	12	add
1271	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  nid  =  SIGNATURE_HEADER_SIZE  +  1;  [FE]  NoClassDefFoundError  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  nid  =  SIGNATURE_HEADER_SIZE  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    NID.kUnpackInfo    +    1;    nid  =  SIGNATURE_HEADER_SIZE  +  1;	  	compilable	  [FE]  NoClassDefFoundError  	68	12	add
1272	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  nid  =  NID.kUnpackInfo  +  1;  this.inputStreamStack.push(new  FileInputStream(fileName));  [CE]  cannot  find  symbol  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  nid  =  NID.kUnpackInfo  +  1;  this.inputStreamStack.push(new  FileInputStream(fileName));  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    NID.kUnpackInfo    +    1;    nid  =  NID.kUnpackInfo  +  1;  this.inputStreamStack.push(new  FileInputStream(fileName));	  	non-compiled	[CE]  cannot  find  symbol	68	None	add
1273	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  nid  =  NID.kUnpackInfo  +  1;  }  else  {  archive.folders  =  new  Folder[0];  [CE]  'else'  without  'if'  [FE]        EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  nid  =  NID.kUnpackInfo  +  1;  }  else  {  archive.folders  =  new  Folder[0];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    NID.kUnpackInfo    +    1;    nid  =  NID.kUnpackInfo  +  1;  }  else  {  archive.folders  =  new  Folder[0];	  	non-compiled	[CE]  'else'  without  'if'	68	None	add
1274	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  nid  =  NID.kUnpackInfo  +  1;  this.inputStreamStack.push(new  InputStreamReader(fileName));  [CE]  cannot  find  symbol  [FE]          EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  1;  nid  =  NID.kUnpackInfo  +  1;  this.inputStreamStack.push(new  InputStreamReader(fileName));  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    NID.kUnpackInfo    +    1;    nid  =  NID.kUnpackInfo  +  1;  this.inputStreamStack.push(new  InputStreamReader(fileName));	  	non-compiled	[CE]  cannot  find  symbol	68	None	add
1275	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  NID.kUnpackInfo;  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    writeUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	160	12	replace
1276	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo;  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [FE]  java.io.IOException:  Expected  kFolder  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo;  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    writeUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	160	12	replace
1277	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo;  writer.writeUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [CE]  cannot  find  symbol  writer  [FE]                  IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  writer.writeUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo;  writer.writeUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    writeUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    	non-compiled	[CE]  cannot  find  symbol  writer	160	None	replace
1278	[BUG]  [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  System.arra  [CE]  not  a  statement  [FE]                IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  System.arra  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  SIGNATURE_HEADER_SIZE)  {  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte()  +  1;  }  else  {  archive.folders  =  new  Folder[0];  System.arra	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    System.arraycopy(currentFolder,    0,    nid,    currentFolderIndex);    	non-compiled	[CE]  not  a  statement	63	None	replace
1279	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	18	12	add
1280	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	18	12	add
1281	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	18	12	add
1282	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	18	12	add
1283	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	18	12	add
1284	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	18	12	add
1285	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	18	12	add
1286	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	18	12	add
1287	[BUG]  [BUGGY]  nid  =  NID.folders  ||  nid  <  SIGNATURE_HEADER_SIZE;  [CE]  cannot  find  symbol  folders  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.folders  ||  nid  <  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.folders  ||  nid  <  SIGNATURE_HEADER_SIZE;	  nid    =    NID.folders;    	non-compiled	[CE]  cannot  find  symbol  folders	29	None	replace
1288	[BUG]  [BUGGY]  nid  =  NID.files;  [CE]  cannot  find  symbol  files  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.files;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.files;	  nid    =    NID.folders;    	non-compiled	[CE]  cannot  find  symbol  files	29	None	replace
1289	[BUG]  [BUGGY]  nid  =  NID.folders  ||  nid!=  SIGNATURE_HEADER_SIZE;  [CE]  cannot  find  symbol  folders  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.folders  ||  nid!=  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.folders  ||  nid!=  SIGNATURE_HEADER_SIZE;	  nid    =    NID.folders;    	non-compiled	[CE]  cannot  find  symbol  folders	29	None	replace
1290	[BUG]  [BUGGY]  nid  =  NID.folders  ||  nid  >=  SIGNATURE_HEADER_SIZE;  [CE]  cannot  find  symbol  folders  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.folders  ||  nid  >=  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.folders  ||  nid  >=  SIGNATURE_HEADER_SIZE;	  nid    =    NID.folders;    	non-compiled	[CE]  cannot  find  symbol  folders	29	None	replace
1291	[BUG]  [BUGGY]  nid  =  nextHeaderSizeInt.kUnpackInfo();  [CE]  cannot  find  symbol  nextHeaderSizeInt  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nextHeaderSizeInt.kUnpackInfo();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  nextHeaderSizeInt.kUnpackInfo();	  nid    =    archive.kUnpackInfo();    	non-compiled	[CE]  cannot  find  symbol  nextHeaderSizeInt	166	None	replace
1292	[BUG]  [BUGGY]  nid  =  dataInput.kUnpackInfo();  [CE]  cannot  find  symbol  dataInput  [FE]                      NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  dataInput.kUnpackInfo();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  dataInput.kUnpackInfo();	  nid    =    archive.kUnpackInfo();    	non-compiled	[CE]  cannot  find  symbol  dataInput	166	None	replace
1293	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  Integer  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  Integer  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    Integer  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	139	None	add
1294	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	139	12	add
1295	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    if(nid  ==  NID.kSubStreamsInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	139	12	add
1296	[BUG]  [BUGGY]  [FE]  EOFException  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    nid    =    head.readUnsignedByte()    +    1;    	compilable	  [FE]  EOFException  	98	12	replace
1297	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte();  [FE]  EOFException  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte()  +  1;  nid  =  header.readUnsignedByte();	  nid    =    header.readUnsignedByte()    +    1;    nid    =    head.readUnsignedByte()    +    1;    	compilable	  [FE]  EOFException  	98	12	replace
1298	[BUG]  [BUGGY]  nid  =  NID.bytesInfo  ||  nid  <  SIGNATURE_HEADER_SIZE;  [CE]  cannot  find  symbol  bytesInfo  [FE]        EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesInfo  ||  nid  <  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesInfo  ||  nid  <  SIGNATURE_HEADER_SIZE;	  nid    =    NID.bytesInfo;    	non-compiled	[CE]  cannot  find  symbol  bytesInfo	28	None	replace
1299	[BUG]  [BUGGY]  nid  =  NID.bytesInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE;  [CE]  cannot  find  symbol  bytesInfo  [FE]          EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesInfo  ||  nid  ==  SIGNATURE_HEADER_SIZE;	  nid    =    NID.bytesInfo;    	non-compiled	[CE]  cannot  find  symbol  bytesInfo	28	None	replace
1300	[BUG]  [BUGGY]  nid  =  NID.bytesInfo  ||  nid!=  SIGNATURE_HEADER_SIZE;  [CE]  cannot  find  symbol  bytesInfo  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.bytesInfo  ||  nid!=  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.bytesInfo  ||  nid!=  SIGNATURE_HEADER_SIZE;	  nid    =    NID.bytesInfo;    	non-compiled	[CE]  cannot  find  symbol  bytesInfo	28	None	replace
1301	[BUG]  [BUGGY]  nid  =  nid.substring(0,  nid);  [CE]  int  cannot  be  dereferenced  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid.substring(0,  nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  nid.substring(0,  nid);	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    }    	non-compiled	[CE]  int  cannot  be  dereferenced	164	None	replace
1302	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  NID);  [CE]  cannot  find  symbol  NID  [FE]              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  NID);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(currentFolderIndex,  NID);	  nid    =    header.readUnsignedByte(currentFolderIndex);    	non-compiled	[CE]  cannot  find  symbol  NID	79	None	replace
1303	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  nextHeaderSizeInt);  [CE]  cannot  find  symbol  nextHeaderSizeInt  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(currentFolderIndex,  nextHeaderSizeInt);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(currentFolderIndex,  nextHeaderSizeInt);	  nid    =    header.readUnsignedByte(currentFolderIndex);    	non-compiled	[CE]  cannot  find  symbol  nextHeaderSizeInt	79	None	replace
1304	[BUG]  [BUGGY]  int  nid  =  header.readUnsignedByte()  +  1;  InputStream  inputStreamStack  =  inputStreamStack.peek();  nid  =  header.readUnsignedByte()  +  1;  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  header.readUnsignedByte()  +  1;  InputStream  inputStreamStack  =  inputStreamStack.peek();  nid  =  header.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  header.readUnsignedByte()  +  1;  InputStream  inputStreamStack  =  inputStreamStack.peek();  nid  =  header.readUnsignedByte()  +  1;	  nid    =    header.readUnsignedByte()    +    1;    InputStream    inputStreamStack    =    inputStreamStack.peek();    nid    =    header.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	97	None	replace
1305	[BUG]  [BUGGY]  nid  =  source.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid);  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  source  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  source.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid);  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  source.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid);  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    ((    RandomAccessFile)file).folders.add(nid);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  source	45	None	replace
1306	[BUG]  [BUGGY]  Integer  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid);  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  Integer  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	Integer  nid  =  file.readUnsignedByte();  ((  RandomAccessFile)file).folders.add(nid);	  nid    =    file.readUnsignedByte();    ((    RandomAccessFile)file).folders.add(nid);    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	45	None	replace
1307	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(dataInput,  header,  archive);  [CE]  cannot  find  symbol  dataInput  [FE]                            NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(dataInput,  header,  archive);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(dataInput,  header,  archive);	  nid    =    header.readUnsignedByte(header,    archive);    	non-compiled	[CE]  cannot  find  symbol  dataInput	8	None	replace
1308	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(archive,  header);  [CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;  [FE]                              NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(archive,  header);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(archive,  header);	  nid    =    header.readUnsignedByte(header,    archive);    	non-compiled	[CE]  method  readUnsignedByte  in  interface  DataInput  cannot  be  applied  to  given  types;	8	None	replace
1309	[BUG]  [BUGGY]  NID.kUnpackInfo  =  nid;  [CE]  cannot  assign  a  value  to  final  variable  kUnpackInfo  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID.kUnpackInfo  =  nid;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID.kUnpackInfo  =  nid;	  NID.kUnpackInfo    =    header.readUnsignedByte();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  kUnpackInfo	55	None	replace
1310	[BUG]  [BUGGY]  nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  }  [CE]  illegal  start  of  type  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        file.readUnsignedByte();        nid    =    file.readUnsignedByte();    nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  }	  	non-compiled	[CE]  illegal  start  of  type	41	None	add
1311	[BUG]  [BUGGY]  nid  =  header.readUnsignedByte(0,  nid,  NID);  [CE]  cannot  find  symbol  NID  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  header.readUnsignedByte(0,  nid,  NID);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  header.readUnsignedByte(0,  nid,  NID);	  nid    =    header.readUnsignedByte(0,    nid);    	non-compiled	[CE]  cannot  find  symbol  NID	119	None	replace
1312	[BUG]  [BUGGY]  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	156	12	add
1313	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  java.io.IOException:  Expected  kFolder  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  java.io.IOException:  Expected  kFolder  	156	12	add
1314	[BUG]  [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  Integer  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kUnpackInfo;    if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  Integer  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kUnpackInfo;        if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    Integer  nid  =  NID.kUnpackInfo;  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	156	None	add
1315	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo  +  fileName;  this.inputStreamStack.push(new  FileInputStream(nid));  [CE]  incompatible  types  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo  +  fileName;  this.inputStreamStack.push(new  FileInputStream(nid));  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo  +  fileName;  this.inputStreamStack.push(new  FileInputStream(nid));	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    this.inputStreamStack.push(new    FileInputStream(fileName));    	non-compiled	[CE]  incompatible  types	103	None	replace
1316	[BUG]  [BUGGY]  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo.push(new  FileInputStream(fileName));  [CE]  cannot  find  symbol  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo.push(new  FileInputStream(fileName));  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kUnpackInfo;  nid  =  NID.kUnpackInfo.push(new  FileInputStream(fileName));	  nid    =    NID.kUnpackInfo;    nid    =    NID.kUnpackInfo;    this.inputStreamStack.push(new    FileInputStream(fileName));    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
1317	[BUG]  [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  System.arraycopy(head  [CE]  ')'  expected  [FE]                    IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  System.arraycopy(head  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	if(nid  ==  NID.kUnpackInfo)  {  nid  =  header.readUnsignedByte();  nid  =  header.readUnsignedByte();  }  else  {  archive.folders  =  new  Folder[0];  System.arraycopy(head	  nid    =    header.readUnsignedByte()    +    1;    nid    =    header.readUnsignedByte()    +    1;    }    else    {    archive.folders    =    new    Folder[0];    System.arraycopy(header,    0,    nid,    0,    nid);    	non-compiled	[CE]  ')'  expected	65	None	replace
1318	[BUG]  [BUGGY]  nid  =  NID.deferredBlockInfo.readUnsignedByte(header);  [CE]  cannot  find  symbol  deferredBlockInfo  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.deferredBlockInfo.readUnsignedByte(header);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.deferredBlockInfo.readUnsignedByte(header);	  nid    =    NID.deferredBlockInfo.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  deferredBlockInfo	87	None	replace
1319	[BUG]  [BUGGY]  nid  =  NID.deferredBlockInfo.readUnsignedByte()  +  1;  [CE]  cannot  find  symbol  deferredBlockInfo  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.deferredBlockInfo.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.deferredBlockInfo.readUnsignedByte()  +  1;	  nid    =    NID.deferredBlockInfo.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  deferredBlockInfo	87	None	replace
1320	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo;  System.arraycopy(fileName,  0,  nid,  currentFolderIndex);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo;  System.arraycopy(fileName,  0,  nid,  currentFolderIndex);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo;  System.arraycopy(fileName,  0,  nid,  currentFolderIndex);	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    System.arraycopy(currentFolder,    0,    nid,    currentFolderIndex);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	37	None	replace
1321	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo  +  1;  System.arraycopy(currentFolder,  0,  nid,  currentFolderIndex);  [CE]  cannot  find  symbol  currentFolder  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo  +  1;  System.arraycopy(currentFolder,  0,  nid,  currentFolderIndex);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo  +  1;  System.arraycopy(currentFolder,  0,  nid,  currentFolderIndex);	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    System.arraycopy(currentFolder,    0,    nid,    currentFolderIndex);    	non-compiled	[CE]  cannot  find  symbol  currentFolder	37	None	replace
1322	[BUG]  [BUGGY]  int  nid  =  nid.intValue();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  nid.intValue();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  nid.intValue();	  nid    =    nid.intValue();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	169	None	replace
1323	[BUG]  [BUGGY]  nid  =  nid.intValue()  +  1;  [CE]  int  cannot  be  dereferenced  [FE]            IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid.intValue()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  nid.intValue()  +  1;	  nid    =    nid.intValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	169	None	replace
1324	[BUG]  [BUGGY]  nid  =  nid.longValue();  [CE]  int  cannot  be  dereferenced  [FE]              IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid.longValue();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  nid.longValue();	  nid    =    nid.intValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	169	None	replace
1325	[BUG]  [BUGGY]  nid  =  NID.KUnpackInfo.readUnsignedByte(currentFolderIndex);  [CE]  cannot  find  symbol  KUnpackInfo  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.KUnpackInfo.readUnsignedByte(currentFolderIndex);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.KUnpackInfo.readUnsignedByte(currentFolderIndex);	  nid    =    NID.KUnpackInfo.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  KUnpackInfo	76	None	replace
1326	[BUG]  [BUGGY]  nid  =  NID.KUnpackInfo.readUnsignedByte(1);  [CE]  cannot  find  symbol  KUnpackInfo  [FE]                    NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.KUnpackInfo.readUnsignedByte(1);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.KUnpackInfo.readUnsignedByte(1);	  nid    =    NID.KUnpackInfo.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  KUnpackInfo	76	None	replace
1327	[BUG]  [BUGGY]  nid  =  NID.decodeSIGNATURE(nid);  [CE]  cannot  find  symbol  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.decodeSIGNATURE(nid);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.decodeSIGNATURE(nid);	  nid    =    NID.length;    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
1328	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo  +  fileName;  this.inputStreamStack.push(new  FileInputStream(nid));  [CE]  incompatible  types  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo  +  fileName;  this.inputStreamStack.push(new  FileInputStream(nid));  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo  +  fileName;  this.inputStreamStack.push(new  FileInputStream(nid));	  nid    =    NID.kSubStreamsInfo;    nid    =    NID.kSubStreamsInfo;    this.inputStreamStack.push(new    FileInputStream(fileName));    	non-compiled	[CE]  incompatible  types	38	None	replace
1329	[BUG]  [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(NID.folders);  [CE]  cannot  find  symbol  folders  [FE]          IOException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  archive.folders  =  new  ArrayList  <  Folder>(NID.folders);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	archive.folders  =  new  ArrayList  <  Folder>(NID.folders);	          archive.folders    =    new    ArrayList    <    Folder>(nid);    	non-compiled	[CE]  cannot  find  symbol  folders	10	None	replace
1330	[BUG]  [BUGGY]  int  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  int  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	int  nid  =  file.readUnsignedByte();  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	42	None	replace
1331	[BUG]  [BUGGY]          archive.folders  =  new  Folder[0];  archives.folders  =  new  Folder[0];  [CE]  cannot  find  symbol  archives  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          archive.folders  =  new  Folder[0];  archives.folders  =  new  Folder[0];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	                archive.folders    =    new    Folder[0];    archives.folders  =  new  Folder[0];	  	non-compiled	[CE]  cannot  find  symbol  archives	12	None	add
1332	[BUG]  [BUGGY]          archive.folders  =  new  Folder[0];  archive.  Folders  =  new  Folder[0];  [CE]  cannot  find  symbol  Folders  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]          archive.folders  =  new  Folder[0];  archive.  Folders  =  new  Folder[0];  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	                archive.folders    =    new    Folder[0];    archive.  Folders  =  new  Folder[0];	  	non-compiled	[CE]  cannot  find  symbol  Folders	12	None	add
1333	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo;  nid  =  0;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  NID.kSubStreamsInfo;  nid  =  0;	  nid    =    NID.kSubStreamsInfo;    nid    =    SIGNATURE_HEADER_SIZE;    	compilable	  [FE]  NoClassDefFoundError  	82	12	replace
1334	[BUG]  [BUGGY]  nid  =  NID.kSubStreamsInfo;  nid  =  0;  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.kSubStreamsInfo;  nid  =  0;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.kSubStreamsInfo;  nid  =  0;	  nid    =    NID.kSubStreamsInfo;    nid    =    SIGNATURE_HEADER_SIZE;    	compilable	  [FE]  NoClassDefFoundError  	82	12	replace
1335	[BUG]  [BUGGY]  nid  =  0;  ((  RandomAccessFile)nid).setValue(fileName);  nid  =  0;  [CE]  inconvertible  types  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  0;  ((  RandomAccessFile)nid).setValue(fileName);  nid  =  0;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    0;    ((  RandomAccessFile)nid).setValue(fileName);  nid  =  0;	  	non-compiled	[CE]  inconvertible  types	131	None	add
1336	[BUG]  [BUGGY]  nid  =  0;  ((  RandomAccessFile)nid).close();  nid  =  0;  [CE]  inconvertible  types  [FE]      NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  0;  ((  RandomAccessFile)nid).close();  nid  =  0;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    0;    ((  RandomAccessFile)nid).close();  nid  =  0;	  	non-compiled	[CE]  inconvertible  types	131	None	add
1337	[BUG]  [BUGGY]  nid  =  0;  ((  RandomAccessFile)nid).initCloseStreams();  nid  =  0;  [CE]  inconvertible  types  [FE]        NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  0;  ((  RandomAccessFile)nid).initCloseStreams();  nid  =  0;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    0;    ((  RandomAccessFile)nid).initCloseStreams();  nid  =  0;	  	non-compiled	[CE]  inconvertible  types	131	None	add
1338	[BUG]  [BUGGY]  nid  =  0;  ((  RandomAccessFile)nid).readData();  nid  =  0;  [CE]  inconvertible  types  [FE]          NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  0;  ((  RandomAccessFile)nid).readData();  nid  =  0;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    0;    ((  RandomAccessFile)nid).readData();  nid  =  0;	  	non-compiled	[CE]  inconvertible  types	131	None	add
1339	[BUG]  [BUGGY]  nid  =  0;  ((  RandomAccessFile)nid).data.length);  nid  =  0;  [CE]  not  a  statement  [FE]            NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  0;  ((  RandomAccessFile)nid).data.length);  nid  =  0;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    0;    ((  RandomAccessFile)nid).data.length);  nid  =  0;	  	non-compiled	[CE]  not  a  statement	131	None	add
1340	[BUG]  [BUGGY]  nid  =  0;  ((  RandomAccessFile)nid).init();  nid  =  0;  [CE]  inconvertible  types  [FE]              NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  0;  ((  RandomAccessFile)nid).init();  nid  =  0;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    0;    ((  RandomAccessFile)nid).init();  nid  =  0;	  	non-compiled	[CE]  inconvertible  types	131	None	add
1341	[BUG]  [BUGGY]  nid  =  0;  ((  RandomAccessFile)nid).getData();  nid  =  0;  [CE]  inconvertible  types  [FE]                NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  0;  ((  RandomAccessFile)nid).getData();  nid  =  0;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid    =    0;    ((  RandomAccessFile)nid).getData();  nid  =  0;	  	non-compiled	[CE]  inconvertible  types	131	None	add
1342	[BUG]  [BUGGY]  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  EOFException  	141	12	add
1343	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  EOFException  [FE]    EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  EOFException  	141	12	add
1344	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  Integer  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]      EOFException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  Integer  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    readSubStreamsInfo(header,    archive);    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    Integer  nid  =  NID.kSubStreamsInfo;  if(nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	141	None	add
1345	[BUG]  [BUGGY]  nid  =  NID.KUnpackInfo(header);  [CE]  cannot  find  symbol  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.KUnpackInfo(header);  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.KUnpackInfo(header);	  nid    =    NID.KUnpackInfo();    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
1346	[BUG]  [BUGGY]  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid  *  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid  =  nid  *  SIGNATURE_HEADER_SIZE;	  nid    =    nid;    	compilable	  [FE]  IOException  	129	12	replace
1347	[BUG]  [BUGGY]  nid  =  nid  *  SIGNATURE_HEADER_SIZE;  [FE]  IOException  [FE]    IOException    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  nid  *  SIGNATURE_HEADER_SIZE;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  nid  *  SIGNATURE_HEADER_SIZE;	  nid    =    nid;    	compilable	  [FE]  IOException  	129	12	replace
1348	[BUG]  [BUGGY]  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	add	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  NoClassDefFoundError  	149	12	add
1349	[BUG]  [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [FE]  NoClassDefFoundError  [FE]    NoClassDefFoundError    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid    =    NID.kSubStreamsInfo;    if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid        =        NID.kSubStreamsInfo;        if(nid    ==    NID.kSubStreamsInfo)    {    nid    =    NID.kSubStreamsInfo;    }    else    {    archive.folders    =    new    Folder[0];    }    if(nid  ==  NID.kSubStreamsInfo)  {  nid  =  NID.kSubStreamsInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  	compilable	  [FE]  NoClassDefFoundError  	149	12	add
1350	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [CE]  cannot  find  symbol  [FE]    java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
1351	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kPackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [CE]  cannot  find  symbol  [FE]      java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kPackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kPackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
1352	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1]  [CE]  ';'  expected  [FE]        java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1]  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[1]	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  ';'  expected	162	None	replace
1353	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[2];  }  [CE]  cannot  find  symbol  [FE]          java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[2];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[2];  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
1354	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [CE]  cannot  find  symbol  [FE]            java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte();  if(nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.kUnpackInfo;  }  else  {  archive.folders  =  new  Folder[0];  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
1355	[BUG]  [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.packInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.packInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [CE]  cannot  find  symbol  [FE]              java.io.IOException:  Expected  kFolder    [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  NID.readUnsignedByte();  if(nid  ==  NID.packInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.packInfo;  }  else  {  archive.folders  =  new  Folder[1];  }  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  NID.readUnsignedByte();  if(nid  ==  NID.packInfo)  {  readUnpackInfo(header,  archive);  nid  =  NID.packInfo;  }  else  {  archive.folders  =  new  Folder[1];  }	  nid    =    NID.kUnpackInfo;    if(nid    ==    NID.kUnpackInfo)    {    readUnpackInfo(header,    archive);    nid    =    NID.kUnpackInfo;    }    else    {    archive.folders    =    new    Folder[1];    }    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
1356	[BUG]  [BUGGY]  NID  nid  =  NID.kUnpackInfo.readUnsignedByte();  [CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)  [FE]                NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  NID  nid  =  NID.kUnpackInfo.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	NID  nid  =  NID.kUnpackInfo.readUnsignedByte();	  nid    =    NID.kUnpackInfo.readUnsignedByte()    +    1;    	non-compiled	[CE]  variable  nid  is  already  defined  in  method  readStreamsInfo(DataInput,Archive)	127	None	replace
1357	[BUG]  [BUGGY]  nid  =  archive.kUnpackInfo.readUnsignedByte()  +  1;  [CE]  cannot  find  symbol  kUnpackInfo  [FE]                  NoClassDefFoundError      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  archive.kUnpackInfo.readUnsignedByte()  +  1;  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  archive.kUnpackInfo.readUnsignedByte()  +  1;	  nid    =    NID.kUnpackInfo.readUnsignedByte()    +    1;    	non-compiled	[CE]  cannot  find  symbol  kUnpackInfo	127	None	replace
1358	[BUG]  [BUGGY]  InputStream  file  =  inputStreamStack.peek();  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  inputStreamStack  [FE]            EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  InputStream  file  =  inputStreamStack.peek();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	InputStream  file  =  inputStreamStack.peek();  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.peek();    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol  inputStreamStack	122	None	replace
1359	[BUG]  [BUGGY]  InputStream  file  =  header.peek();  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]              EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  InputStream  file  =  header.peek();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	InputStream  file  =  header.peek();  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.peek();    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
1360	[BUG]  [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.peek();  nid  =  file.readUnsignedByte();  [CE]  cannot  find  symbol  [FE]                EOFException      [CONTEXT]      private  void  readStreamsInfo(final  DataInput  header,  final  Archive  archive)  throws  IOException  {  int  nid  =  header.readUnsignedByte();  if  (nid  ==  NID.kPackInfo)  {  readPackInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  if  (nid  ==  NID.kUnpackInfo)  {  readUnpackInfo(header,  archive);      [BUGGY]  nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.peek();  nid  =  file.readUnsignedByte();  [BUGGY]      }  else  {  archive.folders  =  new  Folder[0];  }  if  (nid  ==  NID.kSubStreamsInfo)  {  readSubStreamsInfo(header,  archive);  nid  =  header.readUnsignedByte();  }  [CLASS]  SevenZFile  [METHOD]  readStreamsInfo  [RETURN_TYPE]  void  DataInput  header  Archive  archive  [VARIABLES]  byte[]  nextHeader  password  property  sevenZSignature  signature  DataInput  header  Archive  archive  boolean  RandomAccessFile  file  InputStream  currentFolderInputStream  inputStreamStack  ArrayList  deferredBlockStreams  String  fileName  int  SIGNATURE_HEADER_SIZE  currentEntryIndex  currentFolderIndex  firstPackStreamIndex  nextHeaderSizeInt  nid  	projects/Compress36/src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	0.9128709291752769	329	329	12	replace	nid  =  currentFolderInputStream.readUnsignedByte();  InputStream  file  =  currentFolderInputStream.peek();  nid  =  file.readUnsignedByte();	  nid    =    file.readUnsignedByte();    InputStream    file    =    inputStreamStack.peek();    nid    =    file.readUnsignedByte();    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
